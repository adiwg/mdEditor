'use strict';



;define("mdeditor/adapters/application", ["exports", "ember-local-storage/adapters/adapter"], function (_exports, _adapter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _adapter.default.extend({});
  _exports.default = _default;
});
;define("mdeditor/app", ["exports", "mdeditor/resolver", "ember-load-initializers", "mdeditor/config/environment"], function (_exports, _resolver, _emberLoadInitializers, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  let App;
  let events = {
    // add support for the blur event
    blur: 'blur'
  };

  //Ember.MODEL_FACTORY_INJECTIONS = true;

  App = Ember.Application.extend({
    modulePrefix: _environment.default.modulePrefix,
    podModulePrefix: _environment.default.podModulePrefix,
    Resolver: _resolver.default,
    customEvents: events
  });

  // window.mdProfile = {
  //   // record:{},contact:{},dictionary:{}
  // };

  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);

  //for bootstrap
  Ember.LinkComponent.reopen({
    attributeBindings: ['data-toggle', 'data-placement']
  });
  //for crumbly
  Ember.Route.reopen({
    //breadCrumb: null
    currentRouteModel: function currentRouteModel() {
      return this.modelFor(this.routeName);
    }
  });
  //for profiles
  Ember.Component.reopen({
    init() {
      this._super(...arguments);
      let profile = Ember.get(this, 'profile');
      let path = Ember.get(this, 'profilePath');
      let visibility = Ember.get(this, 'visibility');
      let isVisible = Ember.isNone(visibility) ? true : visibility;
      if (path !== undefined) {
        (true && !(path.charAt(0) !== '.') && Ember.assert("".concat(path, " is not a profile path!"), path.charAt(0) !== '.')); // generate profile definition
        // path.split('.').reduce((acc, curr, idx) => {
        //   let pp = idx ? `${acc}.${curr}` : curr;
        //   window.console.log(pp);
        //   if(!get(window.mdProfile, pp)) {
        //     set(window.mdProfile, pp, {
        //       //visible: true
        //     });
        //   }
        //   return pp;
        // }, '');
        Ember.defineProperty(this, 'isVisible', Ember.computed('profile.active', function () {
          if (!profile.activeComponents) {
            return isVisible;
          }
          return Ember.getWithDefault(profile.activeComponents, path, isVisible);
        }));
      }
    }
  });
  var _default = App;
  /**
  * Models for the mdEditor data store
  
  * @main data-models
  * @module mdeditor
  * @submodule data-models
  * @category docs
  */
  /**
   * Components used to create objects or arrays of objects.
   *
   * @module mdeditor
   * @submodule components-object
   * @main components-object
   * @category docs
   */
  /**
   * Components used to input scalar or arrays of scalar values.
   *
   * @module mdeditor
   * @submodule components-input
   * @main components-input
   * @category docs
   */
  /**
   * Components used as UI controls.
   *
   * @module mdeditor
   * @submodule components-control
   * @main components-control
   * @category docs
   */
  /**
   * Mixins.
   *
   * @module mdeditor
   * @submodule mixins
   * @main mixins
   * @category docs
   */
  _exports.default = _default;
});
;define("mdeditor/components/-dynamic-element-alt", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // avoiding reexport directly here because in some circumstances (ember-engines
  // for example) a simple reexport is transformed to `define.alias`,
  // unfortunately at the moment (ember-source@3.13) there is no _actual_
  // `@ember/component` module to alias so this causes issues
  //
  // tldr; we can replace this with a simple reexport when we can rely on Ember
  // actually providing a `@ember/component` module
  var _default = Ember.Component.extend();
  _exports.default = _default;
});
;define("mdeditor/components/-dynamic-element", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // avoiding reexport directly here because in some circumstances (ember-engines
  // for example) a simple reexport is transformed to `define.alias`,
  // unfortunately at the moment (ember-source@3.13) there is no _actual_
  // `@ember/component` module to alias so this causes issues
  //
  // tldr; we can replace this with a simple reexport when we can rely on Ember
  // actually providing a `@ember/component` module
  var _default = Ember.Component.extend();
  _exports.default = _default;
});
;define("mdeditor/components/-lf-get-outlet-state", ["exports", "liquid-fire/components/-lf-get-outlet-state"], function (_exports, _lfGetOutletState) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _lfGetOutletState.default;
    }
  });
});
;define("mdeditor/components/array-path-layer", ["exports", "ember-leaflet/components/array-path-layer"], function (_exports, _arrayPathLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _arrayPathLayer.default;
    }
  });
});
;define("mdeditor/components/base-layer", ["exports", "ember-leaflet/components/base-layer"], function (_exports, _baseLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _baseLayer.default;
    }
  });
});
;define("mdeditor/components/basic-dropdown-content", ["exports", "ember-basic-dropdown/components/basic-dropdown-content"], function (_exports, _basicDropdownContent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _basicDropdownContent.default;
    }
  });
});
;define("mdeditor/components/basic-dropdown-trigger", ["exports", "ember-basic-dropdown/components/basic-dropdown-trigger"], function (_exports, _basicDropdownTrigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _basicDropdownTrigger.default;
    }
  });
});
;define("mdeditor/components/basic-dropdown", ["exports", "ember-basic-dropdown/components/basic-dropdown"], function (_exports, _basicDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _basicDropdown.default;
    }
  });
});
;define("mdeditor/components/bread-crumb", ["exports", "ember-crumbly/components/bread-crumb"], function (_exports, _breadCrumb) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _breadCrumb.default;
    }
  });
});
;define("mdeditor/components/bread-crumbs", ["exports", "ember-crumbly/components/bread-crumbs"], function (_exports, _breadCrumbs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _breadCrumbs.default;
    }
  });
});
;define("mdeditor/components/bs-datetimepicker", ["exports", "ember-cli-bootstrap-datetimepicker/components/bs-datetimepicker", "mdeditor/config/environment"], function (_exports, _bsDatetimepicker, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _bsDatetimepicker.default.extend({
    config: _environment.default['ember-cli-bootstrap-datetimepicker']
  });
  _exports.default = _default;
});
;define("mdeditor/components/circle-layer", ["exports", "ember-leaflet/components/circle-layer"], function (_exports, _circleLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _circleLayer.default;
    }
  });
});
;define("mdeditor/components/circle-marker-layer", ["exports", "ember-leaflet/components/circle-marker-layer"], function (_exports, _circleMarkerLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _circleMarkerLayer.default;
    }
  });
});
;define("mdeditor/components/container-layer", ["exports", "ember-leaflet/components/container-layer"], function (_exports, _containerLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _containerLayer.default;
    }
  });
});
;define("mdeditor/components/div-overlay-layer", ["exports", "ember-leaflet/components/div-overlay-layer"], function (_exports, _divOverlayLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _divOverlayLayer.default;
    }
  });
});
;define("mdeditor/components/draggable-object-target", ["exports", "ember-drag-drop/components/draggable-object-target"], function (_exports, _draggableObjectTarget) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _draggableObjectTarget.default;
  _exports.default = _default;
});
;define("mdeditor/components/draggable-object", ["exports", "ember-drag-drop/components/draggable-object"], function (_exports, _draggableObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _draggableObject.default;
  _exports.default = _default;
});
;define("mdeditor/components/ember-load-remover", ["exports", "ember-load/components/ember-load-remover"], function (_exports, _emberLoadRemover) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberLoadRemover.default;
    }
  });
});
;define("mdeditor/components/ember-modal-dialog-positioned-container", ["exports", "ember-modal-dialog/components/positioned-container"], function (_exports, _positionedContainer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _positionedContainer.default;
    }
  });
});
;define("mdeditor/components/ember-modal-dialog/-basic-dialog", ["exports", "ember-modal-dialog/components/basic-dialog"], function (_exports, _basicDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _basicDialog.default;
    }
  });
});
;define("mdeditor/components/ember-modal-dialog/-in-place-dialog", ["exports", "ember-modal-dialog/components/in-place-dialog"], function (_exports, _inPlaceDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _inPlaceDialog.default;
    }
  });
});
;define("mdeditor/components/ember-modal-dialog/-liquid-dialog", ["exports", "ember-modal-dialog/components/liquid-dialog"], function (_exports, _liquidDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidDialog.default;
    }
  });
});
;define("mdeditor/components/ember-modal-dialog/-liquid-tether-dialog", ["exports", "ember-modal-dialog/components/liquid-tether-dialog"], function (_exports, _liquidTetherDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidTetherDialog.default;
    }
  });
});
;define("mdeditor/components/ember-modal-dialog/-tether-dialog", ["exports", "ember-modal-dialog/components/tether-dialog"], function (_exports, _tetherDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _tetherDialog.default;
    }
  });
});
;define("mdeditor/components/ember-popover", ["exports", "ember-tooltips/components/ember-popover"], function (_exports, _emberPopover) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberPopover.default;
    }
  });
});
;define("mdeditor/components/ember-tether", ["exports", "ember-tether/components/ember-tether"], function (_exports, _emberTether) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberTether.default;
    }
  });
});
;define("mdeditor/components/ember-tooltip", ["exports", "ember-tooltips/components/ember-tooltip"], function (_exports, _emberTooltip) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberTooltip.default;
    }
  });
});
;define("mdeditor/components/ember-wormhole", ["exports", "ember-wormhole/components/ember-wormhole"], function (_exports, _emberWormhole) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberWormhole.default;
    }
  });
});
;define("mdeditor/components/fa-icon", ["exports", "ember-font-awesome/components/fa-icon"], function (_exports, _faIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _faIcon.default;
    }
  });
});
;define("mdeditor/components/fa-list", ["exports", "ember-font-awesome/components/fa-list"], function (_exports, _faList) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _faList.default;
    }
  });
});
;define("mdeditor/components/fa-stack", ["exports", "ember-font-awesome/components/fa-stack"], function (_exports, _faStack) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _faStack.default;
    }
  });
});
;define("mdeditor/components/feature-form", ["exports", "ember-leaflet-table/components/feature-form"], function (_exports, _featureForm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _featureForm.default;
    }
  });
});
;define("mdeditor/components/feature-group", ["exports", "ember-leaflet-table/components/feature-group"], function (_exports, _featureGroup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _featureGroup.default;
    }
  });
});
;define("mdeditor/components/feature-table", ["exports", "ember-leaflet-table/components/feature-table"], function (_exports, _featureTable) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _featureTable.default;
    }
  });
});
;define("mdeditor/components/file-picker", ["exports", "ember-cli-file-picker/components/file-picker"], function (_exports, _filePicker) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _filePicker.default;
    }
  });
});
;define("mdeditor/components/flash-message", ["exports", "ember-cli-flash/components/flash-message"], function (_exports, _flashMessage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _flashMessage.default;
    }
  });
});
;define("mdeditor/components/from-elsewhere", ["exports", "ember-elsewhere/components/from-elsewhere"], function (_exports, _fromElsewhere) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _fromElsewhere.default;
    }
  });
});
;define("mdeditor/components/geojson-layer", ["exports", "ember-leaflet/components/geojson-layer"], function (_exports, _geojsonLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _geojsonLayer.default;
    }
  });
});
;define("mdeditor/components/head-content", ["exports", "mdeditor/templates/head"], function (_exports, _head) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: '',
    model: Ember.inject.service('head-data'),
    layout: _head.default
  });
  _exports.default = _default;
});
;define("mdeditor/components/head-layout", ["exports", "ember-cli-head/components/head-layout"], function (_exports, _headLayout) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _headLayout.default;
    }
  });
});
;define("mdeditor/components/illiquid-model", ["exports", "liquid-fire/components/illiquid-model"], function (_exports, _illiquidModel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _illiquidModel.default;
    }
  });
});
;define("mdeditor/components/image-layer", ["exports", "ember-leaflet/components/image-layer"], function (_exports, _imageLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _imageLayer.default;
    }
  });
});
;define("mdeditor/components/interactive-layer", ["exports", "ember-leaflet/components/interactive-layer"], function (_exports, _interactiveLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _interactiveLayer.default;
    }
  });
});
;define("mdeditor/components/layer-control", ["exports", "ember-leaflet-layer-control/components/layer-control"], function (_exports, _layerControl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _layerControl.default;
    }
  });
});
;define("mdeditor/components/layer-group", ["exports", "ember-leaflet-layer-control/components/layer-group"], function (_exports, _layerGroup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _layerGroup.default;
    }
  });
});
;define("mdeditor/components/leaflet-draw", ["exports", "ember-leaflet-table/components/leaflet-draw"], function (_exports, _leafletDraw) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _leafletDraw.default;
    }
  });
});
;define("mdeditor/components/leaflet-map", ["exports", "ember-leaflet/components/leaflet-map"], function (_exports, _leafletMap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _leafletMap.default;
    }
  });
});
;define("mdeditor/components/leaflet-table-row-actions", ["exports", "ember-leaflet-table/components/leaflet-table-row-actions"], function (_exports, _leafletTableRowActions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _leafletTableRowActions.default;
    }
  });
});
;define("mdeditor/components/leaflet-table-row", ["exports", "ember-leaflet-table/components/leaflet-table-row"], function (_exports, _leafletTableRow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _leafletTableRow.default;
    }
  });
});
;define("mdeditor/components/leaflet-table", ["exports", "ember-leaflet-table/components/leaflet-table"], function (_exports, _leafletTable) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _leafletTable.default;
    }
  });
});
;define("mdeditor/components/lgeojson-layer", ["exports", "ember-leaflet-table/components/lgeojson-layer"], function (_exports, _lgeojsonLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _lgeojsonLayer.default;
    }
  });
});
;define("mdeditor/components/liquid-bind", ["exports", "liquid-fire/components/liquid-bind"], function (_exports, _liquidBind) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidBind.default;
    }
  });
});
;define("mdeditor/components/liquid-child", ["exports", "liquid-fire/components/liquid-child"], function (_exports, _liquidChild) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidChild.default;
    }
  });
});
;define("mdeditor/components/liquid-container", ["exports", "liquid-fire/components/liquid-container"], function (_exports, _liquidContainer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidContainer.default;
    }
  });
});
;define("mdeditor/components/liquid-if", ["exports", "liquid-fire/components/liquid-if"], function (_exports, _liquidIf) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidIf.default;
    }
  });
});
;define("mdeditor/components/liquid-measured", ["exports", "liquid-fire/components/liquid-measured"], function (_exports, _liquidMeasured) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidMeasured.default;
    }
  });
  Object.defineProperty(_exports, "measure", {
    enumerable: true,
    get: function get() {
      return _liquidMeasured.measure;
    }
  });
});
;define("mdeditor/components/liquid-outlet", ["exports", "liquid-fire/components/liquid-outlet"], function (_exports, _liquidOutlet) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidOutlet.default;
    }
  });
});
;define("mdeditor/components/liquid-spacer", ["exports", "liquid-fire/components/liquid-spacer"], function (_exports, _liquidSpacer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidSpacer.default;
    }
  });
});
;define("mdeditor/components/liquid-sync", ["exports", "liquid-fire/components/liquid-sync"], function (_exports, _liquidSync) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidSync.default;
    }
  });
});
;define("mdeditor/components/liquid-unless", ["exports", "liquid-fire/components/liquid-unless"], function (_exports, _liquidUnless) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidUnless.default;
    }
  });
});
;define("mdeditor/components/liquid-versions", ["exports", "liquid-fire/components/liquid-versions"], function (_exports, _liquidVersions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _liquidVersions.default;
    }
  });
});
;define("mdeditor/components/marker-layer", ["exports", "ember-leaflet/components/marker-layer"], function (_exports, _markerLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _markerLayer.default;
    }
  });
});
;define("mdeditor/components/modal-dialog", ["exports", "ember-modal-dialog/components/modal-dialog"], function (_exports, _modalDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _modalDialog.default;
    }
  });
});
;define("mdeditor/components/models-table-server-paginated", ["exports", "ember-models-table/components/models-table-server-paginated"], function (_exports, _modelsTableServerPaginated) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _modelsTableServerPaginated.default;
    }
  });
});
;define("mdeditor/components/models-table", ["exports", "ember-models-table/components/models-table"], function (_exports, _modelsTable) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _modelsTable.default;
  _exports.default = _default;
});
;define("mdeditor/components/models-table/cell-column-summary", ["exports", "ember-models-table/components/models-table/cell-column-summary"], function (_exports, _cellColumnSummary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _cellColumnSummary.default;
    }
  });
});
;define("mdeditor/components/models-table/cell-content-display", ["exports", "ember-models-table/components/models-table/cell-content-display"], function (_exports, _cellContentDisplay) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _cellContentDisplay.default;
    }
  });
});
;define("mdeditor/components/models-table/cell-content-edit", ["exports", "ember-models-table/components/models-table/cell-content-edit"], function (_exports, _cellContentEdit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _cellContentEdit.default;
    }
  });
});
;define("mdeditor/components/models-table/cell-edit-toggle", ["exports", "ember-models-table/components/models-table/cell-edit-toggle"], function (_exports, _cellEditToggle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _cellEditToggle.default;
    }
  });
});
;define("mdeditor/components/models-table/cell", ["exports", "ember-models-table/components/models-table/cell"], function (_exports, _cell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _cell.default;
    }
  });
});
;define("mdeditor/components/models-table/columns-dropdown", ["exports", "ember-models-table/components/models-table/columns-dropdown"], function (_exports, _columnsDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _columnsDropdown.default;
    }
  });
});
;define("mdeditor/components/models-table/columns-hidden", ["exports", "ember-models-table/components/models-table/columns-hidden"], function (_exports, _columnsHidden) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _columnsHidden.default;
    }
  });
});
;define("mdeditor/components/models-table/data-group-by-select", ["exports", "ember-models-table/components/models-table/data-group-by-select"], function (_exports, _dataGroupBySelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dataGroupBySelect.default;
    }
  });
});
;define("mdeditor/components/models-table/footer", ["exports", "ember-models-table/components/models-table/footer"], function (_exports, _footer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _footer.default;
    }
  });
});
;define("mdeditor/components/models-table/global-filter", ["exports", "ember-models-table/components/models-table/global-filter"], function (_exports, _globalFilter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _globalFilter.default;
    }
  });
});
;define("mdeditor/components/models-table/group-summary-row", ["exports", "ember-models-table/components/models-table/group-summary-row"], function (_exports, _groupSummaryRow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _groupSummaryRow.default;
    }
  });
});
;define("mdeditor/components/models-table/grouped-header", ["exports", "ember-models-table/components/models-table/grouped-header"], function (_exports, _groupedHeader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _groupedHeader.default;
    }
  });
});
;define("mdeditor/components/models-table/no-data", ["exports", "ember-models-table/components/models-table/no-data"], function (_exports, _noData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _noData.default;
    }
  });
});
;define("mdeditor/components/models-table/page-size-select", ["exports", "ember-models-table/components/models-table/page-size-select"], function (_exports, _pageSizeSelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _pageSizeSelect.default;
    }
  });
});
;define("mdeditor/components/models-table/pagination-numeric", ["exports", "ember-models-table/components/models-table/pagination-numeric"], function (_exports, _paginationNumeric) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _paginationNumeric.default;
    }
  });
});
;define("mdeditor/components/models-table/pagination-simple", ["exports", "ember-models-table/components/models-table/pagination-simple"], function (_exports, _paginationSimple) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _paginationSimple.default;
    }
  });
});
;define("mdeditor/components/models-table/row-expand", ["exports", "ember-models-table/components/models-table/row-expand"], function (_exports, _rowExpand) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowExpand.default;
    }
  });
});
;define("mdeditor/components/models-table/row-filtering-cell", ["exports", "ember-models-table/components/models-table/row-filtering-cell"], function (_exports, _rowFilteringCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFilteringCell.default;
    }
  });
});
;define("mdeditor/components/models-table/row-filtering", ["exports", "ember-models-table/components/models-table/row-filtering"], function (_exports, _rowFiltering) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFiltering.default;
    }
  });
});
;define("mdeditor/components/models-table/row-group-toggle", ["exports", "ember-models-table/components/models-table/row-group-toggle"], function (_exports, _rowGroupToggle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowGroupToggle.default;
    }
  });
});
;define("mdeditor/components/models-table/row-grouping", ["exports", "ember-models-table/components/models-table/row-grouping"], function (_exports, _rowGrouping) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowGrouping.default;
    }
  });
});
;define("mdeditor/components/models-table/row-sorting-cell", ["exports", "ember-models-table/components/models-table/row-sorting-cell"], function (_exports, _rowSortingCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowSortingCell.default;
    }
  });
});
;define("mdeditor/components/models-table/row-sorting", ["exports", "ember-models-table/components/models-table/row-sorting"], function (_exports, _rowSorting) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowSorting.default;
    }
  });
});
;define("mdeditor/components/models-table/row", ["exports", "ember-models-table/components/models-table/row"], function (_exports, _row) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _row.default;
    }
  });
});
;define("mdeditor/components/models-table/select", ["exports", "ember-models-table/components/models-table/select"], function (_exports, _select) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _select.default;
    }
  });
});
;define("mdeditor/components/models-table/summary", ["exports", "ember-models-table/components/models-table/summary"], function (_exports, _summary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _summary.default;
    }
  });
});
;define("mdeditor/components/models-table/table-body", ["exports", "ember-models-table/components/models-table/table-body"], function (_exports, _tableBody) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _tableBody.default;
    }
  });
});
;define("mdeditor/components/models-table/table-footer", ["exports", "ember-models-table/components/models-table/table-footer"], function (_exports, _tableFooter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _tableFooter.default;
    }
  });
});
;define("mdeditor/components/models-table/table-header", ["exports", "ember-models-table/components/models-table/table-header"], function (_exports, _tableHeader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _tableHeader.default;
    }
  });
});
;define("mdeditor/components/models-table/table", ["exports", "ember-models-table/components/models-table/table"], function (_exports, _table) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _table.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/bootstrap4/columns-dropdown", ["exports", "ember-models-table/components/models-table/themes/bootstrap4/columns-dropdown"], function (_exports, _columnsDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _columnsDropdown.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/bootstrap4/data-group-by-select", ["exports", "ember-models-table/components/models-table/themes/bootstrap4/data-group-by-select"], function (_exports, _dataGroupBySelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dataGroupBySelect.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/bootstrap4/global-filter", ["exports", "ember-models-table/components/models-table/themes/bootstrap4/global-filter"], function (_exports, _globalFilter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _globalFilter.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/bootstrap4/row-filtering-cell", ["exports", "ember-models-table/components/models-table/themes/bootstrap4/row-filtering-cell"], function (_exports, _rowFilteringCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFilteringCell.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v3/columns-dropdown", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v3/columns-dropdown"], function (_exports, _columnsDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _columnsDropdown.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v3/data-group-by-select", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v3/data-group-by-select"], function (_exports, _dataGroupBySelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dataGroupBySelect.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v3/global-filter", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v3/global-filter"], function (_exports, _globalFilter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _globalFilter.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v3/row-filtering-cell", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v3/row-filtering-cell"], function (_exports, _rowFilteringCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFilteringCell.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v3/summary", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v3/summary"], function (_exports, _summary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _summary.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v4/columns-dropdown", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v4/columns-dropdown"], function (_exports, _columnsDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _columnsDropdown.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v4/data-group-by-select", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v4/data-group-by-select"], function (_exports, _dataGroupBySelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dataGroupBySelect.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v4/global-filter", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v4/global-filter"], function (_exports, _globalFilter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _globalFilter.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v4/row-filtering-cell", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v4/row-filtering-cell"], function (_exports, _rowFilteringCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFilteringCell.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-bootstrap-v4/summary", ["exports", "ember-models-table/components/models-table/themes/ember-bootstrap-v4/summary"], function (_exports, _summary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _summary.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/columns-dropdown", ["exports", "ember-models-table/components/models-table/themes/ember-paper/columns-dropdown"], function (_exports, _columnsDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _columnsDropdown.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/data-group-by-select", ["exports", "ember-models-table/components/models-table/themes/ember-paper/data-group-by-select"], function (_exports, _dataGroupBySelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dataGroupBySelect.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/global-filter", ["exports", "ember-models-table/components/models-table/themes/ember-paper/global-filter"], function (_exports, _globalFilter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _globalFilter.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/page-size-select", ["exports", "ember-models-table/components/models-table/themes/ember-paper/page-size-select"], function (_exports, _pageSizeSelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _pageSizeSelect.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/pagination-numeric", ["exports", "ember-models-table/components/models-table/themes/ember-paper/pagination-numeric"], function (_exports, _paginationNumeric) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _paginationNumeric.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/pagination-simple", ["exports", "ember-models-table/components/models-table/themes/ember-paper/pagination-simple"], function (_exports, _paginationSimple) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _paginationSimple.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/row-filtering-cell", ["exports", "ember-models-table/components/models-table/themes/ember-paper/row-filtering-cell"], function (_exports, _rowFilteringCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFilteringCell.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/row-sorting-cell", ["exports", "ember-models-table/components/models-table/themes/ember-paper/row-sorting-cell"], function (_exports, _rowSortingCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowSortingCell.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/select", ["exports", "ember-models-table/components/models-table/themes/ember-paper/select"], function (_exports, _select) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _select.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-paper/summary", ["exports", "ember-models-table/components/models-table/themes/ember-paper/summary"], function (_exports, _summary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _summary.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-semanticui/row-filtering-cell", ["exports", "ember-models-table/components/models-table/themes/ember-semanticui/row-filtering-cell"], function (_exports, _rowFilteringCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFilteringCell.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/ember-semanticui/select", ["exports", "ember-models-table/components/models-table/themes/ember-semanticui/select"], function (_exports, _select) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _select.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/columns-dropdown", ["exports", "ember-models-table/components/models-table/themes/semanticui/columns-dropdown"], function (_exports, _columnsDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _columnsDropdown.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/data-group-by-select", ["exports", "ember-models-table/components/models-table/themes/semanticui/data-group-by-select"], function (_exports, _dataGroupBySelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dataGroupBySelect.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/global-filter", ["exports", "ember-models-table/components/models-table/themes/semanticui/global-filter"], function (_exports, _globalFilter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _globalFilter.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/pagination-numeric", ["exports", "ember-models-table/components/models-table/themes/semanticui/pagination-numeric"], function (_exports, _paginationNumeric) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _paginationNumeric.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/pagination-simple", ["exports", "ember-models-table/components/models-table/themes/semanticui/pagination-simple"], function (_exports, _paginationSimple) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _paginationSimple.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/row-filtering-cell", ["exports", "ember-models-table/components/models-table/themes/semanticui/row-filtering-cell"], function (_exports, _rowFilteringCell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rowFilteringCell.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/select", ["exports", "ember-models-table/components/models-table/themes/semanticui/select"], function (_exports, _select) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _select.default;
    }
  });
});
;define("mdeditor/components/models-table/themes/semanticui/summary", ["exports", "ember-models-table/components/models-table/themes/semanticui/summary"], function (_exports, _summary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _summary.default;
    }
  });
});
;define("mdeditor/components/multiple-from-elsewhere", ["exports", "ember-elsewhere/components/multiple-from-elsewhere"], function (_exports, _multipleFromElsewhere) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _multipleFromElsewhere.default;
    }
  });
});
;define("mdeditor/components/nestable-draggable-object", ["exports", "ember-json-tree/components/nestable-draggable-object"], function (_exports, _nestableDraggableObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _nestableDraggableObject.default;
    }
  });
});
;define("mdeditor/components/object-bin", ["exports", "ember-drag-drop/components/object-bin"], function (_exports, _objectBin) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _objectBin.default;
  _exports.default = _default;
});
;define("mdeditor/components/path-layer", ["exports", "ember-leaflet/components/path-layer"], function (_exports, _pathLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _pathLayer.default;
    }
  });
});
;define("mdeditor/components/point-path-layer", ["exports", "ember-leaflet/components/point-path-layer"], function (_exports, _pointPathLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _pointPathLayer.default;
    }
  });
});
;define("mdeditor/components/polygon-layer", ["exports", "ember-leaflet/components/polygon-layer"], function (_exports, _polygonLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _polygonLayer.default;
    }
  });
});
;define("mdeditor/components/polyline-layer", ["exports", "ember-leaflet/components/polyline-layer"], function (_exports, _polylineLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _polylineLayer.default;
    }
  });
});
;define("mdeditor/components/popup-layer", ["exports", "ember-leaflet/components/popup-layer"], function (_exports, _popupLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _popupLayer.default;
    }
  });
});
;define("mdeditor/components/power-select-multiple-with-create", ["exports", "ember-power-select-with-create/components/power-select-multiple-with-create"], function (_exports, _powerSelectMultipleWithCreate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _powerSelectMultipleWithCreate.default;
    }
  });
});
;define("mdeditor/components/power-select-multiple", ["exports", "ember-power-select/components/power-select-multiple"], function (_exports, _powerSelectMultiple) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _powerSelectMultiple.default;
    }
  });
});
;define("mdeditor/components/power-select-multiple/trigger", ["exports", "ember-power-select/components/power-select-multiple/trigger"], function (_exports, _trigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _trigger.default;
    }
  });
});
;define("mdeditor/components/power-select-with-create", ["exports", "ember-power-select-with-create/components/power-select-with-create"], function (_exports, _powerSelectWithCreate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _powerSelectWithCreate.default;
    }
  });
});
;define("mdeditor/components/power-select-with-create/suggested-option", ["exports", "ember-power-select-with-create/components/power-select-with-create/suggested-option"], function (_exports, _suggestedOption) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _suggestedOption.default;
    }
  });
});
;define("mdeditor/components/power-select", ["exports", "ember-power-select/components/power-select"], function (_exports, _powerSelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _powerSelect.default;
    }
  });
});
;define("mdeditor/components/power-select/before-options", ["exports", "ember-power-select/components/power-select/before-options"], function (_exports, _beforeOptions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _beforeOptions.default;
    }
  });
});
;define("mdeditor/components/power-select/options", ["exports", "ember-power-select/components/power-select/options"], function (_exports, _options) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _options.default;
    }
  });
});
;define("mdeditor/components/power-select/placeholder", ["exports", "ember-power-select/components/power-select/placeholder"], function (_exports, _placeholder) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _placeholder.default;
    }
  });
});
;define("mdeditor/components/power-select/power-select-group", ["exports", "ember-power-select/components/power-select/power-select-group"], function (_exports, _powerSelectGroup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _powerSelectGroup.default;
    }
  });
});
;define("mdeditor/components/power-select/search-message", ["exports", "ember-power-select/components/power-select/search-message"], function (_exports, _searchMessage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _searchMessage.default;
    }
  });
});
;define("mdeditor/components/power-select/trigger", ["exports", "ember-power-select/components/power-select/trigger"], function (_exports, _trigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _trigger.default;
    }
  });
});
;define("mdeditor/components/sb-publisher", ["exports", "mdeditor-sciencebase/components/sb-publisher"], function (_exports, _sbPublisher) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sbPublisher.default;
    }
  });
});
;define("mdeditor/components/sb-settings", ["exports", "mdeditor-sciencebase/components/sb-settings"], function (_exports, _sbSettings) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sbSettings.default;
    }
  });
});
;define("mdeditor/components/sb-tree-label", ["exports", "mdeditor-sciencebase/components/sb-tree-label"], function (_exports, _sbTreeLabel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sbTreeLabel.default;
    }
  });
});
;define("mdeditor/components/sb-tree", ["exports", "mdeditor-sciencebase/components/sb-tree"], function (_exports, _sbTree) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sbTree.default;
    }
  });
});
;define("mdeditor/components/simple-mde", ["exports", "ember-simplemde/components/simple-mde"], function (_exports, _simpleMde) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _simpleMde.default;
    }
  });
});
;define("mdeditor/components/sortable-objects", ["exports", "ember-drag-drop/components/sortable-objects"], function (_exports, _sortableObjects) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _sortableObjects.default;
  _exports.default = _default;
});
;define("mdeditor/components/tile-layer", ["exports", "ember-leaflet/components/tile-layer"], function (_exports, _tileLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _tileLayer.default;
    }
  });
});
;define("mdeditor/components/to-elsewhere", ["exports", "ember-elsewhere/components/to-elsewhere"], function (_exports, _toElsewhere) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _toElsewhere.default;
    }
  });
});
;define("mdeditor/components/tooltip-layer", ["exports", "ember-leaflet/components/tooltip-layer"], function (_exports, _tooltipLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _tooltipLayer.default;
    }
  });
});
;define("mdeditor/components/tree-branch", ["exports", "ember-json-tree/components/tree-branch"], function (_exports, _treeBranch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _treeBranch.default;
    }
  });
});
;define("mdeditor/components/tree-label", ["exports", "ember-json-tree/components/tree-label"], function (_exports, _treeLabel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _treeLabel.default;
    }
  });
});
;define("mdeditor/components/tree-leaf", ["exports", "ember-json-tree/components/tree-leaf"], function (_exports, _treeLeaf) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _treeLeaf.default;
    }
  });
});
;define("mdeditor/components/tree-search", ["exports", "ember-json-tree/components/tree-search"], function (_exports, _treeSearch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _treeSearch.default;
    }
  });
});
;define("mdeditor/components/tree-view", ["exports", "ember-json-tree/components/tree-view"], function (_exports, _treeView) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _treeView.default;
    }
  });
});
;define("mdeditor/components/video-layer", ["exports", "ember-leaflet/components/video-layer"], function (_exports, _videoLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _videoLayer.default;
    }
  });
});
;define("mdeditor/components/welcome-page", ["exports", "ember-welcome-page/components/welcome-page"], function (_exports, _welcomePage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _welcomePage.default;
    }
  });
});
;define("mdeditor/components/wms-tile-layer", ["exports", "ember-leaflet/components/wms-tile-layer"], function (_exports, _wmsTileLayer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _wmsTileLayer.default;
    }
  });
});
;define("mdeditor/components/x-toggle-label", ["exports", "ember-toggle/components/x-toggle-label/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _component.default;
    }
  });
});
;define("mdeditor/components/x-toggle-switch", ["exports", "ember-toggle/components/x-toggle-switch/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _component.default;
    }
  });
});
;define("mdeditor/components/x-toggle", ["exports", "ember-toggle/components/x-toggle/component", "mdeditor/config/environment"], function (_exports, _component, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const config = _environment.default['ember-toggle'] || {};
  var _default = _component.default.extend({
    /* eslint-disable ember/avoid-leaking-state-in-ember-objects */
    theme: config.defaultTheme || 'default',
    defaultOffLabel: config.defaultOffLabel || 'Off::off',
    defaultOnLabel: config.defaultOnLabel || 'On::on',
    showLabels: config.defaultShowLabels || false,
    size: config.defaultSize || 'medium'
  });
  _exports.default = _default;
});
;define("mdeditor/csv2geojson", ["exports", "csv2geojson"], function (_exports, _csv2geojson) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "csv2geojson", {
    enumerable: true,
    get: function get() {
      return _csv2geojson.default;
    }
  });
});
;define("mdeditor/ember-gestures/recognizers/pan", ["exports", "ember-gestures/recognizers/pan"], function (_exports, _pan) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _pan.default;
  _exports.default = _default;
});
;define("mdeditor/ember-gestures/recognizers/pinch", ["exports", "ember-gestures/recognizers/pinch"], function (_exports, _pinch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _pinch.default;
  _exports.default = _default;
});
;define("mdeditor/ember-gestures/recognizers/press", ["exports", "ember-gestures/recognizers/press"], function (_exports, _press) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _press.default;
  _exports.default = _default;
});
;define("mdeditor/ember-gestures/recognizers/rotate", ["exports", "ember-gestures/recognizers/rotate"], function (_exports, _rotate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _rotate.default;
  _exports.default = _default;
});
;define("mdeditor/ember-gestures/recognizers/swipe", ["exports", "ember-gestures/recognizers/swipe"], function (_exports, _swipe) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _swipe.default;
  _exports.default = _default;
});
;define("mdeditor/ember-gestures/recognizers/tap", ["exports", "ember-gestures/recognizers/tap"], function (_exports, _tap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _tap.default;
    }
  });
});
;define("mdeditor/ember-gestures/recognizers/vertical-pan", ["exports", "ember-gestures/recognizers/vertical-pan"], function (_exports, _verticalPan) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _verticalPan.default;
    }
  });
});
;define("mdeditor/ember-gestures/recognizers/vertical-swipe", ["exports", "ember-gestures/recognizers/vertical-swipe"], function (_exports, _verticalSwipe) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _verticalSwipe.default;
    }
  });
});
;define("mdeditor/ember-json-tree/tests/addon.lint-test", [], function () {
  "use strict";

  QUnit.module('ESLint | addon');
  QUnit.test('addon/components/nestable-draggable-object.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/nestable-draggable-object.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/tree-branch.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/tree-branch.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/tree-label.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/tree-label.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/tree-leaf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/tree-leaf.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/tree-search.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/tree-search.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/tree-view.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/tree-view.js should pass ESLint\n\n');
  });
  QUnit.test('addon/helpers/make-range.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/helpers/make-range.js should pass ESLint\n\n');
  });
});
;define("mdeditor/ember-json-tree/tests/app.lint-test", [], function () {
  "use strict";

  QUnit.module('ESLint | app');
  QUnit.test('app/components/nestable-draggable-object.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/nestable-draggable-object.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/tree-branch.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/tree-branch.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/tree-label.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/tree-label.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/tree-leaf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/tree-leaf.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/tree-search.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/tree-search.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/tree-view.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/tree-view.js should pass ESLint\n\n');
  });
  QUnit.test('app/helpers/make-range.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/helpers/make-range.js should pass ESLint\n\n');
  });
});
;define("mdeditor/ember-json-tree/tests/templates.template.lint-test", [], function () {
  "use strict";

  QUnit.module('TemplateLint');
  QUnit.test('addon/templates/components/tree-branch.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/tree-branch.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/tree-label.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/tree-label.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/tree-leaf.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/tree-leaf.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/tree-search.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/tree-search.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/tree-view.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/tree-view.hbs should pass TemplateLint.\n\n');
  });
});
;define("mdeditor/ember-leaflet-table/tests/addon.lint-test", [], function () {
  "use strict";

  QUnit.module('ESLint | addon');
  QUnit.test('addon/components/feature-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/feature-form.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/feature-group.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/feature-group.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/feature-table.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/feature-table.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/leaflet-draw.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/leaflet-draw.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/leaflet-table-row-actions.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/leaflet-table-row-actions.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/leaflet-table-row.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/leaflet-table-row.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/leaflet-table.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/leaflet-table.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/lgeojson-layer.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/lgeojson-layer.js should pass ESLint\n\n');
  });
});
;define("mdeditor/ember-leaflet-table/tests/app.lint-test", [], function () {
  "use strict";

  QUnit.module('ESLint | app');
  QUnit.test('app/components/feature-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/feature-form.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/feature-group.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/feature-group.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/feature-table.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/feature-table.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/leaflet-draw.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/leaflet-draw.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/leaflet-table-row-actions.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/leaflet-table-row-actions.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/leaflet-table-row.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/leaflet-table-row.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/leaflet-table.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/leaflet-table.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/lgeojson-layer.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/lgeojson-layer.js should pass ESLint\n\n');
  });
  QUnit.test('app/csv2geojson.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/csv2geojson.js should pass ESLint\n\n');
  });
  QUnit.test('app/geojsoncoords.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/geojsoncoords.js should pass ESLint\n\n');
  });
  QUnit.test('app/shapefile.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/shapefile.js should pass ESLint\n\n');
  });
  QUnit.test('app/togeojson.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/togeojson.js should pass ESLint\n\n');
  });
  QUnit.test('app/uuid.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/uuid.js should pass ESLint\n\n');
  });
});
;define("mdeditor/ember-leaflet-table/tests/templates.template.lint-test", [], function () {
  "use strict";

  QUnit.module('TemplateLint');
  QUnit.test('addon/templates/components/feature-form.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/feature-form.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/leaflet-draw.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/leaflet-draw.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/leaflet-table-row-actions.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/leaflet-table-row-actions.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/leaflet-table.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/leaflet-table.hbs should pass TemplateLint.\n\n');
  });
});
;define("mdeditor/emt-themes/ember-paper", ["exports", "ember-models-table/emt-themes/ember-paper"], function (_exports, _emberPaper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberPaper.default;
    }
  });
});
;define("mdeditor/event_dispatcher", ["exports", "ember-gestures/event_dispatcher", "mdeditor/config/environment"], function (_exports, _event_dispatcher, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const assign = Ember.assign || Ember.merge;
  let gestures = assign({}, {
    emberUseCapture: false,
    removeTracking: false,
    useFastPaths: false
  });
  gestures = assign(gestures, _environment.default.gestures);
  var _default = _event_dispatcher.default.extend({
    useCapture: gestures.emberUseCapture,
    removeTracking: gestures.removeTracking,
    useFastPaths: gestures.useFastPaths
  });
  _exports.default = _default;
});
;define("mdeditor/flash/object", ["exports", "ember-cli-flash/flash/object"], function (_exports, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _object.default;
    }
  });
});
;define("mdeditor/formats", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    time: {
      hhmmss: {
        hour: 'numeric',
        minute: 'numeric',
        second: 'numeric'
      }
    },
    date: {
      hhmmss: {
        hour: 'numeric',
        minute: 'numeric',
        second: 'numeric'
      }
    },
    number: {
      EUR: {
        style: 'currency',
        currency: 'EUR',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      },
      USD: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }
  };
  _exports.default = _default;
});
;define("mdeditor/geojsoncoords", ["exports", "geojson-coords"], function (_exports, _geojsonCoords) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "geojsonCoords", {
    enumerable: true,
    get: function get() {
      return _geojsonCoords.default;
    }
  });
});
;define("mdeditor/helpers/-clear-element", ["exports", "ember-in-element-polyfill/helpers/-clear-element"], function (_exports, _clearElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _clearElement.default;
    }
  });
});
;define("mdeditor/helpers/-element", ["exports", "ember-element-helper/helpers/-element"], function (_exports, _element) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _element.default;
    }
  });
});
;define("mdeditor/helpers/add-em", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.addEm = addEm;
  _exports.default = void 0;
  function addEm(params) {
    return params.reduce((a, b) => Number(a) + Number(b));
  }
  var _default = Ember.Helper.helper(addEm);
  _exports.default = _default;
});
;define("mdeditor/helpers/and", ["exports", "ember-truth-helpers/helpers/and"], function (_exports, _and) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _and.default;
    }
  });
  Object.defineProperty(_exports, "and", {
    enumerable: true,
    get: function get() {
      return _and.and;
    }
  });
});
;define("mdeditor/helpers/app-version", ["exports", "mdeditor/config/environment", "ember-cli-app-version/utils/regexp"], function (_exports, _environment, _regexp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.appVersion = appVersion;
  _exports.default = void 0;
  function appVersion(_, hash = {}) {
    const version = _environment.default.APP.version;
    // e.g. 1.0.0-alpha.1+4jds75hf

    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility
    let versionOnly = hash.versionOnly || hash.hideSha;
    let shaOnly = hash.shaOnly || hash.hideVersion;
    let match = null;
    if (versionOnly) {
      if (hash.showExtended) {
        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1
      }
      // Fallback to just version
      if (!match) {
        match = version.match(_regexp.versionRegExp); // 1.0.0
      }
    }

    if (shaOnly) {
      match = version.match(_regexp.shaRegExp); // 4jds75hf
    }

    return match ? match[0] : version;
  }
  var _default = Ember.Helper.helper(appVersion);
  _exports.default = _default;
});
;define("mdeditor/helpers/append", ["exports", "ember-composable-helpers/helpers/append"], function (_exports, _append) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _append.default;
    }
  });
  Object.defineProperty(_exports, "append", {
    enumerable: true,
    get: function get() {
      return _append.append;
    }
  });
});
;define("mdeditor/helpers/array", ["exports", "ember-composable-helpers/helpers/array"], function (_exports, _array) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _array.default;
    }
  });
  Object.defineProperty(_exports, "array", {
    enumerable: true,
    get: function get() {
      return _array.array;
    }
  });
});
;define("mdeditor/helpers/bbox-to-poly", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.bboxToPoly = bboxToPoly;
  _exports.default = void 0;
  function bboxToPoly(params /*, hash*/) {
    let bbox = params[0];
    if (!(bbox.southLatitude && bbox.westLongitude && bbox.northLatitude && bbox.eastLongitude)) {
      return null;
    }
    return [[bbox.southLatitude, bbox.westLongitude], [bbox.northLatitude, bbox.westLongitude], [bbox.northLatitude, bbox.eastLongitude], [bbox.southLatitude, bbox.eastLongitude]];
  }
  var _default = Ember.Helper.helper(bboxToPoly);
  _exports.default = _default;
});
;define("mdeditor/helpers/camelize", ["exports", "ember-cli-string-helpers/helpers/camelize"], function (_exports, _camelize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _camelize.default;
    }
  });
  Object.defineProperty(_exports, "camelize", {
    enumerable: true,
    get: function get() {
      return _camelize.camelize;
    }
  });
});
;define("mdeditor/helpers/cancel-all", ["exports", "ember-concurrency/helpers/cancel-all"], function (_exports, _cancelAll) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _cancelAll.default;
    }
  });
});
;define("mdeditor/helpers/capitalize", ["exports", "ember-cli-string-helpers/helpers/capitalize"], function (_exports, _capitalize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _capitalize.default;
    }
  });
  Object.defineProperty(_exports, "capitalize", {
    enumerable: true,
    get: function get() {
      return _capitalize.capitalize;
    }
  });
});
;define("mdeditor/helpers/chunk", ["exports", "ember-composable-helpers/helpers/chunk"], function (_exports, _chunk) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _chunk.default;
    }
  });
  Object.defineProperty(_exports, "chunk", {
    enumerable: true,
    get: function get() {
      return _chunk.chunk;
    }
  });
});
;define("mdeditor/helpers/classify", ["exports", "ember-cli-string-helpers/helpers/classify"], function (_exports, _classify) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _classify.default;
    }
  });
  Object.defineProperty(_exports, "classify", {
    enumerable: true,
    get: function get() {
      return _classify.classify;
    }
  });
});
;define("mdeditor/helpers/compact", ["exports", "ember-composable-helpers/helpers/compact"], function (_exports, _compact) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _compact.default;
    }
  });
});
;define("mdeditor/helpers/compute", ["exports", "ember-composable-helpers/helpers/compute"], function (_exports, _compute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _compute.default;
    }
  });
  Object.defineProperty(_exports, "compute", {
    enumerable: true,
    get: function get() {
      return _compute.compute;
    }
  });
});
;define("mdeditor/helpers/contains", ["exports", "ember-composable-helpers/helpers/contains"], function (_exports, _contains) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _contains.default;
    }
  });
  Object.defineProperty(_exports, "contains", {
    enumerable: true,
    get: function get() {
      return _contains.contains;
    }
  });
});
;define("mdeditor/helpers/dasherize", ["exports", "ember-cli-string-helpers/helpers/dasherize"], function (_exports, _dasherize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dasherize.default;
    }
  });
  Object.defineProperty(_exports, "dasherize", {
    enumerable: true,
    get: function get() {
      return _dasherize.dasherize;
    }
  });
});
;define("mdeditor/helpers/dec", ["exports", "ember-composable-helpers/helpers/dec"], function (_exports, _dec) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dec.default;
    }
  });
  Object.defineProperty(_exports, "dec", {
    enumerable: true,
    get: function get() {
      return _dec.dec;
    }
  });
});
;define("mdeditor/helpers/div-icon", ["exports", "ember-leaflet/helpers/div-icon"], function (_exports, _divIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _divIcon.default;
    }
  });
  Object.defineProperty(_exports, "divIcon", {
    enumerable: true,
    get: function get() {
      return _divIcon.divIcon;
    }
  });
});
;define("mdeditor/helpers/drop", ["exports", "ember-composable-helpers/helpers/drop"], function (_exports, _drop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _drop.default;
    }
  });
});
;define("mdeditor/helpers/ember-leaflet-assign-to", ["exports", "ember-leaflet/helpers/ember-leaflet-assign-to"], function (_exports, _emberLeafletAssignTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberLeafletAssignTo.default;
    }
  });
  Object.defineProperty(_exports, "emberLeafletAssignTo", {
    enumerable: true,
    get: function get() {
      return _emberLeafletAssignTo.emberLeafletAssignTo;
    }
  });
});
;define("mdeditor/helpers/ember-power-select-is-group", ["exports", "ember-power-select/helpers/ember-power-select-is-group"], function (_exports, _emberPowerSelectIsGroup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberPowerSelectIsGroup.default;
    }
  });
  Object.defineProperty(_exports, "emberPowerSelectIsGroup", {
    enumerable: true,
    get: function get() {
      return _emberPowerSelectIsGroup.emberPowerSelectIsGroup;
    }
  });
});
;define("mdeditor/helpers/ember-power-select-is-selected", ["exports", "ember-power-select/helpers/ember-power-select-is-selected"], function (_exports, _emberPowerSelectIsSelected) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberPowerSelectIsSelected.default;
    }
  });
  Object.defineProperty(_exports, "emberPowerSelectIsSelected", {
    enumerable: true,
    get: function get() {
      return _emberPowerSelectIsSelected.emberPowerSelectIsSelected;
    }
  });
});
;define("mdeditor/helpers/eq", ["exports", "ember-truth-helpers/helpers/equal"], function (_exports, _equal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _equal.default;
    }
  });
  Object.defineProperty(_exports, "equal", {
    enumerable: true,
    get: function get() {
      return _equal.equal;
    }
  });
});
;define("mdeditor/helpers/exists-in", ["exports", "ember-models-table/helpers/exists-in"], function (_exports, _existsIn) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _existsIn.default;
    }
  });
  Object.defineProperty(_exports, "existsIn", {
    enumerable: true,
    get: function get() {
      return _existsIn.existsIn;
    }
  });
});
;define("mdeditor/helpers/filter-by", ["exports", "ember-composable-helpers/helpers/filter-by"], function (_exports, _filterBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _filterBy.default;
    }
  });
});
;define("mdeditor/helpers/filter", ["exports", "ember-composable-helpers/helpers/filter"], function (_exports, _filter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _filter.default;
    }
  });
});
;define("mdeditor/helpers/find-by", ["exports", "ember-composable-helpers/helpers/find-by"], function (_exports, _findBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _findBy.default;
    }
  });
});
;define("mdeditor/helpers/flatten", ["exports", "ember-composable-helpers/helpers/flatten"], function (_exports, _flatten) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _flatten.default;
    }
  });
  Object.defineProperty(_exports, "flatten", {
    enumerable: true,
    get: function get() {
      return _flatten.flatten;
    }
  });
});
;define("mdeditor/helpers/get-dash", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.getDash = getDash;
  _exports.default = void 0;
  function getDash(params /*, hash*/) {
    let obj = params[0];
    let prop = params[1].trim();
    let val = null;
    if (obj) {
      val = Ember.get(obj, prop);
    }
    return val || "--";
  }
  var _default = Ember.Helper.helper(getDash);
  _exports.default = _default;
});
;define("mdeditor/helpers/get-property", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.getProperty = getProperty;
  _exports.default = void 0;
  function getProperty([obj, prop]) {
    let val = null;
    if (obj) {
      val = Ember.get(obj, prop.trim());
    }
    return val || Ember.String.htmlSafe("<em>Not Defined</em>");
  }
  var _default = Ember.Helper.helper(getProperty);
  _exports.default = _default;
});
;define("mdeditor/helpers/group-by", ["exports", "ember-composable-helpers/helpers/group-by"], function (_exports, _groupBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _groupBy.default;
    }
  });
});
;define("mdeditor/helpers/gt", ["exports", "ember-truth-helpers/helpers/gt"], function (_exports, _gt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _gt.default;
    }
  });
  Object.defineProperty(_exports, "gt", {
    enumerable: true,
    get: function get() {
      return _gt.gt;
    }
  });
});
;define("mdeditor/helpers/gte", ["exports", "ember-truth-helpers/helpers/gte"], function (_exports, _gte) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _gte.default;
    }
  });
  Object.defineProperty(_exports, "gte", {
    enumerable: true,
    get: function get() {
      return _gte.gte;
    }
  });
});
;define("mdeditor/helpers/has-next", ["exports", "ember-composable-helpers/helpers/has-next"], function (_exports, _hasNext) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _hasNext.default;
    }
  });
  Object.defineProperty(_exports, "hasNext", {
    enumerable: true,
    get: function get() {
      return _hasNext.hasNext;
    }
  });
});
;define("mdeditor/helpers/has-previous", ["exports", "ember-composable-helpers/helpers/has-previous"], function (_exports, _hasPrevious) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _hasPrevious.default;
    }
  });
  Object.defineProperty(_exports, "hasPrevious", {
    enumerable: true,
    get: function get() {
      return _hasPrevious.hasPrevious;
    }
  });
});
;define("mdeditor/helpers/html-safe", ["exports", "ember-models-table/helpers/html-safe"], function (_exports, _htmlSafe) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _htmlSafe.default;
    }
  });
  Object.defineProperty(_exports, "htmlSafe", {
    enumerable: true,
    get: function get() {
      return _htmlSafe.htmlSafe;
    }
  });
});
;define("mdeditor/helpers/humanize", ["exports", "ember-cli-string-helpers/helpers/humanize"], function (_exports, _humanize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _humanize.default;
    }
  });
  Object.defineProperty(_exports, "humanize", {
    enumerable: true,
    get: function get() {
      return _humanize.humanize;
    }
  });
});
;define("mdeditor/helpers/icon", ["exports", "ember-leaflet/helpers/icon"], function (_exports, _icon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _icon.default;
    }
  });
  Object.defineProperty(_exports, "icon", {
    enumerable: true,
    get: function get() {
      return _icon.icon;
    }
  });
});
;define("mdeditor/helpers/ignore-children", ["exports", "ember-ignore-children-helper/helpers/ignore-children"], function (_exports, _ignoreChildren) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _ignoreChildren.default;
    }
  });
  Object.defineProperty(_exports, "ignoreChildren", {
    enumerable: true,
    get: function get() {
      return _ignoreChildren.ignoreChildren;
    }
  });
});
;define("mdeditor/helpers/inc", ["exports", "ember-composable-helpers/helpers/inc"], function (_exports, _inc) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _inc.default;
    }
  });
  Object.defineProperty(_exports, "inc", {
    enumerable: true,
    get: function get() {
      return _inc.inc;
    }
  });
});
;define("mdeditor/helpers/intersect", ["exports", "ember-composable-helpers/helpers/intersect"], function (_exports, _intersect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _intersect.default;
    }
  });
});
;define("mdeditor/helpers/invoke", ["exports", "ember-composable-helpers/helpers/invoke"], function (_exports, _invoke) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _invoke.default;
    }
  });
  Object.defineProperty(_exports, "invoke", {
    enumerable: true,
    get: function get() {
      return _invoke.invoke;
    }
  });
});
;define("mdeditor/helpers/is-after", ["exports", "ember-moment/helpers/is-after"], function (_exports, _isAfter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isAfter.default;
    }
  });
});
;define("mdeditor/helpers/is-array", ["exports", "ember-truth-helpers/helpers/is-array"], function (_exports, _isArray) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isArray.default;
    }
  });
  Object.defineProperty(_exports, "isArray", {
    enumerable: true,
    get: function get() {
      return _isArray.isArray;
    }
  });
});
;define("mdeditor/helpers/is-before", ["exports", "ember-moment/helpers/is-before"], function (_exports, _isBefore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isBefore.default;
    }
  });
});
;define("mdeditor/helpers/is-between", ["exports", "ember-moment/helpers/is-between"], function (_exports, _isBetween) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isBetween.default;
    }
  });
});
;define("mdeditor/helpers/is-empty", ["exports", "ember-truth-helpers/helpers/is-empty"], function (_exports, _isEmpty) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isEmpty.default;
    }
  });
});
;define("mdeditor/helpers/is-equal", ["exports", "ember-truth-helpers/helpers/is-equal"], function (_exports, _isEqual) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isEqual.default;
    }
  });
  Object.defineProperty(_exports, "isEqual", {
    enumerable: true,
    get: function get() {
      return _isEqual.isEqual;
    }
  });
});
;define("mdeditor/helpers/is-same-or-after", ["exports", "ember-moment/helpers/is-same-or-after"], function (_exports, _isSameOrAfter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isSameOrAfter.default;
    }
  });
});
;define("mdeditor/helpers/is-same-or-before", ["exports", "ember-moment/helpers/is-same-or-before"], function (_exports, _isSameOrBefore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isSameOrBefore.default;
    }
  });
});
;define("mdeditor/helpers/is-same", ["exports", "ember-moment/helpers/is-same"], function (_exports, _isSame) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _isSame.default;
    }
  });
});
;define("mdeditor/helpers/join", ["exports", "ember-composable-helpers/helpers/join"], function (_exports, _join) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _join.default;
    }
  });
});
;define("mdeditor/helpers/lat-lng-bounds", ["exports", "ember-leaflet/helpers/lat-lng-bounds"], function (_exports, _latLngBounds) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _latLngBounds.default;
    }
  });
  Object.defineProperty(_exports, "latLngBounds", {
    enumerable: true,
    get: function get() {
      return _latLngBounds.latLngBounds;
    }
  });
});
;define("mdeditor/helpers/lf-lock-model", ["exports", "liquid-fire/helpers/lf-lock-model"], function (_exports, _lfLockModel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _lfLockModel.default;
    }
  });
  Object.defineProperty(_exports, "lfLockModel", {
    enumerable: true,
    get: function get() {
      return _lfLockModel.lfLockModel;
    }
  });
});
;define("mdeditor/helpers/lf-or", ["exports", "liquid-fire/helpers/lf-or"], function (_exports, _lfOr) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _lfOr.default;
    }
  });
  Object.defineProperty(_exports, "lfOr", {
    enumerable: true,
    get: function get() {
      return _lfOr.lfOr;
    }
  });
});
;define("mdeditor/helpers/lowercase", ["exports", "ember-cli-string-helpers/helpers/lowercase"], function (_exports, _lowercase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _lowercase.default;
    }
  });
  Object.defineProperty(_exports, "lowercase", {
    enumerable: true,
    get: function get() {
      return _lowercase.lowercase;
    }
  });
});
;define("mdeditor/helpers/lt", ["exports", "ember-truth-helpers/helpers/lt"], function (_exports, _lt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _lt.default;
    }
  });
  Object.defineProperty(_exports, "lt", {
    enumerable: true,
    get: function get() {
      return _lt.lt;
    }
  });
});
;define("mdeditor/helpers/lte", ["exports", "ember-truth-helpers/helpers/lte"], function (_exports, _lte) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _lte.default;
    }
  });
  Object.defineProperty(_exports, "lte", {
    enumerable: true,
    get: function get() {
      return _lte.lte;
    }
  });
});
;define("mdeditor/helpers/make-range", ["exports", "ember-json-tree/helpers/make-range"], function (_exports, _makeRange) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _makeRange.default;
    }
  });
  Object.defineProperty(_exports, "makeRange", {
    enumerable: true,
    get: function get() {
      return _makeRange.makeRange;
    }
  });
});
;define("mdeditor/helpers/map-by", ["exports", "ember-composable-helpers/helpers/map-by"], function (_exports, _mapBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _mapBy.default;
    }
  });
});
;define("mdeditor/helpers/map", ["exports", "ember-composable-helpers/helpers/map"], function (_exports, _map) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _map.default;
    }
  });
});
;define("mdeditor/helpers/md-markdown", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.mdMarkdown = mdMarkdown;
  _exports.default = void 0;
  const marked = window.marked;
  function mdMarkdown(params /*, hash*/) {
    marked.setOptions({
      renderer: new marked.Renderer(),
      gfm: true,
      tables: true,
      breaks: false,
      pedantic: false,
      sanitize: false,
      smartLists: true,
      smartypants: false
    });
    if (params[0]) {
      return Ember.String.htmlSafe(marked(params[0]));
    }
    return params[1] || 'No text supplied.';
  }
  var _default = Ember.Helper.helper(mdMarkdown);
  _exports.default = _default;
});
;define("mdeditor/helpers/mod", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.mod = mod;
  _exports.default = void 0;
  function mod(params) {
    return params.reduce((a, b) => Number(a) % Number(b));
  }
  var _default = Ember.Helper.helper(mod);
  _exports.default = _default;
});
;define("mdeditor/helpers/moment-add", ["exports", "ember-moment/helpers/moment-add"], function (_exports, _momentAdd) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentAdd.default;
    }
  });
});
;define("mdeditor/helpers/moment-calendar", ["exports", "ember-moment/helpers/moment-calendar"], function (_exports, _momentCalendar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentCalendar.default;
    }
  });
});
;define("mdeditor/helpers/moment-diff", ["exports", "ember-moment/helpers/moment-diff"], function (_exports, _momentDiff) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentDiff.default;
    }
  });
});
;define("mdeditor/helpers/moment-duration", ["exports", "ember-moment/helpers/moment-duration"], function (_exports, _momentDuration) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentDuration.default;
    }
  });
});
;define("mdeditor/helpers/moment-format", ["exports", "ember-moment/helpers/moment-format"], function (_exports, _momentFormat) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentFormat.default;
    }
  });
});
;define("mdeditor/helpers/moment-from-now", ["exports", "ember-moment/helpers/moment-from-now"], function (_exports, _momentFromNow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentFromNow.default;
    }
  });
});
;define("mdeditor/helpers/moment-from", ["exports", "ember-moment/helpers/moment-from"], function (_exports, _momentFrom) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentFrom.default;
    }
  });
});
;define("mdeditor/helpers/moment-subtract", ["exports", "ember-moment/helpers/moment-subtract"], function (_exports, _momentSubtract) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentSubtract.default;
    }
  });
});
;define("mdeditor/helpers/moment-to-date", ["exports", "ember-moment/helpers/moment-to-date"], function (_exports, _momentToDate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentToDate.default;
    }
  });
});
;define("mdeditor/helpers/moment-to-now", ["exports", "ember-moment/helpers/moment-to-now"], function (_exports, _momentToNow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentToNow.default;
    }
  });
});
;define("mdeditor/helpers/moment-to", ["exports", "ember-moment/helpers/moment-to"], function (_exports, _momentTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _momentTo.default;
    }
  });
});
;define("mdeditor/helpers/moment-unix", ["exports", "ember-moment/helpers/unix"], function (_exports, _unix) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _unix.default;
    }
  });
});
;define("mdeditor/helpers/moment", ["exports", "ember-moment/helpers/moment"], function (_exports, _moment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _moment.default;
    }
  });
});
;define("mdeditor/helpers/next", ["exports", "ember-composable-helpers/helpers/next"], function (_exports, _next) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _next.default;
    }
  });
  Object.defineProperty(_exports, "next", {
    enumerable: true,
    get: function get() {
      return _next.next;
    }
  });
});
;define("mdeditor/helpers/noop", ["exports", "ember-composable-helpers/helpers/noop"], function (_exports, _noop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _noop.default;
    }
  });
  Object.defineProperty(_exports, "noop", {
    enumerable: true,
    get: function get() {
      return _noop.noop;
    }
  });
});
;define("mdeditor/helpers/not-eq", ["exports", "ember-truth-helpers/helpers/not-equal"], function (_exports, _notEqual) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _notEqual.default;
    }
  });
  Object.defineProperty(_exports, "notEq", {
    enumerable: true,
    get: function get() {
      return _notEqual.notEq;
    }
  });
});
;define("mdeditor/helpers/not", ["exports", "ember-truth-helpers/helpers/not"], function (_exports, _not) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _not.default;
    }
  });
  Object.defineProperty(_exports, "not", {
    enumerable: true,
    get: function get() {
      return _not.not;
    }
  });
});
;define("mdeditor/helpers/now", ["exports", "ember-moment/helpers/now"], function (_exports, _now) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _now.default;
    }
  });
});
;define("mdeditor/helpers/object-at", ["exports", "ember-composable-helpers/helpers/object-at"], function (_exports, _objectAt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _objectAt.default;
    }
  });
  Object.defineProperty(_exports, "objectAt", {
    enumerable: true,
    get: function get() {
      return _objectAt.objectAt;
    }
  });
});
;define("mdeditor/helpers/object-is-empty", ["exports", "mdeditor/utils/md-object"], function (_exports, _mdObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Helper.helper(function objectIsEmpty(params /*, hash*/) {
    return (0, _mdObject.isEmpty)(params[0]);
  });
  _exports.default = _default;
});
;define("mdeditor/helpers/option-is-object", ["exports", "ember-models-table/helpers/option-is-object"], function (_exports, _optionIsObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _optionIsObject.default;
    }
  });
  Object.defineProperty(_exports, "optionIsObject", {
    enumerable: true,
    get: function get() {
      return _optionIsObject.optionIsObject;
    }
  });
});
;define("mdeditor/helpers/optional", ["exports", "ember-composable-helpers/helpers/optional"], function (_exports, _optional) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _optional.default;
    }
  });
  Object.defineProperty(_exports, "optional", {
    enumerable: true,
    get: function get() {
      return _optional.optional;
    }
  });
});
;define("mdeditor/helpers/or", ["exports", "ember-truth-helpers/helpers/or"], function (_exports, _or) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _or.default;
    }
  });
  Object.defineProperty(_exports, "or", {
    enumerable: true,
    get: function get() {
      return _or.or;
    }
  });
});
;define("mdeditor/helpers/page-title", ["exports", "ember-page-title/helpers/page-title"], function (_exports, _pageTitle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _pageTitle.default;
  _exports.default = _default;
});
;define("mdeditor/helpers/perform", ["exports", "ember-concurrency/helpers/perform"], function (_exports, _perform) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _perform.default;
    }
  });
});
;define("mdeditor/helpers/pipe-action", ["exports", "ember-composable-helpers/helpers/pipe-action"], function (_exports, _pipeAction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _pipeAction.default;
    }
  });
});
;define("mdeditor/helpers/pipe", ["exports", "ember-composable-helpers/helpers/pipe"], function (_exports, _pipe) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _pipe.default;
    }
  });
  Object.defineProperty(_exports, "pipe", {
    enumerable: true,
    get: function get() {
      return _pipe.pipe;
    }
  });
});
;define("mdeditor/helpers/pluralize", ["exports", "ember-inflector/lib/helpers/pluralize"], function (_exports, _pluralize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _pluralize.default;
  _exports.default = _default;
});
;define("mdeditor/helpers/point", ["exports", "ember-leaflet/helpers/point"], function (_exports, _point) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _point.default;
    }
  });
  Object.defineProperty(_exports, "point", {
    enumerable: true,
    get: function get() {
      return _point.point;
    }
  });
});
;define("mdeditor/helpers/present", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.present = present;
  _exports.default = void 0;
  function present(params) {
    return Ember.isPresent(params[0]);
  }
  var _default = Ember.Helper.helper(present);
  _exports.default = _default;
});
;define("mdeditor/helpers/previous", ["exports", "ember-composable-helpers/helpers/previous"], function (_exports, _previous) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _previous.default;
    }
  });
  Object.defineProperty(_exports, "previous", {
    enumerable: true,
    get: function get() {
      return _previous.previous;
    }
  });
});
;define("mdeditor/helpers/queue", ["exports", "ember-composable-helpers/helpers/queue"], function (_exports, _queue) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _queue.default;
    }
  });
  Object.defineProperty(_exports, "queue", {
    enumerable: true,
    get: function get() {
      return _queue.queue;
    }
  });
});
;define("mdeditor/helpers/range", ["exports", "ember-composable-helpers/helpers/range"], function (_exports, _range) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _range.default;
    }
  });
  Object.defineProperty(_exports, "range", {
    enumerable: true,
    get: function get() {
      return _range.range;
    }
  });
});
;define("mdeditor/helpers/reduce", ["exports", "ember-composable-helpers/helpers/reduce"], function (_exports, _reduce) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _reduce.default;
    }
  });
});
;define("mdeditor/helpers/reject-by", ["exports", "ember-composable-helpers/helpers/reject-by"], function (_exports, _rejectBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _rejectBy.default;
    }
  });
});
;define("mdeditor/helpers/repeat", ["exports", "ember-composable-helpers/helpers/repeat"], function (_exports, _repeat) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _repeat.default;
    }
  });
  Object.defineProperty(_exports, "repeat", {
    enumerable: true,
    get: function get() {
      return _repeat.repeat;
    }
  });
});
;define("mdeditor/helpers/reverse", ["exports", "ember-composable-helpers/helpers/reverse"], function (_exports, _reverse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _reverse.default;
    }
  });
});
;define("mdeditor/helpers/round", ["exports", "ember-math-helpers/helpers/round"], function (_exports, _round) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _round.default;
    }
  });
  Object.defineProperty(_exports, "round", {
    enumerable: true,
    get: function get() {
      return _round.round;
    }
  });
});
;define("mdeditor/helpers/route-action", ["exports", "ember-route-action-helper/helpers/route-action"], function (_exports, _routeAction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _routeAction.default;
    }
  });
});
;define("mdeditor/helpers/shuffle", ["exports", "ember-composable-helpers/helpers/shuffle"], function (_exports, _shuffle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _shuffle.default;
    }
  });
  Object.defineProperty(_exports, "shuffle", {
    enumerable: true,
    get: function get() {
      return _shuffle.shuffle;
    }
  });
});
;define("mdeditor/helpers/simple-mde-preview", ["exports", "ember-simplemde/helpers/simple-mde-preview"], function (_exports, _simpleMdePreview) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _simpleMdePreview.default;
    }
  });
  Object.defineProperty(_exports, "simpleMdePreview", {
    enumerable: true,
    get: function get() {
      return _simpleMdePreview.simpleMdePreview;
    }
  });
});
;define("mdeditor/helpers/singularize", ["exports", "ember-inflector/lib/helpers/singularize"], function (_exports, _singularize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _singularize.default;
  _exports.default = _default;
});
;define("mdeditor/helpers/slice", ["exports", "ember-composable-helpers/helpers/slice"], function (_exports, _slice) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _slice.default;
    }
  });
});
;define("mdeditor/helpers/sort-by", ["exports", "ember-composable-helpers/helpers/sort-by"], function (_exports, _sortBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sortBy.default;
    }
  });
});
;define("mdeditor/helpers/stringify", ["exports", "ember-models-table/helpers/stringify"], function (_exports, _stringify) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _stringify.default;
    }
  });
  Object.defineProperty(_exports, "stringify", {
    enumerable: true,
    get: function get() {
      return _stringify.stringify;
    }
  });
});
;define("mdeditor/helpers/take", ["exports", "ember-composable-helpers/helpers/take"], function (_exports, _take) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _take.default;
    }
  });
});
;define("mdeditor/helpers/task", ["exports", "ember-concurrency/helpers/task"], function (_exports, _task) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _task.default;
    }
  });
});
;define("mdeditor/helpers/titleize", ["exports", "ember-cli-string-helpers/helpers/titleize"], function (_exports, _titleize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _titleize.default;
    }
  });
  Object.defineProperty(_exports, "titleize", {
    enumerable: true,
    get: function get() {
      return _titleize.titleize;
    }
  });
});
;define("mdeditor/helpers/toggle-action", ["exports", "ember-composable-helpers/helpers/toggle-action"], function (_exports, _toggleAction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _toggleAction.default;
    }
  });
});
;define("mdeditor/helpers/toggle", ["exports", "ember-composable-helpers/helpers/toggle"], function (_exports, _toggle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _toggle.default;
    }
  });
  Object.defineProperty(_exports, "toggle", {
    enumerable: true,
    get: function get() {
      return _toggle.toggle;
    }
  });
});
;define("mdeditor/helpers/trim", ["exports", "ember-cli-string-helpers/helpers/trim"], function (_exports, _trim) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _trim.default;
    }
  });
  Object.defineProperty(_exports, "trim", {
    enumerable: true,
    get: function get() {
      return _trim.trim;
    }
  });
});
;define("mdeditor/helpers/truncate", ["exports", "ember-cli-string-helpers/helpers/truncate"], function (_exports, _truncate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _truncate.default;
    }
  });
  Object.defineProperty(_exports, "truncate", {
    enumerable: true,
    get: function get() {
      return _truncate.truncate;
    }
  });
});
;define("mdeditor/helpers/uc-words", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ucWords = ucWords;
  _exports.default = void 0;
  function ucWords(params, hash) {
    var string = String(params[0]),
      force = hash.force === true ? true : false;
    if (force) {
      string = string.toLowerCase();
    }
    return string.replace(/(^|\s)[a-z\u00E0-\u00FC]/g, function ($1) {
      return $1.toUpperCase();
    });
  }
  var _default = Ember.Helper.helper(ucWords);
  _exports.default = _default;
});
;define("mdeditor/helpers/underscore", ["exports", "ember-cli-string-helpers/helpers/underscore"], function (_exports, _underscore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _underscore.default;
    }
  });
  Object.defineProperty(_exports, "underscore", {
    enumerable: true,
    get: function get() {
      return _underscore.underscore;
    }
  });
});
;define("mdeditor/helpers/union", ["exports", "ember-composable-helpers/helpers/union"], function (_exports, _union) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _union.default;
    }
  });
});
;define("mdeditor/helpers/unix", ["exports", "ember-moment/helpers/unix"], function (_exports, _unix) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _unix.default;
    }
  });
});
;define("mdeditor/helpers/uppercase", ["exports", "ember-cli-string-helpers/helpers/uppercase"], function (_exports, _uppercase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _uppercase.default;
    }
  });
  Object.defineProperty(_exports, "uppercase", {
    enumerable: true,
    get: function get() {
      return _uppercase.uppercase;
    }
  });
});
;define("mdeditor/helpers/utc", ["exports", "ember-moment/helpers/utc"], function (_exports, _utc) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _utc.default;
    }
  });
  Object.defineProperty(_exports, "utc", {
    enumerable: true,
    get: function get() {
      return _utc.utc;
    }
  });
});
;define("mdeditor/helpers/w", ["exports", "ember-cli-string-helpers/helpers/w"], function (_exports, _w) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _w.default;
    }
  });
  Object.defineProperty(_exports, "w", {
    enumerable: true,
    get: function get() {
      return _w.w;
    }
  });
});
;define("mdeditor/helpers/without", ["exports", "ember-composable-helpers/helpers/without"], function (_exports, _without) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _without.default;
    }
  });
  Object.defineProperty(_exports, "without", {
    enumerable: true,
    get: function get() {
      return _without.without;
    }
  });
});
;define("mdeditor/helpers/word-limit", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.wordLimit = wordLimit;
  _exports.default = void 0;
  function wordLimit(params, {
    limit,
    wordLength
  }) {
    const [value] = params;
    if (Ember.isPresent(value)) {
      let arr = value.replace(/[ \s\n]+/g, ' |').split('|');
      let words = limit || 50;
      let stop;
      arr.every((itm, idx) => {
        stop = idx;
        if (itm.trim() === "") {
          return true;
        }
        if (wordLength && itm.length > wordLength) {
          arr[idx] = ' ' + itm.trim().slice(0, wordLength) + '...';
        }
        return idx < words;
      });
      let text = arr.slice(0, stop > 0 ? stop : stop + 1).join('');
      if (arr.length > words) {
        text += '...';
      }
      return text;
    }
    return value;
  }
  var _default = Ember.Helper.helper(wordLimit);
  _exports.default = _default;
});
;define("mdeditor/helpers/xor", ["exports", "ember-truth-helpers/helpers/xor"], function (_exports, _xor) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _xor.default;
    }
  });
  Object.defineProperty(_exports, "xor", {
    enumerable: true,
    get: function get() {
      return _xor.xor;
    }
  });
});
;define("mdeditor/initializers/add-modals-container", ["exports", "ember-modal-dialog/initializers/add-modals-container"], function (_exports, _addModalsContainer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: 'add-modals-container',
    initialize: _addModalsContainer.default
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/app-version", ["exports", "ember-cli-app-version/initializer-factory", "mdeditor/config/environment"], function (_exports, _initializerFactory, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  let name, version;
  if (_environment.default.APP) {
    name = _environment.default.APP.name;
    version = _environment.default.APP.version;
  }
  var _default = {
    name: 'App Version',
    initialize: (0, _initializerFactory.default)(name, version)
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/autoresize", ["exports", "ember-autoresize/ext/text-field", "ember-autoresize/ext/text-area"], function (_exports, _textField, _textArea) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: "autoresize",
    initialize: function initialize() {}
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/container-debug-adapter", ["exports", "ember-resolver/resolvers/classic/container-debug-adapter"], function (_exports, _containerDebugAdapter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: 'container-debug-adapter',
    initialize() {
      let app = arguments[1] || arguments[0];
      app.register('container-debug-adapter:main', _containerDebugAdapter.default);
      app.inject('container-debug-adapter:main', 'namespace', 'application:main');
    }
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/coordinator-setup", ["exports", "mdeditor/models/coordinator"], function (_exports, _coordinator) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: "setup coordinator",
    initialize: function initialize() {
      let app = arguments[1] || arguments[0];
      app.register("drag:coordinator", _coordinator.default);
      app.inject("component", "coordinator", "drag:coordinator");
    }
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/crumbly", ["exports", "ember-crumbly/initializers/crumbly"], function (_exports, _crumbly) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _crumbly.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function get() {
      return _crumbly.initialize;
    }
  });
});
;define("mdeditor/initializers/ember-concurrency", ["exports", "ember-concurrency/initializers/ember-concurrency"], function (_exports, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberConcurrency.default;
    }
  });
});
;define("mdeditor/initializers/ember-data", ["exports", "ember-data/setup-container", "ember-data"], function (_exports, _setupContainer, _emberData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  /*
  
    This code initializes Ember-Data onto an Ember application.
  
    If an Ember.js developer defines a subclass of DS.Store on their application,
    as `App.StoreService` (or via a module system that resolves to `service:store`)
    this code will automatically instantiate it and make it available on the
    router.
  
    Additionally, after an application's controllers have been injected, they will
    each have the store made available to them.
  
    For example, imagine an Ember.js application with the following classes:
  
    ```app/services/store.js
    import DS from 'ember-data';
  
    export default DS.Store.extend({
      adapter: 'custom'
    });
    ```
  
    ```app/controllers/posts.js
    import { Controller } from '@ember/controller';
  
    export default Controller.extend({
      // ...
    });
  
    When the application is initialized, `ApplicationStore` will automatically be
    instantiated, and the instance of `PostsController` will have its `store`
    property set to that instance.
  
    Note that this code will only be run if the `ember-application` package is
    loaded. If Ember Data is being used in an environment other than a
    typical application (e.g., node.js where only `ember-runtime` is available),
    this code will be ignored.
  */
  var _default = {
    name: 'ember-data',
    initialize: _setupContainer.default
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/emt-themes", ["exports", "ember-models-table/initializers/emt-themes"], function (_exports, _emtThemes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emtThemes.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function get() {
      return _emtThemes.initialize;
    }
  });
});
;define("mdeditor/initializers/export-application-global", ["exports", "mdeditor/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  function initialize() {
    var application = arguments[1] || arguments[0];
    if (_environment.default.exportApplicationGlobal !== false) {
      var theGlobal;
      if (typeof window !== 'undefined') {
        theGlobal = window;
      } else if (typeof global !== 'undefined') {
        theGlobal = global;
      } else if (typeof self !== 'undefined') {
        theGlobal = self;
      } else {
        // no reasonable global, just bail
        return;
      }
      var value = _environment.default.exportApplicationGlobal;
      var globalName;
      if (typeof value === 'string') {
        globalName = value;
      } else {
        globalName = Ember.String.classify(_environment.default.modulePrefix);
      }
      if (!theGlobal[globalName]) {
        theGlobal[globalName] = application;
        application.reopen({
          willDestroy: function willDestroy() {
            this._super.apply(this, arguments);
            delete theGlobal[globalName];
          }
        });
      }
    }
  }
  var _default = {
    name: 'export-application-global',
    initialize: initialize
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/flash-messages", ["exports", "mdeditor/config/environment", "ember-cli-flash/utils/flash-message-options"], function (_exports, _environment, _flashMessageOptions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  /* eslint-disable ember/new-module-imports */
  const {
    deprecate
  } = Ember;
  const INJECTION_FACTORIES_DEPRECATION_MESSAGE = '[ember-cli-flash] Future versions of ember-cli-flash will no longer inject the service automatically. Instead, you should explicitly inject it into your Route, Controller or Component with `Ember.inject.service`.';
  function initialize() {
    const application = arguments[1] || arguments[0];
    const {
      flashMessageDefaults
    } = _environment.default || {};
    const {
      injectionFactories
    } = flashMessageDefaults || [];
    const options = (0, _flashMessageOptions.default)(flashMessageDefaults);
    const shouldShowDeprecation = !(injectionFactories && injectionFactories.length);
    deprecate(INJECTION_FACTORIES_DEPRECATION_MESSAGE, shouldShowDeprecation, {
      id: 'ember-cli-flash.deprecate-injection-factories',
      until: '2.0.0'
    });
    options.injectionFactories.forEach(factory => {
      application.inject(factory, 'flashMessages', 'service:flash-messages');
    });
  }
  var _default = {
    name: 'flash-messages',
    initialize
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/hide-loading-screen", ["exports", "mdeditor/instance-initializers/hide-loading-screen"], function (_exports, _hideLoadingScreen) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  const EMBER_VERSION_REGEX = /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:(?:-(alpha|beta)\.([0-9]+)(?:\.([0-9]+))?)?)?(?:\+(canary))?(?:\.([0-9abcdef]+))?(?:-([A-Za-z0-9.-]+))?(?:\+([A-Za-z0-9.-]+))?$/;

  /**
   * VERSION_INFO[i] is as follows:
   *
   * 0  complete version string
   * 1  major version
   * 2  minor version
   * 3  trivial version
   * 4  pre-release type (optional: "alpha" or "beta" or undefined for stable releases)
   * 5  pre-release version (optional)
   * 6  pre-release sub-version (optional)
   * 7  canary (optional: "canary", or undefined for stable releases)
   * 8  SHA (optional)
   *
   * @private
   */
  const VERSION_INFO = EMBER_VERSION_REGEX.exec(Ember.VERSION);
  const isPre111 = parseInt(VERSION_INFO[1], 10) < 2 && parseInt(VERSION_INFO[2], 10) < 12;
  function initialize() {
    if (isPre111) {
      let [registry, application] = arguments;
      _hideLoadingScreen.default.initialize(registry, application);
    }
  }
  var _default = {
    name: 'hide-loading-screen',
    initialize
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/leaflet-assets", ["exports", "ember-leaflet/initializers/leaflet-assets"], function (_exports, _leafletAssets) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _leafletAssets.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function get() {
      return _leafletAssets.initialize;
    }
  });
});
;define("mdeditor/initializers/leaflet", ["exports", "mdeditor/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  /* global L */

  function initialize() {
    if (_environment.default.environment === 'production') {
      L.Icon.Default.imagePath = _environment.default.rootURL + '/assets/images/';
    }
    if (_environment.default.environment === 'development') {
      L.Icon.Default.imagePath = '/assets/images/';
    }
  }
  var _default = {
    name: 'leaflet',
    initialize
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/liquid-fire", ["exports", "liquid-fire/velocity-ext"], function (_exports, _velocityExt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: 'liquid-fire',
    initialize: function initialize() {}
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/local-storage-adapter", ["exports", "ember-local-storage/initializers/local-storage-adapter"], function (_exports, _localStorageAdapter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _localStorageAdapter.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function get() {
      return _localStorageAdapter.initialize;
    }
  });
});
;define("mdeditor/initializers/local-storage-export", ["exports", "ember-data", "ember-inflector"], function (_exports, _emberData, _emberInflector) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  const exportSelected = function exportSelected(store, types, options) {
    // merge defaults
    options = Ember.assign({
      json: true,
      download: false,
      filename: 'ember-data.json',
      filterIds: null
    }, options || {});
    let json, data;
    let filter = typeof options.filterIds === 'object' ? options.filterIds : null;

    // collect data
    data = types.reduce((records, type) => {
      const adapter = store.adapterFor((0, _emberInflector.singularize)(type));
      const url = adapter.buildURL(type),
        exportData = adapter._handleGETRequest(url);
      records.data = records.data.concat(exportData.filter(itm => filter[(0, _emberInflector.singularize)(type)].indexOf(itm.id) !== -1));
      return records;
    }, {
      data: []
    });
    if (options.json || options.download) {
      json = JSON.stringify(data);
    }
    if (options.json) {
      data = json;
    }
    if (options.download) {
      window.saveAs(new Blob([json], {
        type: 'application/json;charset=utf-8'
      }), options.filename);
    }
    return new Ember.RSVP.Promise(resolve => {
      Ember.run(null, resolve, data);
    }, 'DS: LocalStorageAdapter#exportData');
  };
  function initialize() {
    _emberData.default.Store.reopen({
      exportSelectedData(types, options) {
        return exportSelected(this, types, options);
      }
    });
  }
  var _default = {
    name: 'local-storage-export',
    after: 'ember-data',
    initialize: initialize
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/resize", ["exports", "ember-resize/services/resize", "mdeditor/config/environment"], function (_exports, _resize, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  function initialize(application) {
    const resizeServiceDefaults = Ember.getWithDefault(_environment.default, 'resizeServiceDefaults', {
      debounceTimeout: 200,
      heightSensitive: true,
      widthSensitive: true
    });
    const injectionFactories = Ember.getWithDefault(resizeServiceDefaults, 'injectionFactories', ['view', 'component']) || [];
    application.unregister('config:resize-service');
    application.register('config:resize-service', resizeServiceDefaults, {
      instantiate: false
    });
    application.register('service:resize', _resize.default);
    const resizeService = application.resolveRegistration('service:resize');
    resizeService.prototype.resizeServiceDefaults = resizeServiceDefaults;
    injectionFactories.forEach(factory => {
      application.inject(factory, 'resizeService', 'service:resize');
    });
  }
  var _default = {
    initialize,
    name: 'resize'
  };
  _exports.default = _default;
});
;define("mdeditor/initializers/viewport-config", ["exports", "ember-in-viewport/initializers/viewport-config"], function (_exports, _viewportConfig) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _viewportConfig.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function get() {
      return _viewportConfig.initialize;
    }
  });
});
;define("mdeditor/instance-initializers/ember-data", ["exports", "ember-data/initialize-store-service"], function (_exports, _initializeStoreService) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: 'ember-data',
    initialize: _initializeStoreService.default
  };
  _exports.default = _default;
});
;define("mdeditor/instance-initializers/ember-gestures", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: 'ember-gestures',
    initialize: function initialize(instance) {
      if (typeof instance.lookup === "function") {
        instance.lookup('service:-gestures');
      } else {
        // This can be removed when we no-longer support ember 1.12 and 1.13
        Ember.getOwner(instance).lookup('service:-gestures');
      }
    }
  };
  _exports.default = _default;
});
;define("mdeditor/instance-initializers/emt-inject", ["exports", "ember-models-table/instance-initializers/emt-inject"], function (_exports, _emtInject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emtInject.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function get() {
      return _emtInject.initialize;
    }
  });
});
;define("mdeditor/instance-initializers/head-browser", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = {
    name: 'head-browser',
    initialize() {
      // do nothing!
      // this functionality has been moved into addon/components/head-layout.js
      // This is only here in order to not break existing addons relying on this, e.g. ember-page-title.
    }
  };
  _exports.default = _default;
});
;define("mdeditor/instance-initializers/hide-loading-screen", ["exports", "mdeditor/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  const userConfig = _environment.default['ember-load'] || {};
  function initialize() {
    let instance = arguments[1] || arguments[0];
    let container = arguments[1] ? arguments[0] : instance.container;
    if (Ember.View) {
      let ApplicationView = container.lookupFactory ? container.lookupFactory('view:application') : instance.resolveRegistration('view:application');
      ApplicationView.reopen({
        didInsertElement() {
          this._super(...arguments);
          let loadingIndicatorClass = userConfig.loadingIndicatorClass || 'ember-load-indicator';
          document.querySelectorAll(".".concat(loadingIndicatorClass)).forEach(e => e.remove());
        }
      });
    }
  }
  var _default = {
    name: 'hide-loading-screen-instance',
    initialize
  };
  _exports.default = _default;
});
;define("mdeditor/instance-initializers/profile", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  function initialize(appInstance) {
    //appInstance.inject('route', 'profile', 'service:custom-profile');
    //appInstance.inject('controller', 'profile', 'service:custom-profile');
    appInstance.inject('component', 'profile', 'service:custom-profile');
  }
  var _default = {
    name: 'profile',
    initialize
  };
  _exports.default = _default;
});
;define("mdeditor/instance-initializers/route-publish", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  function initialize(appInstance) {
    let catalogs = appInstance.lookup('service:publish').get('catalogs');

    // appInstance.inject('route', 'foo', 'service:foo');
    Ember.Router.map(function () {
      this.route('publish', function () {
        catalogs.forEach(itm => {
          this.route(itm.route);
        });
      });
    });
  }
  var _default = {
    initialize
  };
  _exports.default = _default;
});
;define("mdeditor/instance-initializers/settings-sciencebase", ["exports", "mdeditor-sciencebase/instance-initializers/settings-sciencebase"], function (_exports, _settingsSciencebase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _settingsSciencebase.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function get() {
      return _settingsSciencebase.initialize;
    }
  });
});
;define("mdeditor/instance-initializers/settings", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.initialize = initialize;
  _exports.default = void 0;
  function initialize(appInstance) {
    appInstance.inject('route', 'settings', 'service:settings');
    appInstance.inject('controller', 'settings', 'service:settings');
  }
  var _default = {
    name: 'settings',
    initialize
  };
  _exports.default = _default;
});
;define("mdeditor/mdeditor-sciencebase/tests/addon.lint-test", [], function () {
  "use strict";

  QUnit.module('ESLint | addon');
  QUnit.test('addon/components/sb-publisher.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/sb-publisher.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/sb-settings.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/sb-settings.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/sb-tree-label.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/sb-tree-label.js should pass ESLint\n\n');
  });
  QUnit.test('addon/components/sb-tree.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/sb-tree.js should pass ESLint\n\n');
  });
  QUnit.test('addon/instance-initializers/settings-sciencebase.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/settings-sciencebase.js should pass ESLint\n\n');
  });
  QUnit.test('addon/routes/publish/sciencebase.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/publish/sciencebase.js should pass ESLint\n\n');
  });
  QUnit.test('addon/utils/config.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/config.js should pass ESLint\n\n');
  });
  QUnit.test('addon/utils/sb-tree-node.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/sb-tree-node.js should pass ESLint\n\n');
  });
});
;define("mdeditor/mdeditor-sciencebase/tests/app.lint-test", [], function () {
  "use strict";

  QUnit.module('ESLint | app');
  QUnit.test('app/components/sb-publisher.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/sb-publisher.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/sb-settings.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/sb-settings.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/sb-tree-label.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/sb-tree-label.js should pass ESLint\n\n');
  });
  QUnit.test('app/components/sb-tree.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/sb-tree.js should pass ESLint\n\n');
  });
  QUnit.test('app/instance-initializers/settings-sciencebase.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/settings-sciencebase.js should pass ESLint\n\n');
  });
  QUnit.test('app/routes/publish/sciencebase.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/routes/publish/sciencebase.js should pass ESLint\n\n');
  });
  QUnit.test('app/templates/publish/sciencebase.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/templates/publish/sciencebase.js should pass ESLint\n\n');
  });
  QUnit.test('app/utils/config.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/config.js should pass ESLint\n\n');
  });
  QUnit.test('app/utils/sb-tree-node.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/sb-tree-node.js should pass ESLint\n\n');
  });
});
;define("mdeditor/mdeditor-sciencebase/tests/templates.template.lint-test", [], function () {
  "use strict";

  QUnit.module('TemplateLint');
  QUnit.test('addon/templates/components/sb-publisher.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/sb-publisher.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/sb-settings.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/sb-settings.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/components/sb-tree-label.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/components/sb-tree-label.hbs should pass TemplateLint.\n\n');
  });
  QUnit.test('addon/templates/publish/sciencebase.hbs', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/templates/publish/sciencebase.hbs should pass TemplateLint.\n\n');
  });
});
;define("mdeditor/mixins/cancel", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Mixin.create({
    doCancel() {
      let controller = this.controller;
      let same = !controller.cancelScope || Ember.getOwner(this).lookup('controller:application').currentPath === Ember.get(controller, 'cancelScope.routeName');
      if (controller.onCancel) {
        Ember.run.once(() => {
          if (same) {
            controller.onCancel.call(controller.cancelScope || this);
          } else {
            controller.set('onCancel', null);
            controller.set('cancelScope', null);
          }
          this.refresh();
        });
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/mixins/hash-poll", ["exports", "ember-concurrency"], function (_exports, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.pollInterval = void 0;
  const pollInterval = 750; // time in milliseconds
  _exports.pollInterval = pollInterval;
  var _default = Ember.Mixin.create({
    settings: Ember.inject.service(),
    afterModel(model) {
      this._super(...arguments);
      if (this.get('settings.data.autoSave')) {
        model.set('jsonRevert', model.serialize().data.attributes.json);
      }
      this.pollTask.perform();
      return model;
    },
    deactivatePoll: Ember.on('deactivate', function () {
      this.pollTask.cancelAll();
    }),
    poll() {
      const model = this.currentRouteModel();
      return new Ember.RSVP.Promise(function (resolve) {
        if (model) {
          model.notifyPropertyChange('currentHash');
        }
        resolve(true);
      });
    },
    pollTask: (0, _emberConcurrency.task)(function* () {
      while (true) {
        yield this.poll();
        yield (0, _emberConcurrency.timeout)(pollInterval);
      }
    }).restartable()
  });
  _exports.default = _default;
});
;define("mdeditor/mixins/object-template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Mixin.create({
    /**
     * Use this mixin to apply 'templates' to an array of objects. Especially useful
     * when the object must support setting arrays that are not passed during
     * initialization.
     *
     * @class object-template
     * @constructor
     * @static
     */

    /**
     * Apply the 'template' to the object.
     *
     * @method applyTemplate
     * @param {Object} object The object to apply the template to.
     * @return {Ember.Object}
     */
    applyTemplate(object, defaults) {
      let value = object || {};
      let Template = this.templateClass;
      if (Template) {
        let owner = Ember.getOwner(this);
        return Ember.assign(Template.create(owner.ownerInjection(), defaults || {}), value);
      }
      return object;
    },
    /**
     * Apply the object 'template' to each object in the array.
     *
     * @method applyTemplateArray
     * @param {Array} propertyName The array of objects to apply the template to.
     * @return {Array}
     */
    applyTemplateArray(propertyName, defaults) {
      let property = this.get(propertyName);
      if (Ember.isArray(property)) {
        let Template = this.templateClass;
        if (Template) {
          let owner = Ember.getOwner(this);
          Ember.run.once(this, () => {
            property.forEach((item, idx, items) => {
              //items.removeAt(idx);

              let newItem = Ember.assign(Template.create(owner.ownerInjection(), defaults || {}), item);

              //items.insertAt(idx, newItem);
              items.set("".concat(idx), newItem);
            });
            this.notifyPropertyChange(propertyName);
          });
        }
      } else {
        Ember.run.once(this, () => {
          this.set(propertyName, Ember.A());
        });
      }
      return this.get(propertyName);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/mixins/resize-aware", ["exports", "ember-resize/mixins/resize-aware"], function (_exports, _resizeAware) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _resizeAware.default;
    }
  });
});
;define("mdeditor/mixins/scroll-to", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Mixin.create({
    queryParams: {
      scrollTo: true
    },
    setScrollTo(scrollTo) {
      this.controller.set('scrollTo', scrollTo || '');
    },
    actions: {
      setScrollTo(scrollTo) {
        this.setScrollTo(scrollTo);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/models/base", ["exports", "ember-data", "object-hash"], function (_exports, _emberData, _objectHash) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Base = _emberData.default.Model.extend({
    /**
     * Base model
     *
     * @class base
     * @constructor
     * @extends DS.Model
     * @module mdeditor
     * @submodule data-models
     */

    init() {
      this._super(...arguments);
      this.on('didUpdate', this, this.wasUpdated);
      this.on('didCreate', this, this.wasUpdated);
      this.on('didLoad', this, this.applyPatch);
      this.on('ready', this, this.isReady);
      this.hasDirtyAttributes;
      //this.on('didLoad', this, this.wasLoaded);
    },

    settings: Ember.inject.service(),
    schemas: Ember.inject.service(),
    customProfiles: Ember.inject.service('custom-profile'),
    patch: Ember.inject.service(),
    clean: Ember.inject.service('cleaner'),
    mdjson: Ember.inject.service('mdjson'),
    /**
     * The hash for the clean record.
     *
     * @property currentHash
     * @type {String}
     */

    /**
     * The clean json object.
     *
     * @property jsonSnapshot
     * @type {String}
     */

    observeReload: Ember.observer('isReloading', function () {
      let reloading = this.isReloading;
      if (!reloading) {
        this.wasUpdated(this);
      }
    }),
    observeAutoSave: Ember.observer('hasDirtyAttributes', 'hasDirtyHash', function () {
      if (this.isNew || this.isEmpty) {
        return;
      }
      if (this.get('settings.data.autoSave') && (this.hasDirtyHash || this.hasDirtyAttributes)) {
        Ember.run.once(this, function () {
          this.save();
        });
      }
    }),
    applyPatch() {
      Ember.run.once(this, function () {
        let patch = this.patch;
        patch.applyModelPatch(this);
      });
    },
    isReady() {
      let newHash = this.hashObject(JSON.parse(this.serialize().data.attributes.json), true);

      // if the currentHash is undefined, the record is either new or hasn't had the
      // hash calculated yet
      if (this.currentHash === undefined) {
        this.set('currentHash', newHash);
      }
    },
    wasUpdated() {
      this._super(...arguments);

      //let record = model.record || this;
      let json = JSON.parse(this.serialize().data.attributes.json);
      this.setCurrentHash(json);
      this.set('jsonSnapshot', json);
    },
    wasLoaded() {
      this._super(...arguments);
      let json = JSON.parse(this.serialize().data.attributes.json);
      this.setCurrentHash(json);
      this.set('jsonSnapshot', json);
    },
    saved() {
      this.set('dateUpdated', new Date());
      return this._super(...arguments);
    },
    /**
     * Compute and set the model hash.
     *
     * @method setCurrentHash
     * @param {Object} model Optional model with json property to target
     */
    setCurrentHash(json) {
      let target = json || this.json;
      Ember.set(this, 'currentHash', this.hashObject(target), true);
    },
    /**
     * Computed a hash for the target object.
     *
     * @property hashObject
     * @param  {Object} target    The object to hash
     * @param  {Boolean} parsed    If true, the object will not be passed through
     *                            JSON.parse before being hashed
     * @return {String|undefined} The hash or undefined if an object wasn't provided.
     */
    hashObject(target, parsed) {
      let toHash = parsed ? target : JSON.parse(JSON.stringify(target));
      return typeof toHash === "object" ? (0, _objectHash.default)(toHash) : undefined;
    },
    /**
     * Compare the current hash with the cached one.
     *
     * @property hasDirtyHash
     * @return {Boolean} Boolean value indicating if hashes are equivalent
     */
    hasDirtyHash: Ember.computed('currentHash', function () {
      let newHash = this.hashObject(JSON.parse(this.serialize().data.attributes.json), true);

      //if the currentHash is undefined, the record is either new or hasn't had the
      //hash calculated yet
      // if(this.get('currentHash') === undefined) {
      //   this.set('currentHash', newHash);
      // }

      if (this.currentHash !== newHash || this.hasDirtyAttributes) {
        return true;
      }
      return false;
    }),
    canRevert: Ember.computed('hasDirtyHash', 'settings.data.autoSave', function () {
      let dirty = this.hasDirtyHash;
      let autoSave = this.get('settings.data.autoSave');

      //no autoSave so just check if dirty
      if (!autoSave && dirty) {
        return true;
      }
      let revert = this.jsonRevert;

      //if we have set revert object with autoSave on
      if (revert && autoSave) {
        let hash = this.hashObject(JSON.parse(revert), true) !== this.currentHash;

        //check if changes have been made
        if (hash) {
          return true;
        }
      }
      return false;
    }),
    cleanJson: Ember.computed.alias('_cleanJson'),
    status: Ember.computed('hasDirtyHash', 'hasSchemaErrors', function () {
      let dirty = this.hasDirtyHash;
      let errors = this.hasSchemaErrors;
      if (this.currentHash) {
        return dirty ? 'danger' : errors ? 'warning' : 'success';
      }
      return 'success';
    }),
    /**
     * Indicates whether errors are present.
     *
     * @property hasSchemaErrors
     * @type {Boolean}
     * @readOnly
     * @category computed
     * @requires schemaErrors
     */
    hasSchemaErrors: Ember.computed.bool('schemaErrors.length'),
    /**
     * Array of custom schemas that are associated with this model
     *
     * @property customSchemas
     * @type {Array}
     * @default "[]"
     * @readOnly
     * @category computed
     * @requires
     */
    customSchemas: Ember.computed('schemas.schemas.@each.isGlobal', 'profile', function () {
      return this.schemas.schemas.filter(schema => {
        if (schema.schemaType !== this.constructor.modelName) {
          return false;
        }
        if (schema.isGlobal) {
          return true;
        }
        let profile = this.customProfiles.mapById[this.profile];
        if (!profile || !profile.schemas) {
          return false;
        }
        return profile.schemas.indexOf(schema) > -1;
      }, this);
    })
  });

  //Modify the prototype instead of using computed.volatile()
  //see https://github.com/emberjs/ember.js/issues/17709#issuecomment-469941364

  Object.defineProperty(Base.prototype, '_cleanJson', {
    get() {
      return this.clean.clean(this.json);
    }
  });
  var _default = Base;
  _exports.default = _default;
});
;define("mdeditor/models/contact", ["exports", "ember-copy", "ember-data", "uuid/v4", "validator", "mdeditor/models/base", "ember-cp-validations"], function (_exports, _emberCopy, _emberData, _v, _validator, _base, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.JsonDefault = _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'json.contactId': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    'json.name': [(0, _emberCpValidations.validator)('format', {
      regex: /^\s+$/,
      inverse: true,
      isWarning: true,
      message: "Name should not be only white-space."
    }), (0, _emberCpValidations.validator)('presence', {
      disabled: Ember.computed.notEmpty('model.json.positionName'),
      presence: true
    })],
    'json.positionName': [(0, _emberCpValidations.validator)('format', {
      regex: /^\s+$/,
      inverse: true,
      isWarning: true,
      message: "Position Name should not be only white-space."
    }), (0, _emberCpValidations.validator)('presence', {
      disabled: Ember.computed.notEmpty('model.json.name'),
      presence: true
    })],
    'json.isOrganization': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })
  });
  const JsonDefault = Ember.Object.extend({
    init() {
      this._super(...arguments);
      this.setProperties({
        'contactId': (0, _v.default)(),
        'isOrganization': false,
        'name': null,
        //'positionName': null,
        'memberOfOrganization': [],
        'logoGraphic': [],
        'phone': [],
        'address': [],
        'electronicMailAddress': [],
        'externalIdentifier': [],
        'onlineResource': [],
        'hoursOfService': []
        //'contactInstructions': null,
        //'contactType': null;
      });
    }
  });
  _exports.JsonDefault = JsonDefault;
  const Contact = _base.default.extend(Validations, _emberCopy.Copyable, {
    /**
     * Contact model
     *
     * @class contact
     * @constructor
     * @extends base
     * @uses Validations,Copyable
     * @mixin Ember.Copyable
     * @module mdeditor
     * @submodule data-models
     */

    contactsService: Ember.inject.service('contacts'),
    contacts: _emberData.default.hasMany('contact', {
      inverse: 'organizations'
    }),
    organizations: _emberData.default.hasMany('contact', {
      inverse: 'contacts'
    }),
    /**
     * The json object for the contact. The data for the contact is stored in this
     * object.
     *
     * @attribute json
     * @type {json}
     * @required
     */
    json: _emberData.default.attr('json', {
      defaultValue: function defaultValue() {
        return JsonDefault.create();
      }
    }),
    /**
     * The timestamp for the record
     *
     * @attribute dateUpdated
     * @type {date}
     * @default new Date()
     * @required
     */
    dateUpdated: _emberData.default.attr('date', {
      defaultValue() {
        return new Date();
      }
    }),
    name: Ember.computed.alias('json.name'),
    contactId: Ember.computed.alias('json.contactId'),
    /**
     * The formatted display string for the contact
     *
     * @property title
     * @type {String}
     * @readOnly
     * @category computed
     * @requires json.name, json.positionName
     */
    title: Ember.computed('json.{name,positionName,isOrganization}', function () {
      const json = this.json;
      return json.name || (json.isOrganization ? null : json.positionName);
    }),
    // /**
    //  * The formatted display string for the contact
    //  *
    //  * @property title
    //  * @type {String}
    //  * @readOnly
    //  * @category computed
    //  * @requires json.name, json.positionName
    //  */
    // updateMembers: Ember.observer('json.memberOfOrganization.[]',
    //   function () {
    //     //const me = this;
    //     const json = this.get('json');
    //     const value = json.memberOfOrganization;
    //
    //     let store = this.get('store');
    //     let contacts = store.peekAll('contact');
    //     let organizations = this.get('organizations')
    //       .clear();
    //
    //     value.forEach(function (id) {
    //       let rec = contacts.findBy('json.contactId', id);
    //
    //       if(rec) {
    //         organizations.pushObject(rec);
    //       }
    //       //rec.get('contacts').pushObject(me);
    //     });
    //
    //   }),

    /**
     * The type of contact
     *
     * @property type
     * @type {String}
     * @readOnly
     * @category computed
     * @requires json.isOrganization
     */
    type: Ember.computed('json.isOrganization', function () {
      return this.get('json.isOrganization') ? 'Organization' : 'Individual';
    }),
    /**
     * The display icon for the contact
     *
     * @property icon
     * @type {String}
     * @readOnly
     * @category computed
     * @requires json.isOrganization
     */
    icon: Ember.computed('json.isOrganization', function () {
      const name = this.get('json.isOrganization');
      return name ? 'users' : 'user';
    }),
    /**
     * The URI of the default logo for the contact.
     *
     * @property defaultLogo
     * @type {String}
     * @readOnly
     * @category computed
     * @requires json.logoGraphic.firstObject.fileUri.firstObject.uri
     */
    defaultLogo: Ember.computed('json.logoGraphic.firstObject.fileUri.firstObject.uri', 'defaultOrganization', function () {
      let uri = this.get('json.logoGraphic.firstObject.fileUri.firstObject.uri');
      if (uri) {
        return uri;
      }
      let orgId = Ember.get(this, 'defaultOrganization');
      if (orgId && orgId !== this.get('json.contactId')) {
        let contacts = this.get('contactsService.organizations');
        let org = contacts.findBy('json.contactId', orgId);
        if (org) {
          return Ember.get(org, 'defaultLogo');
        }
      }
      return null;
    }),
    /**
     * The id of the default organization for the contact.
     *
     * @property defaultOrganization
     * @type {String}
     * @readOnly
     * @category computed
     * @requires json.memberOfOrganization.[]
     */
    defaultOrganization: Ember.computed('json.memberOfOrganization.[]', function () {
      const json = this.json;
      let {
        memberOfOrganization
      } = json;
      return !Ember.isEmpty(memberOfOrganization) ? Ember.get(memberOfOrganization, '0') : null;
    }),
    defaultOrganizationName: Ember.computed('defaultOrganization', function () {
      let contacts = this.get('contactsService.organizations');
      let org = contacts.findBy('json.contactId.identifier', Ember.get(this, 'defaultOrganization'));
      return org ? Ember.get(org, 'name') : null;
    }),
    /**
     * The formatted (name or position) and organization(if any) of the contact.
     *
     * @property combinedName
     * @type {String}
     * @readOnly
     * @category computed
     * @requires json.name, json.isOrganization
     */
    combinedName: Ember.computed('name', 'json{isOrganization,positionName,memberOfOrganization[]}', function () {
      const json = this.json;
      let {
        name,
        positionName,
        isOrganization,
        memberOfOrganization
      } = json;
      let orgId = !Ember.isEmpty(memberOfOrganization) ? Ember.get(memberOfOrganization, '0') : null;
      let combinedName = name || positionName;
      let orgName;
      if (orgId) {
        let contacts = this.get('contactsService.organizations');
        let org = contacts.findBy('json.contactId', orgId);
        if (org) {
          orgName = Ember.get(org, 'name');
        }
      }
      if (orgName && !isOrganization) {
        return orgName += ": " + combinedName;
      }
      return combinedName;
    }),
    /**
     * The trimmed varsion of the contactId.
     *
     * @property shortId
     * @type {String}
     * @readOnly
     * @category computed
     * @requires json.contactId
     */
    shortId: Ember.computed('json.contactId', function () {
      const contactId = this.get('json.contactId');
      if (contactId && _validator.default.isUUID(contactId)) {
        let index = contactId.indexOf('-');
        return contactId.substring(0, index);
      }
      return contactId;
    }),
    /**
     * A list of schema errors return by the validator.
     *
     * @property schemaErrors
     * @type {Array}
     * @readOnly
     * @category computed
     * @requires status
     */
    schemaErrors: Ember.computed('hasDirtyHash', 'customSchemas.[]', function () {
      let mdjson = this.mdjson;
      let errors = [];
      let result = mdjson.validateContact(this).errors;
      if (result) {
        errors.pushObject({
          title: 'Default Contact Validation',
          errors: result
        });
      }
      this.customSchemas.forEach(schema => {
        const validator = schema.validator;
        if (validator.validate(schema.rootSchema, this.cleanJson)) {
          return;
        }
        errors.pushObject({
          title: schema.title,
          errors: validator.errors
        });
      });
      return errors;
    }),
    /**
     * Create a copy of the record in the store.
     *
     * @method copy
     * @chainable
     * @return {DS.Model}
     */
    copy() {
      let current = this.cleanJson;
      let json = Ember.Object.create(current);
      let {
        name,
        positionName,
        isOrganization
      } = current;
      json.setProperties({
        isOrganization: isOrganization,
        name: name ? "Copy of ".concat(name) : null,
        positionName: name ? positionName : "Copy of ".concat(positionName),
        contactId: (0, _v.default)()
      });
      return this.store.createRecord('contact', {
        json: json
      });
    }
  });
  _exports.default = Contact;
});
;define("mdeditor/models/coordinator", ["exports", "mdeditor/models/obj-hash", "ember-drag-drop/utils/proxy-unproxy-objects"], function (_exports, _objHash, _proxyUnproxyObjects) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Object.extend(Ember.Evented, {
    objectMap: Ember.computed(function () {
      return _objHash.default.create();
    }),
    getObject: function getObject(id, ops) {
      ops = ops || {};
      var payload = this.get('objectMap').getObj(id);
      if (payload.ops.source) {
        payload.ops.source.sendAction('action', payload.obj);
      }
      if (payload.ops.target) {
        payload.ops.target.sendAction('action', payload.obj);
      }
      this.trigger("objectMoved", {
        obj: (0, _proxyUnproxyObjects.unwrapper)(payload.obj),
        source: payload.ops.source,
        target: ops.target
      });
      return (0, _proxyUnproxyObjects.unwrapper)(payload.obj);
    },
    setObject: function setObject(obj, ops) {
      ops = ops || {};
      return this.get('objectMap').add({
        obj: obj,
        ops: ops
      });
    }
  });
  _exports.default = _default;
});
;define("mdeditor/models/custom-profile", ["exports", "ember-data", "ember-cp-validations"], function (_exports, _emberData, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // import { regex } from 'mdeditor/models/schema';

  // [{
  //   "id": "full",
  //   "namespace": "org.adiwg.profile",
  //   "alternateId": [""],
  //   "title": "Full",
  //   "description": "Evey supported component",
  //   "version": "0.0.0",
  //   "components": {
  //     "record": {},
  //     "contact": {},
  //     "dictionary": {}
  //   },
  //   "nav": {
  //     "record": [{
  //       "title": "",
  //       "target": "",
  //       "tip": ""
  //     }]
  //   }
  // }]

  const Validations = (0, _emberCpValidations.buildValidations)({
    'alias': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      disabled: Ember.computed.notEmpty('model.title'),
      message: 'A title must be provided.'
    }),
    'title': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      disabled: Ember.computed.notEmpty('model.Alias'),
      message: 'A title must be provided.'
    }),
    'profileId': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      isWarning: true,
      message: 'No profile definition is assigned.'
    }),
    'schemas': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      isWarning: true,
      message: 'No schemas have been assigned.'
    })
    // 'uri': [
    // validator('presence', {
    //   presence: true,
    //   ignoreBlank: true
    // }),
    // validator('format', {
    //   regex: regex,
    //   isWarning: false,
    //   message: 'This field should be a valid, resolvable URL.'
    // })
    // ]
  });
  var _default = _emberData.default.Model.extend(Validations, {
    /**
     * Custom Profile model
     *
     * @class custom-profile
     * @constructor
     * @extends DS.Model
     * @module mdeditor
     * @submodule data-models
     */

    init() {
      this._super(...arguments);
      this.updateSettings;
    },
    definitions: Ember.inject.service('profile'),
    uri: _emberData.default.attr('string'),
    alias: _emberData.default.attr('string'),
    title: _emberData.default.attr('string'),
    description: _emberData.default.attr('string'),
    profileId: _emberData.default.attr('string'),
    //remoteVersion: DS.attr('string'),

    profileTitle: Ember.computed.or('alias', 'title'),
    identifier: Ember.computed.alias('id').readOnly(),
    components: Ember.computed.alias('profile.components').readOnly(),
    //localVersion: alias('version'),
    //hasUpdate: computed('localVersion', 'remoteVersion', checkVersion),
    schemas: _emberData.default.hasMany('schemas'),
    definition: Ember.computed('profileId', function () {
      return this.definitions.profiles.findBy('identifier', this.profileId);
    }),
    /* eslint-disable ember/no-observers */
    updateSettings: Ember.observer('hasDirtyAttributes', 'title', 'uri', 'alias', 'description', 'hasUpdate', 'schemas.[]', 'profileId', function () {
      if (this.isNew || this.isEmpty || this.isDeleted) {
        return;
      }
      if (this.hasDirtyAttributes) {
        this.set('dateUpdated', new Date());
        Ember.run.once(this, function () {
          this.save();
        });
      }
    })
    /* eslint-enable ember/no-observers */
  });
  _exports.default = _default;
});
;define("mdeditor/models/dictionary", ["exports", "ember-copy", "ember-data", "uuid/v4", "mdeditor/models/base", "ember-cp-validations", "mdeditor/config/environment"], function (_exports, _emberCopy, _emberData, _v, _base, _emberCpValidations, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    APP: {
      defaultProfileId
    }
  } = _environment.default;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'json.dictionaryId': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    'json.dataDictionary.citation.title': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    'json.dataDictionary.subject': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }), (0, _emberCpValidations.validator)('array-required', {
      track: []
    })]
  });
  const JsonDefault = Ember.Object.extend({
    init() {
      this._super(...arguments);
      this.setProperties({
        dictionaryId: (0, _v.default)(),
        dataDictionary: {
          citation: {
            title: null,
            date: [{
              date: new Date().toISOString(),
              dateType: 'creation'
            }]
          },
          description: '',
          subject: [],
          responsibleParty: {},
          domain: [],
          entity: []
        }
      });
    }
  });
  var _default = _base.default.extend(Validations, _emberCopy.Copyable, {
    /**
     * Dictionary model
     *
     * @class dictionary
     * @constructor
     * @extends base
     * @module mdeditor
     * @submodule data-models
     */

    init() {
      this._super(...arguments);
      this.on('didLoad', this, this.assignId);
    },
    profile: _emberData.default.attr('string', {
      defaultValue: defaultProfileId
    }),
    json: _emberData.default.attr('json', {
      defaultValue() {
        return JsonDefault.create();
      }
    }),
    dateUpdated: _emberData.default.attr('date', {
      defaultValue() {
        return new Date();
      }
    }),
    title: Ember.computed.alias('json.dataDictionary.citation.title'),
    dictionaryId: Ember.computed.alias('json.dictionaryId'),
    icon: 'book',
    /**
     * A list of schema errors return by the validator.
     *
     * @property schemaErrors
     * @type {Array}
     * @readOnly
     * @category computed
     * @requires status
     */
    schemaErrors: Ember.computed('hasDirtyHash', 'customSchemas.[]', function () {
      let mdjson = this.mdjson;
      let errors = [];
      let result = mdjson.validateDictionary(this).errors;
      if (result) {
        errors.pushObject({
          title: 'Default Dictionary Validation',
          errors: result
        });
      }
      this.customSchemas.forEach(schema => {
        const validator = schema.validator;
        if (validator.validate(schema.rootSchema, this.cleanJson)) {
          return;
        }
        errors.pushObject({
          title: schema.title,
          errors: validator.errors
        });
      });
      return errors;
    }),
    assignId(force) {
      if (force || !this.dictionaryId) {
        if (this.get('json.dataDictionary.dictionaryId')) {
          this.set('json.dictionaryId', this.get('json.dataDictionary.dictionaryId'));
        } else {
          this.set('json.dictionaryId', (0, _v.default)());
        }
      }
    },
    copy() {
      let current = this.cleanJson;
      let json = Ember.Object.create(current);
      let name = current.dataDictionary.citation.title;
      json.set('dataDictionary.citation.title', "Copy of ".concat(name));
      this.assignId(true);
      return this.store.createRecord('dictionary', {
        json: json
      });
    }
  });
  _exports.default = _default;
});
;define("mdeditor/models/obj-hash", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Object.extend({
    contentLength: 0,
    length: Ember.computed.alias('contentLength'),
    init: function init() {
      this._super();
      this.content = {};
    },
    add: function add(obj) {
      var id = this.generateId();
      this.get('content')[id] = obj;
      this.incrementProperty("contentLength");
      return id;
    },
    getObj: function getObj(key) {
      var res = this.get('content')[key];
      if (!res) {
        throw "no obj for key " + key;
      }
      return res;
    },
    generateId: function generateId() {
      var num = Math.random() * 1000000000000.0;
      num = parseInt(num);
      num = "" + num;
      return num;
    },
    keys: function keys() {
      var res = [];
      for (var key in this.get('content')) {
        res.push(key);
      }
      return Ember.A(res);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/models/profile", ["exports", "ember-data", "mdeditor/models/schema", "ember-cp-validations"], function (_exports, _emberData, _schema, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // [{
  //   "id": "full",
  //   "namespace": "org.adiwg.profile",
  //   "alternateId": [""],
  //   "title": "Full",
  //   "description": "Evey supported component",
  //   "version": "0.0.0",
  //   "components": {
  //     "record": {},
  //     "contact": {},
  //     "dictionary": {}
  //   },
  //   "nav": {
  //     "record": [{
  //       "title": "",
  //       "target": "",
  //       "tip": ""
  //     }]
  //   }
  // }]

  const Validations = (0, _emberCpValidations.buildValidations)({
    'config': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      message: 'The definition has not been downloaded.'
    }),
    'uri': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }), (0, _emberCpValidations.validator)('format', {
      regex: _schema.regex,
      isWarning: false,
      message: 'This field should be a valid, resolvable URL.'
    })]
  });
  var _default = _emberData.default.Model.extend(Validations, {
    /**
     * Profile model
     *
     * @class profile
     * @constructor
     * @extends DS.Model
     * @module mdeditor
     * @submodule data-models
     */

    init() {
      this._super(...arguments);
      this.updateSettings;
    },
    uri: _emberData.default.attr('string'),
    alias: _emberData.default.attr('string'),
    altDescription: _emberData.default.attr('string'),
    remoteVersion: _emberData.default.attr('string'),
    config: _emberData.default.attr('json'),
    title: Ember.computed.or('alias', 'config.title'),
    identifier: Ember.computed.alias('config.identifier'),
    namespace: Ember.computed.alias('config.namespace'),
    description: Ember.computed.or('altDescription', 'config.description'),
    localVersion: Ember.computed.alias('config.version'),
    components: Ember.computed.alias('config.components'),
    nav: Ember.computed.alias('config.nav'),
    hasUpdate: Ember.computed('localVersion', 'remoteVersion', _schema.checkVersion),
    /* eslint-disable ember/no-observers */
    updateSettings: Ember.observer('hasDirtyAttributes', 'alias', 'uri', 'altDescription', 'remoteVersion', 'config', function () {
      if (this.isNew || this.isEmpty || this.isDeleted) {
        return;
      }
      if (this.hasDirtyAttributes) {
        this.set('dateUpdated', new Date());
        Ember.run.once(this, function () {
          this.save();
        });
      }
    })
    /* eslint-enable ember/no-observers */
  });
  _exports.default = _default;
});
;define("mdeditor/models/record", ["exports", "ember-copy", "ember-data", "uuid/v4", "mdeditor/models/base", "ember-cp-validations", "mdeditor/config/environment"], function (_exports, _emberCopy, _emberData, _v, _base, _emberCpValidations, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    APP: {
      defaultProfileId
    }
  } = _environment.default;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'recordId': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    'json.metadata.resourceInfo.resourceType': [(0, _emberCpValidations.validator)('array-valid'), (0, _emberCpValidations.validator)('array-required', {
      track: ['type']
    })],
    'json.metadata.resourceInfo.pointOfContact': {
      disabled: Ember.computed.alias('model.isNew'),
      validators: [(0, _emberCpValidations.validator)('array-valid'), (0, _emberCpValidations.validator)('array-required', {
        track: ['type']
      })]
    },
    // 'json.resourceInfo.abstract': validator('presence', {
    //   presence: true,
    //   ignoreBlank: true
    // }),
    'json.metadata.resourceInfo.citation.title': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })
    // 'json.metadata.resourceInfo.citation': validator('length', {
    //   min: 1
    // }),
    // 'json.metadata.resourceInfo.status': validator('length', {
    //   min: 1
    // }),
    // 'json.metadata.resourceInfo.pointOfContact': validator('length', {
    //   min: 1
    // }),
    // 'json.metadata.resourceInfo.defaultResourceLocale': validator('length', {
    //   min: 1
    // })
  });

  const Record = _base.default.extend(Validations, _emberCopy.Copyable, {
    /**
     * Record(metadata) model
     *
     * @class record
     * @constructor
     * @extends base
     * @module mdeditor
     * @submodule data-models
     */

    profile: _emberData.default.attr('string', {
      defaultValue: defaultProfileId
    }),
    json: _emberData.default.attr('json', {
      defaultValue() {
        const obj = Ember.Object.create({
          schema: {
            name: 'mdJson',
            version: '2.6.0'
          },
          contact: [],
          metadata: {
            metadataInfo: {
              metadataIdentifier: {
                identifier: (0, _v.default)(),
                namespace: 'urn:uuid'
              },
              metadataContact: [],
              defaultMetadataLocale: {}
            },
            resourceInfo: {
              resourceType: [{}],
              citation: {
                title: null,
                date: []
              },
              pointOfContact: [],
              abstract: '',
              shortAbstract: '',
              status: [],
              defaultResourceLocale: {
                // characterSet: UTF-8,
                // country: USA,
                // language: eng
              },
              timePeriod: {
                periodName: []
              },
              extent: [],
              keyword: []
            }
          },
          metadataRepository: [],
          dataDictionary: []
        });
        return obj;
      }
    }),
    dateUpdated: _emberData.default.attr('date', {
      defaultValue() {
        return new Date();
      }
    }),
    title: Ember.computed.alias('json.metadata.resourceInfo.citation.title'),
    icon: Ember.computed('json.metadata.resourceInfo.resourceType.firstObject.type', function () {
      const type = this.get('json.metadata.resourceInfo.resourceType.0.type') || '';
      const list = Ember.getOwner(this).lookup('service:icon');
      return type ? list.get(type) || list.get('default') : list.get('defaultFile');
    }),
    recordId: Ember.computed.alias('json.metadata.metadataInfo.metadataIdentifier.identifier'),
    recordIdNamespace: Ember.computed.alias('json.metadata.metadataInfo.metadataIdentifier.namespace'),
    parentIds: Ember.computed.alias('json.metadata.metadataInfo.parentMetadata.identifier'),
    hasParent: Ember.computed('parentIds.[]', function () {
      let ids = this.parentIds;
      let allRecords = this.store.peekAll('record');
      let records = allRecords.rejectBy('hasSchemaErrors');
      if (!ids) {
        return false;
      }
      return ids.find(id => {
        return records.findBy('recordId', id.identifier) ? true : false;
      });
    }),
    defaultParent: Ember.computed('hasParent', function () {
      let id = this.get('hasParent.identifier');
      let allRecords = this.store.peekAll('record');
      if (!id) {
        return undefined;
      }
      return allRecords.findBy('recordId', id);
    }),
    defaultType: Ember.computed.alias('json.metadata.resourceInfo.resourceType.firstObject.type'),
    /**
     * The trimmed varsion of the recordId.
     *
     * @property shortId
     * @type {String}
     * @readOnly
     * @category computed
     * @requires recordId
     */
    shortId: Ember.computed('recordId', function () {
      const recordId = this.recordId;
      if (recordId) {
        let index = recordId.indexOf('-');
        return recordId.substring(0, index > -1 ? index : 8);
      }
      return recordId;
    }),
    /**
     * A list of schema errors return by the validator.
     *
     * @property hasSchemaErrors
     * @type {Array}
     * @readOnly
     * @category computed
     * @requires status
     */
    schemaErrors: Ember.computed('hasDirtyHash', 'customSchemas.[]', function () {
      let mdjson = this.mdjson;
      let errors = [];
      let result = mdjson.validateRecord(this).errors;
      if (result) {
        errors.pushObject({
          title: 'Default Record Validation',
          errors: result
        });
      }
      this.customSchemas.forEach(schema => {
        const validator = schema.validator;
        if (!validator) {
          return;
        }
        if (validator.validate(schema.rootSchema, mdjson.formatRecord(this))) {
          return;
        }
        errors.pushObject({
          title: schema.title,
          errors: validator.errors
        });
      });
      return errors;
    }),
    formatted: Ember.computed.alias('_formatted'),
    copy() {
      let current = this.cleanJson;
      let json = Ember.Object.create(current);
      let name = current.metadata.resourceInfo.citation.title;
      json.set('metadata.resourceInfo.citation.title', "Copy of ".concat(name));
      json.set('metadata.resourceInfo.resourceType', Ember.getWithDefault(json, 'metadata.resourceInfo.resourceType', [{}]));
      json.set('metadata.metadataInfo.metadataIdentifier', {
        identifier: (0, _v.default)(),
        namespace: 'urn:uuid'
      });
      return this.store.createRecord('record', {
        json: json
      });
    }
  });
  Object.defineProperty(Record.prototype, '_formatted', {
    get() {
      return this.mdjson.formatRecord(this);
    }
  });
  var _default = Record;
  _exports.default = _default;
});
;define("mdeditor/models/schema", ["exports", "ember-data", "ember-cp-validations", "semver", "ajv", "ajv-errors", "ajv/lib/refs/json-schema-draft-04"], function (_exports, _emberData, _emberCpValidations, _semver, _ajv, ajvErrors, draft4) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.checkVersion = _exports.regex = void 0;
  const ajvOptions = {
    verbose: true,
    allErrors: true,
    jsonPointers: true,
    removeAdditional: false,
    schemaId: 'auto'
  };
  const regex = /^(https?|ftp):\/\/[^\s/$.?#].[^\s]*$/i;
  _exports.regex = regex;
  const checkVersion = function checkVersion() {
    if (!this.localVersion && this.remoteVersion) {
      return true;
    }
    return this.remoteVersion ? _semver.default.gt(this.remoteVersion, this.localVersion) : false;
  };
  _exports.checkVersion = checkVersion;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'title': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    'description': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    'schemaType': [(0, _emberCpValidations.validator)('presence', true), (0, _emberCpValidations.validator)('inclusion', {
      description: 'This value',
      in: ['record', 'contact', 'dictionary']
    })],
    'uri': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }), (0, _emberCpValidations.validator)('format', {
      regex: regex,
      isWarning: false,
      message: 'This field should be a valid, resolvable URL.'
    })],
    'customSchemas': [(0, _emberCpValidations.validator)('array-valid'), (0, _emberCpValidations.validator)('array-required', {
      track: ['type'],
      isWarning: true
    })]
  });
  const theComp = _emberData.default.Model.extend(Validations, {
    /**
     * Schema model
     *
     * @class schema
     * @constructor
     * @extends DS.Model
     * @module mdeditor
     * @submodule data-models
     */
    init() {
      this._super(...arguments);
      this.schemaValidator = ajvErrors(new _ajv.default(ajvOptions));
      this.schemaValidator.addMetaSchema(draft4);
      this.updateSettings;
    },
    flashMessages: Ember.inject.service(),
    title: _emberData.default.attr('string'),
    uri: _emberData.default.attr('string'),
    description: _emberData.default.attr('string'),
    schemaType: _emberData.default.attr('string'),
    version: _emberData.default.attr('string'),
    remoteVersion: _emberData.default.attr('string'),
    isGlobal: _emberData.default.attr('boolean', {
      defaultValue: false
    }),
    customSchemas: _emberData.default.attr('json', {
      defaultValue: function defaultValue() {
        return [];
      }
    }),
    status: Ember.computed('validations.isInvalid', function () {
      return this.validations.isInvalid ? 'warning' : 'success';
    }),
    formattedType: Ember.computed('schemaType', function () {
      return this.schemaType === 'record' ? 'Metadata' : Ember.String.capitalize(this.schemaType || 'Unknown');
    }),
    formattedGlobal: Ember.computed('isGlobal', function () {
      return this.isGlobal ? 'Yes' : 'No';
    }),
    /**
     * The timestamp for the record
     *
     * @attribute dateUpdated
     * @type {date}
     * @default new Date()
     * @required
     */
    dateUpdated: _emberData.default.attr('date', {
      defaultValue() {
        return new Date();
      }
    }),
    localVersion: Ember.computed.or('version', 'rootSchema.version'),
    hasUpdate: Ember.computed('version', 'remoteVersion', 'customSchemas.0.version', checkVersion),
    rootSchema: Ember.computed('customSchemas.firstObject.schema', function () {
      return this.customSchemas.get('firstObject.schema');
    }),
    validator: Ember.computed('isGlobal', 'customSchemas', function () {
      if (!this.isGlobal && !this.get('customSchemas.length')) {
        return;
      }
      this.schemaValidator.removeSchema();
      let valid = this.customSchemas.every(schema => {
        return this.schemaValidator.validateSchema(schema.schema);
      });
      if (valid) {
        return this.schemaValidator.addSchema(this.customSchemas.mapBy('schema'));
      }
      this.flashMessages.danger("Could not load schemas for ".concat(this.title, ". Schemas provided did not validate."));
    }),
    /* eslint-disable ember/no-observers */
    updateSettings: Ember.observer('hasDirtyAttributes', 'title', 'uri', 'description', 'schemaType', 'remoteVersion', 'schemaType', 'isGlobal', 'customSchemas.[]', function () {
      if (this.isNew || this.isEmpty || this.isDeleted) {
        return;
      }
      if (this.hasDirtyAttributes) {
        this.set('dateUpdated', new Date());
        Ember.run.once(this, function () {
          this.save();
        });
      }
    })
    /* eslint-enable ember/no-observers */
  });
  _exports.default = theComp;
});
;define("mdeditor/models/setting", ["exports", "ember-data"], function (_exports, _emberData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.defaultValues = void 0;
  const defaultValues = {
    mdTranslatorAPI: 'https://api.sciencebase.gov/mdTranslator/api/v3/translator',
    fiscalStartMonth: '10'
  };
  _exports.defaultValues = defaultValues;
  const theModel = _emberData.default.Model.extend({
    /**
     * Setting model
     *
     * @class setting
     * @constructor
     * @extends DS.Model
     * @module mdeditor
     * @submodule data-models
     */

    settings: Ember.inject.service(),
    init() {
      this._super(...arguments);

      //this.on('didUpdate', this, this.wasUpdated);
      this.on('didLoad', this, this.wasLoaded);
      //this.on('didUpdate', this, this.wasLoaded);
      this.updateSettings;
    },
    //cleaner: inject.service(),
    compressOnSave: _emberData.default.attr('boolean', {
      defaultValue: true
    }),
    showSplash: _emberData.default.attr('boolean', {
      defaultValue: true
    }),
    autoSave: _emberData.default.attr('boolean', {
      defaultValue: false
    }),
    showDelete: _emberData.default.attr('boolean', {
      defaultValue: false
    }),
    showCopy: _emberData.default.attr('boolean', {
      defaultValue: false
    }),
    lastVersion: _emberData.default.attr('string', {
      defaultValue: ''
    }),
    dateUpdated: _emberData.default.attr('date', {
      defaultValue() {
        return new Date();
      }
    }),
    characterSet: _emberData.default.attr('string', {
      defaultValue: 'UTF-8'
    }),
    country: _emberData.default.attr('string', {
      defaultValue: 'USA'
    }),
    language: _emberData.default.attr('string', {
      defaultValue: 'eng'
    }),
    importUriBase: _emberData.default.attr('string', {
      defaultValue: ''
    }),
    mdTranslatorAPI: _emberData.default.attr('string', {
      defaultValue: defaultValues.mdTranslatorAPI
    }),
    fiscalStartMonth: _emberData.default.attr('string', {
      defaultValue: defaultValues.fiscalStartMonth
    }),
    repositoryDefaults: _emberData.default.attr('json'),
    publishOptions: _emberData.default.attr('json', {
      defaultValue: function defaultValue() {
        return Ember.Object.create();
      }
    }),
    customSchemas: _emberData.default.attr('json', {
      defaultValue: function defaultValue() {
        return [];
      }
    }),
    locale: Ember.computed.alias('defaultLocale'),
    wasLoaded() {
      this.settings.setup();
    },
    updateSettings: Ember.observer('hasDirtyAttributes', function () {
      if (this.hasDirtyAttributes) {
        Ember.run.once(this, function () {
          this.save();
        });
      }
    })
  });
  _exports.default = theModel;
});
;define("mdeditor/modifiers/did-insert", ["exports", "@ember/render-modifiers/modifiers/did-insert"], function (_exports, _didInsert) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _didInsert.default;
    }
  });
});
;define("mdeditor/modifiers/did-update", ["exports", "@ember/render-modifiers/modifiers/did-update"], function (_exports, _didUpdate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _didUpdate.default;
    }
  });
});
;define("mdeditor/modifiers/will-destroy", ["exports", "@ember/render-modifiers/modifiers/will-destroy"], function (_exports, _willDestroy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _willDestroy.default;
    }
  });
});
;define("mdeditor/pods/components/control/md-alert-table/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['alert', 'md-alert-table'],
    classNameBindings: ['alertType'],
    required: false,
    title: '',
    target: null,
    alertType: Ember.computed('required', function () {
      return 'alert-' + (this.required ? 'danger' : 'info');
    }),
    tipType: Ember.computed('required', function () {
      return this.required ? 'danger' : 'info';
    }),
    tipIcon: Ember.computed('required', function () {
      return this.required ? 'exclamation-circle' : 'info-circle';
    }),
    actions: {
      addItem(target) {
        this.addItem(target);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-alert-table/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "aW0KSzqJ",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"h4\",true],[8],[0,\"No \"],[7,\"span\",true],[11,\"class\",[28,\"if\",[[24,[\"required\"]],\"required\"],null]],[8],[1,[22,\"title\"],false],[9],[0,\" found.\\n  \"],[7,\"button\",false],[12,\"class\",\"btn btn-success btn-md\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\",[24,[\"target\"]]]],[8],[0,\"\\n    \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add \"],[1,[28,\"singularize\",[[24,[\"title\"]]],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[14,1],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"h4\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"tipMessage\"]]],null,{\"statements\":[[0,\"  \"],[7,\"span\",true],[11,\"class\",[29,[\"md-\",[22,\"tipType\"]]]],[8],[0,\"\\n    \"],[1,[28,\"fa-icon\",[[24,[\"tipIcon\"]]],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",[28,\"concat\",[\"ember-tooltip md-tooltip \",[24,[\"tipType\"]]],null]]],{\"statements\":[[0,\"    \"],[1,[22,\"tipMessage\"],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-alert-table/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-button-confirm/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: 'button',
    classNames: 'md-button-confirm',
    attributeBindings: ['type', 'disabled'],
    type: 'button',
    isShowingConfirm: false,
    propagateClick: false,
    disabled: null,
    /**
     * Tooltip text shown when isShowingConfirm is true
     *
     * @property tooltip
     * @type {String}
     * @default "undefined"
     */

    /**
     * Side to show tooltip
     *
     * @property tipSide
     * @type {String}
     * @default "left"
     */
    tipSide: 'left',
    /**
     * Class to add to tooltip
     *
     * @property tipClass
     * @type {String}
     * @default ""
     */
    tipClass: '',
    /**
     * The function to call when action is confirmed.
     *
     * @method onConfirm
     * @return {[type]} [description]
     */
    onConfirm() {},
    //click handler, sets button state
    click(evt) {
      if (!this.propagateClick) {
        evt.stopPropagation();
      }
      if (this.isShowingConfirm) {
        this.onConfirm();
        this.set('isShowingConfirm', false);
      } else {
        this.set('isShowingConfirm', true);
      }
    },
    blur() {
      this.set('isShowingConfirm', false);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-button-confirm/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "nhK7Dw5S",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"liquid-if\",[[24,[\"isShowingConfirm\"]]],[[\"use\"],[\"toDown\"]],{\"statements\":[[0,\"  \"],[7,\"i\",true],[10,\"class\",\"fa fa-question\"],[8],[9],[0,\" Confirm\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"isShowingConfirm\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"tooltip\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"ember-tooltip\",null,[[\"tooltipClass\",\"text\",\"side\"],[[28,\"concat\",[\"ember-tooltip md-tooltip \",[24,[\"tipClass\"]]],null],[24,[\"tooltip\"]],[24,[\"tipSide\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-button-confirm/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-button-modal/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * mdEditor Component that renders a button which displays a modal
     * dialog when clicked.
     *
     * @class md-button-modal
     * @module mdeditor
     * @submodule components-control
     * @constructor
     */

    tagName: 'button',
    classNames: 'md-button-modal',
    attributeBindings: ['type'],
    /**
     * Element selector or element that serves as the reference for modal position
     *
     * @property target
     * @type {String}
     */
    target: 'html',
    /**
     * A boolean, when true renders the modal without wormholing or tethering
     *
     * @property renderInPlace
     * @type {Boolean}
     */
    renderInPlace: false,
    /**
     * Indicates whether the modal dialog is being displayed.
     *
     * @property isShowingModal
     * @type {Boolean}
     */
    isShowingModal: false,
    /**
     * The function to call when action is cancelled.
     *
     * @method onCancel
     */
    onCancel() {},
    /**
     * The function to call when action is confirmed.
     *
     * @method onConfirm
     */
    onConfirm() {},
    //click handler, sets modal state
    click() {
      this.toggleProperty('isShowingModal');
    },
    actions: {
      toggleModal() {
        this.toggleProperty('isShowingModal');
      },
      cancel() {
        this.onCancel();
        this.toggleProperty('isShowingModal');
      },
      confirm() {
        this.onConfirm();
        this.toggleProperty('isShowingModal');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-button-modal/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "af6ea2bN",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[14,1],[0,\"\\n\"],[4,\"control/md-modal\",null,[[\"isShowing\",\"closeModal\",\"target\",\"renderInPlace\"],[[24,[\"isShowingModal\"]],[28,\"action\",[[23,0,[]],\"cancel\"],null],[24,[\"target\"]],[24,[\"renderInPlace\"]]]],{\"statements\":[[0,\"    \"],[1,[28,\"html-safe\",[[24,[\"message\"]]],null],false],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"md-modal-buttons pull-right\"],[8],[0,\"\\n      \"],[7,\"button\",false],[12,\"class\",\"btn btn-danger\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"confirm\"]],[8],[0,\"Confirm\"],[9],[0,\"\\n      \"],[7,\"button\",false],[12,\"class\",\"btn btn-primary\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancel\"]],[8],[0,\"Cancel\"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-button-modal/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-button/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * mdEditor Component that renders a `<button>`
     *
     * @class md-button
     * @module mdeditor
     * @submodule components-control
     * @constructor
     */

    tagName: 'button',
    classNames: ['md-button btn'],
    classNameBindings: ['responsive:md-btn-responsive'],
    attributeBindings: ['type', 'disabled'],
    type: 'button',
    disabled: null,
    /**
     * Button text
     *
     * @property text
     * @type {String}
     * @default ""
     */
    text: '',
    /**
     * Button icon
     *
     * @property icon
     * @type {String}
     * @default ""
     */
    icon: '',
    /**
     * Tooltip text shown when isShowingConfirm is true
     *
     * @property tooltip
     * @type {String}
     * @default "undefined"
     */

    /**
     * Side to show tooltip
     *
     * @property tipSide
     * @type {String}
     * @default "left"
     */
    tipSide: 'left',
    /**
     * Class to add to tooltip
     *
     * @property tipClass
     * @type {String}
     * @default ""
     */
    tipClass: '',
    /**
    * Render with wrapped text. Defaults to true if text.length is > 12 or
    * contains spaces.
    *
    * @property responsive
    * @type {Boolean}
    * @default "false"
    * @category computed
    * @requires text
    */
    responsive: Ember.computed('text', function () {
      return this.text.length > 12 || this.text.indexOf(' ') > 0;
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-button/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "J0wP6pRQ",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[25,1]],null,{\"statements\":[[0,\"  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"icon\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"fa-icon\",[[24,[\"icon\"]]],[[\"spin\"],[[24,[\"iconSpin\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[22,\"text\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"tooltip\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"ember-tooltip\",null,[[\"tooltipClass\",\"text\",\"side\"],[[28,\"concat\",[\"ember-tooltip md-tooltip \",[24,[\"tipClass\"]]],null],[24,[\"tooltip\"]],[24,[\"tipSide\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-button/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-contact-link/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.LinkComponent.extend({
    /**
     * mdEditor Component that accepts a contact identifier and returns the
     * formatted link element.
     *
     * @class md-contact-link
     * @module mdeditor
     * @submodule components-control
     * @constructor
     */

    didReceiveAttrs() {
      //Inline link title comes first, if present.
      let block = !this.block ? [this.get('contact.title')] : [];
      let params = Ember.get(this, 'params');
      let add = block.concat(['contact.show', this.get('contact.id')]);
      Ember.set(this, 'params', params ? add.concat(params) : add);
      this._super(...arguments);
    },
    store: Ember.inject.service(),
    /**
     * The contacts service
     *
     * @property contacts
     * @type {Ember.Service}
     * @readOnly
     */
    contacts: Ember.inject.service(),
    /**
     * The contact identifier
     *
     * @property contactId
     * @type {String}
     * @required
     */

    /**
     * Render as block
     *
     * @property block
     * @type {Boolean}
     * @required
     */

    /**
     * The contact record
     *
     * @property contact
     * @type {String}
     * @readOnly
     * @category computed
     * @requires contactId
     */
    contact: Ember.computed('contactId', function () {
      let rec = this.store.peekAll('contact').findBy('json.contactId', this.contactId);
      return rec;
    }).readOnly()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-contact-title/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: '',
    store: Ember.inject.service(),
    /**
     * mdEditor Component that accepts a contact identifier and returns the
     * contact title or yields the contact in block form.
     *
     * @class md-contact-title
     * @module mdeditor
     * @submodule components-control
     * @constructor
     */

    /**
     * The contact identifier
     *
     * @property contactId
     * @type {String}
     * @required
     */
    /**
     * description
     *
     * @property contact
     * @type {String}
     * @readOnly
     * @category computed
     * @requires contactId
     */
    contact: Ember.computed('contactId', function () {
      let rec = this.store.peekAll('contact').findBy('json.contactId', this.contactId);
      return rec;
    }).readOnly()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-contact-title/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "lg2ZjgvL",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[25,1]],null,{\"statements\":[[0,\"  \"],[14,1,[[24,[\"contact\"]]]],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"if\",[[24,[\"contact\"]],[24,[\"contact\",\"title\"]],[24,[\"default\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-contact-title/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-crud-buttons/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: 'md-crud-buttons',
    settings: Ember.inject.service(),
    /**
     * Indicates whether to display the "Delete" button. If not defined, defaults
     * to "settings.data.showDelete".
     *
     * @property allowDelete
     * @type {Boolean}
     * @default "settings.showDelete"
     */

    /**
     * Indicates whether to display the "Copy" button. If not defined, defaults to
     * "settings.data.showDelete".
     *
     * @property allowCopy
     * @type {Boolean}
     * @default "settings.showDelete"
     */

    showDelete: Ember.computed('settings.showDelete', 'allowDelete', function () {
      return Ember.isEmpty(this.allowDelete) ? this.settings.data.showDelete : this.allowDelete;
    }),
    showCopy: Ember.computed('settings.showDelete', 'allowCopy', function () {
      return Ember.isEmpty(this.allowCopy) ? this.settings.data.showCopy : this.allowCopy;
    }),
    actions: {
      save: function save() {
        this.doSave();
      },
      cancel: function cancel() {
        this.doCancel();
      },
      delete: function _delete() {
        this.doDelete();
      },
      copy: function copy() {
        this.doCopy();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-crud-buttons/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "AO6Dg846",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"btn-group-vertical center-block\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"CRUD Button Controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"doSave\"]]],null,{\"statements\":[[0,\"      \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-success\"],[12,\"disabled\",[28,\"if\",[[24,[\"model\",\"hasDirtyHash\"]],false,true],null]],[12,\"type\",\"submit\"],[3,\"action\",[[23,0,[]],\"save\"]],[8],[0,\"\\n        \"],[7,\"i\",true],[10,\"class\",\"fa fa-floppy-o\"],[8],[9],[0,\" Save\\n      \"],[9],[0,\"\\n      \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-warning\"],[12,\"disabled\",[28,\"if\",[[24,[\"model\",\"canRevert\"]],false,true],null]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancel\"]],[8],[0,\"\\n        \"],[7,\"i\",true],[10,\"class\",\"fa fa-undo\"],[8],[9],[0,\" Cancel\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"showCopy\"]]],null,{\"statements\":[[0,\"    \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"copy\"]],[8],[0,\"\\n      \"],[7,\"i\",true],[10,\"class\",\"fa fa-clone\"],[8],[9],[0,\" Copy\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"showDelete\"]]],null,{\"statements\":[[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\",\"tooltip\",\"tipClass\"],[\"btn btn-lg btn-danger\",[28,\"action\",[[23,0,[]],\"delete\"],null],\"Permanently delete this record?\",\"danger\"]],{\"statements\":[[0,\"      \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"  \"],[14,1],[0,\"\\n  \"],[1,[28,\"ember-tooltip\",null,[[\"tooltipClass\",\"text\",\"side\"],[\"ember-tooltip md-tooltip primary\",\"Manage the record\",\"top\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-crud-buttons/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-definition/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * mdEditor Component that renders a definition
     *
     * @class md-definition
     * @module mdeditor
     * @submodule components-control
     * @constructor
     */

    tagName: '',
    /**
     * The definition title
     *
     * @property title
     * @type {String}
     */

    /**
     * The class(es) to apply to the definition title
     *
     * @property titleClass
     * @type {String}
     */

    /**
     * The definition text
     *
     * @property text
     * @type {String}
     * @required
     */

    /**
     * The text to display if the text is falsy.
     *
     * @property empty
     * @type {String}
     * @default  'Not Defined'
     */
    empty: 'Not Defined'
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-definition/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "D2DUT3dN",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"dt\",true],[11,\"class\",[22,\"titleClass\"]],[8],[1,[28,\"if\",[[24,[\"title\"]],[24,[\"title\"]],\"--\"],null],false],[9],[0,\"\\n\"],[7,\"dd\",true],[8],[0,\"\\n\"],[4,\"if\",[[25,1]],null,{\"statements\":[[0,\"    \"],[14,1],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"text\"]]],null,{\"statements\":[[0,\"      \"],[1,[22,\"text\"],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[1,[22,\"empty\"],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-definition/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-edit-table/component", ["exports", "mdeditor/pods/components/control/md-record-table/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * @module mdeditor
     * @submodule components-control
     */

    /**
     * Table used to edit objects with row expander. Includes column to toggle
     * selection for all rows. Component supplied in `editRowComponent` is rendered
     * when the row is expanded.
     *
     *```handlebars
     * \{{control/md-record-table
     *   data=model.data
     *   columns=model.columns
     *   select=callback
     * }}
     * ```
     *
     * @class md-edit-table
     * @extends md-record-table
     */

    // classNames: ['md-edit-table'],
    tagName: '',
    spotlightRow: true,
    /**
    * Array of button configs to add to action column
    *
    * @property actionButtons
    * @type {[Object]}
    */

    /**
    * Array of badge configs to add to action column
    *
    * @property actionBadges
    * @type {[Object]}
    */

    /**
     * Column configs for the action column.
     * See http://onechiporenko.github.io/ember-models-table
     *
     *
     * @property actionsColumn
     * @type {Object}
     * @required
     */
    actionsColumn: Ember.computed('actionButtons', function () {
      let btns = [{
        title: 'Edit',
        type: 'success',
        icon: 'pencil',
        // action: this.actions.editRow,
        action: "editRow",
        target: this
      }, {
        title: 'Delete',
        type: 'danger',
        icon: 'times',
        confirm: true,
        //action: this.actions.deleteRow,
        action: "deleteRow",
        target: this
      }];
      if (this.actionButtons) {
        btns.push(this.actionButtons);
      }
      return {
        className: 'md-actions-column',
        component: 'components/md-models-table/components/row-buttons',
        componentForFilterCell: 'control/md-record-table/buttons/filter',
        disableFiltering: true,
        disableSorting: true,
        mayBeHidden: false,
        buttons: btns,
        badges: this.actionBadges
      };
    }),
    editRow(index, record) {
      this.send('expandRow', index, record);
    },
    actions: {
      // body
      editRow(col, index, record, evt) {
        evt.stopPropagation();
        this.editRow(index, record);
      },
      deleteRow(col, index, record) {
        record.destroyRecord();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-edit-table/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ip+tV7ZU",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"control/md-record-table\",null,[[\"class\",\"actionsColumn\",\"selectRowOnClick\",\"data\",\"dataColumns\",\"expandedItems\",\"columnSets\",\"pageSize\",\"expandedRowComponent\"],[\"md-edit-table\",[24,[\"actionsColumn\"]],[24,[\"selectRowOnClick\"]],[24,[\"data\"]],[24,[\"dataColumns\"]],[24,[\"expandedItems\"]],[24,[\"columnSets\"]],[24,[\"pageSize\"]],[28,\"component\",[\"md-models-table/components/row-body\"],[[\"spotlighted\",\"rowBodyComponent\"],[[24,[\"spotlightRow\"]],[24,[\"rowBodyComponent\"]]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-edit-table/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-errors/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-error-list']

    /**
    *  Error objects to render grouped by validation schema or profile. The group
    *  object must have a `title` and `errors` property. Error objects iwthin the
    *  group must have a `message` property. `dataPath` is optional.
    *
    * @property errors
    * @type {Array}
    * @required
    */
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-errors/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "vN/QMBEs",
    "block": "{\"symbols\":[\"error\",\"err\",\"idx\",\"&default\"],\"statements\":[[4,\"each\",[[24,[\"errors\"]]],null,{\"statements\":[[0,\"  \"],[7,\"section\",true],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[1,[23,1,[\"title\"]],false],[9],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"errors\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[11,\"class\",[29,[\"list-group-item \",[28,\"if\",[[28,\"mod\",[[23,3,[]],2],null],\"list-group-item-warning\"],null]]]],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"media\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"media-left media-middle\"],[8],[0,\"\\n                \"],[7,\"span\",true],[11,\"class\",[29,[\"label label-\",[28,\"if\",[[23,2,[\"dataPath\"]],\"warning\",\"danger\"],null]]]],[8],[1,[23,3,[]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"media-body\"],[8],[0,\"\\n              \"],[7,\"h4\",true],[10,\"class\",\"media-heading\"],[8],[1,[23,2,[\"message\"]],false],[9],[0,\" \"],[1,[23,2,[\"dataPath\"]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[2,3]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[14,4],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-errors/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-fiscalyear/component", ["exports", "mdeditor/pods/components/input/md-select/component", "mdeditor/pods/components/input/md-select/template", "moment"], function (_exports, _component, _template, _moment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    layout: _template.default,
    settings: Ember.inject.service('settings'),
    classNames: ['md-fiscalyear'],
    objectArray: Ember.computed(function () {
      return Array.apply(0, Array(12)).map(function (element, index) {
        return {
          year: index + ((0, _moment.default)().year() - 10)
        };
      });
    }),
    label: 'Pick Fiscal Year',
    valuePath: 'year',
    namePath: 'year',
    tooltip: false,
    searchEnabled: true,
    placeholder: 'Pick a Fiscal Year',
    create: true,
    disabled: Ember.computed('settings.data.fiscalStartMonth', function () {
      return !this.get('settings.data.fiscalStartMonth');
    }),
    change() {
      let val = this.value;
      let month = parseInt(this.get('settings.data.fiscalStartMonth'), 10) - 1;
      let dt = month <= 6 ? (0, _moment.default)(val, 'YYYY') : (0, _moment.default)(val, 'YYYY').subtract(1, 'year');
      let start = dt.month(month).startOf('month');
      //let end = moment(val, 'YYYY').month('September').endOf('month');
      let end = start.clone().add(11, 'months').endOf('month');
      let context = this.context;
      this.setProperties({
        end: end,
        start: start
      });
      if (context) {
        //have to set values using datetimepicker
        context.$('.start .date').data("DateTimePicker").date(start);
        context.$('.end .date').data("DateTimePicker").date(end);
      }
      this.set('value', null);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-import-csv/component", ["exports", "papaparse", "jquery"], function (_exports, _papaparse, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * @module mdeditor
     * @submodule components-control
     */

    /**
     * Button with drop zone used to load CSV files
     *
     *```handlebars
     * \{{control/md-import-csv
     *   beforeFirstChunk=callback
     *   processChunk=callback
     *   processComplete=callback
     * }}
     * ```
     *
     * @class md-import-csv
     */

    router: Ember.inject.service(),
    ajax: Ember.inject.service(),
    /**
     * True if processing CSV file
     *
     * @property isProcessing
     * @type {Boolean}
     * @default "false"
     * @required
     */
    isProcessing: false,
    /**
     * Percent of file processed
     *
     * @property progress
     * @type {Number}
     * @default 0
     */
    progress: 0,
    /**
     * Style string for progress bar
     *
     * @property barWidth
     * @type {String}
     * @default "min-width: 10em;width:0%;""
     * @category computed
     * @requires progress
     */
    barWidth: Ember.computed('progress', function () {
      return Ember.String.htmlSafe("min-width: 10em;width:".concat(this.progress, "%;"));
    }),
    /**
     * Callback fires before first chunk is processed
     *
     * @method beforeFirstChunk
     * @param {Object} result Data returned from parser
     * @param {Array} options.data Chunk of data
     * @param {Array} options.errors
     * @param {Object} options.metadata
     */
    beforeFirstChunk() {},
    /**
     * Method that processes each chunk of data
     *
     * @method processChunk
     * @param {Array} data Chunk of data
     */
    processChunk() {},
    /**
     * Method called when processsing is complete
     *
     * @method processComplete
     */
    processComplete() {},
    actions: {
      stopParsing() {
        this.parser.abort();
        this.set('isProcessing', false);
      },
      readData(file) {
        _papaparse.default.SCRIPT_PATH = this.get('router.rootURL') + 'assets/workers/worker_papaparse.js';
        let comp = this;
        Ember.set(comp, 'isProcessing', true);
        Ember.set(comp, 'progress', 0);
        Ember.run.next(this, function () {
          new Ember.RSVP.Promise((resolve, reject) => {
            try {
              let processed = 1;
              let chunkSize = 1000000;
              _papaparse.default.parse(file.data, {
                header: true,
                worker: true,
                dynamicTyping: true,
                skipEmptyLines: true,
                chunkSize: chunkSize,
                complete: () => {
                  resolve();
                },
                chunk: (results, parser) => {
                  if (processed === 1) {
                    this.beforeFirstChunk(results);
                  }
                  this.set('progress', Math.trunc(chunkSize * processed / file.size * 100));
                  this.set('parser', parser);
                  this.processChunk(results.data);
                  processed++;
                }
              });
            } catch (e) {
              reject("Failed to parse file: ".concat(file.name, ". Is it a valid CSV?\n").concat(e));
            }
          }).then(() => {
            //fire callback
            this.processComplete();
          }).catch(reason => {
            //catch any errors
            this.flashMessages.danger(reason);
            return false;
          }).finally(() => {
            //set(comp, 'isProcessing', false);

            (0, _jquery.default)('.md-import-picker input:file').val('');
          });
        });
      },
      readFromUri() {
        let comp = this;
        Ember.set(comp, 'isLoading', true);
        this.ajax.request(this.importUri, {
          type: 'GET',
          context: this,
          dataType: 'text',
          crossDomain: true
        }).then(function (response, textStatus) {
          if (response && textStatus === 'success') {
            let json;
            new Ember.RSVP.Promise((resolve, reject) => {
              try {
                json = JSON.parse(response);
              } catch (e) {
                reject("Failed to parse data. Is it valid JSON?");
              }
              resolve({
                json: json,
                file: null,
                route: this
              });
            }).then(data => {
              //determine file type and map
              this.mapJSON(data);
            }).catch(reason => {
              //catch any errors
              this.flashMessages.danger(reason);
              return false;
            }).finally(() => {
              Ember.set(comp, 'isLoading', false);
              (0, _jquery.default)('.import-file-picker input:file').val('');
            });
          } else {
            Ember.set(comp, 'errors', response.messages);
            this.flashMessages.danger('Import error!');
          }
        }, response => {
          let error = " Error retrieving the mdJSON: ".concat(response.status, ": ").concat(response.statusText);
          Ember.set(comp, 'xhrError', error);
          Ember.set(comp, 'isLoading', false);
          this.flashMessages.danger(error);
        });
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-import-csv/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "eEN3aj3A",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"isProcessing\"]]],null,{\"statements\":[[0,\"  \"],[7,\"h3\",true],[8],[1,[28,\"fa-icon\",[\"spinner\"],[[\"spin\"],[true]]],false],[0,\" Processing...\\n  \"],[7,\"button\",false],[12,\"class\",\"btn btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"stopParsing\"]],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[\"cross\"],[[\"spin\"],[true]]],false],[0,\"\\n    Stop\"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"progress\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"progress-bar\"],[10,\"role\",\"progressbar\"],[11,\"aria-valuenow\",[22,\"progress\"]],[10,\"aria-valuemin\",\"0\"],[10,\"aria-valuemax\",\"100\"],[11,\"style\",[22,\"barWidth\"]],[8],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"sr-only\"],[8],[1,[22,\"progress\"],false],[0,\"% Complete\"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"file-picker\",null,[[\"class\",\"fileLoaded\",\"preview\",\"accept\",\"readAs\"],[\"md-file-picker md-import-picker\",\"readData\",false,\".csv,.txt\",\"readAsText\"]],{\"statements\":[[0,\"    \"],[7,\"button\",true],[10,\"class\",\"btn btn-lg btn-info btn-block\"],[10,\"type\",\"button\"],[8],[1,[28,\"fa-icon\",[\"bullseye\"],null],false],[0,\"\\n      Click or Drop a CSV here.\"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-import-csv/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-indicator/component", ["exports", "mdeditor/utils/md-interpolate"], function (_exports, _mdInterpolate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * @module mdeditor
     * @submodule components-control
     */

    /**
     * Icon that displays a popover.
     *
     * ```handlebars
     * \{{control/md-indicator
     *   icon="sticky-note"
     *   title="Hello"
     *   note="${foo} is a ${bar}"
     *   values=values
     *   type="danger"
     * }}
     * ```
     *
     * @class md-indicator
     * @constructor
     */

    tagName: 'span',
    init() {
      const options = this.options;
      this._super(...arguments);
      if (options) {
        Object.assign(this, options);
        //this.classNames.concat(options.classNames);
      }

      this.popoverHideDelay = this.popoverHideDelay || 500;
      this.popperContainer = this.popperContainer || "body";
      this.icon = this.icon || 'sticky-note';
      this.event = this.event || 'hover';
      this.title = this.title || 'Note';
      this.type = this.type || 'default';
      this.classNames = ['md-indicator', "md-".concat(this.type)].concat(this.classNames);
    },
    /**
     * The string to display in the indicator, interpolation optional.
     *
     * @property note
     * @type {String}
     * @default undefined
     * @example
     *   "This ${foo} is named ${bar}."
     */

    /**
     * An object with property/value pairs used when interpolating the <a
     * href="#property_note">note</a>.
     *
     * @property values
     * @type {Object}
     * @default undefined
     */

    /**
     * The font-awesome icon for the indicator.
     *
     * @property icon
     * @type {String}
     * @default "sticky-note"
     */

    /**
     *  The event that the tooltip will hide and show for. Possible options are:
     *
     *  - 'hover'
     *  - 'click'
     *  - 'focus' (hides on blur)
     *  - 'none'
     *
     * @property event
     * @type {String}
     */

    /**
     * The title icon for the indicator.
     *
     * @property title
     * @type {String}
     * @default "Note"
     */

    /**
     * The style for the indicator. One of:
     *
     * - default
     * - primary
     * - info
     * - warning
     * - danger
     *
     * @property type
     * @type {String}
     * @default "default"
     */

    /**
     * The numeric value in milliseconds before the popover will hide after the user
     * exits the popover.
     *
     * @property popoverHideDelay
     * @type {Number}
     * @default 500
     *
     */

    /**
     * The string value that tells the tooltip to append to a specific element.
     * Default is set to the page `<body/>`.
     *
     * @property popperContainer
     * @type {String}
     * @default "body"
     */

    /**
     * The interpolated note string.
     *
     * @property interpolated
     * @type {String}
     * @default ""
     * @readOnly
     * @category computed
     * @requires note,values
     */
    interpolated: Ember.computed('note', 'values', function () {
      return Ember.String.htmlSafe((0, _mdInterpolate.interpolate)(this.note, this.values));
    }),
    /**
     * The values for interpolated variables.
     *
     * @property variables
     * @type {Object}
     * @category computed
     * @requires note
     */
    values: Ember.computed('note', function () {
      let args = (0, _mdInterpolate.parseArgs)(this.note);
      return args.reduce((acc, a) => {
        acc[a] = this.get(a);
        return acc;
      }, {});
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-indicator/related/component", ["exports", "mdeditor/pods/components/control/md-indicator/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * @module mdeditor
     * @submodule components-control
     */

    /**
     * Icon that display a popover with information on a related object.
     *
     * ```handlebars
     * \{{control/md-indicator/related
     *   model=model
     *   route=true
     *   icon="sticky-note"
     *   note="${foo} has an associated domain ${bar}"
     *   route="dictionary.show.edit.entity"
     *   values=values
     *   parent=dictionary
     *   relatedId="domainId"
     *   relatedIdLocal="domainId"
     *   path="domain"
     *   title="Related Indicator Test"
     *   linkText="Go to Domain"
     *   type="warning"
     *   popperContainer="body"
     * }}
     * ```
     *
     * @class md-indicator--related
     * @extends md-indicator
     * @constructor
     */

    init() {
      this.type = this.type || 'info';
      this._super(...arguments);
      this.linkText = this.linkText || 'Open Related';
      this.classNames = ['md-indicator-related', "md-".concat(this.type)].concat(this.classNames);
    },
    isVisible: Ember.computed.bool('related'),
    /**
     * The string value of the "link-to" route argument.
     *
     * @property route
     * @type {String}
     */

    /**
     * The object to use as the data model for the "local" object.
     *
     * @property model
     * @type {Object}
     * @required
     */

    /**
     * The string value used to render text to tooltip button.
     *
     * @property linkText
     * @type {String}
     * @required
     */

    /**
     * The parent dictionary object for this attribute used to lookup references.
     *
     * @property parent
     * @type {Object}
     * @required
     */

    /**
     * The string value property used in the related computed property.
     *
     * @property path
     * @type {String}
     * @required
     */

    /**
     * The name of the property used to lookup the related object. This property will
     * be used for both the local and related objects if relatedIdLocal is not
     * specified.
     *
     * @property relatedId
     * @type {String}
     * @required
     */

    /**
     * The string value property used in the "local" object to find the related
     * object.
     *
     * @property relatedIdLocal
     * @type {String}
     * @required
     */

    /**
     * An array of strings passed to this.get to lookup model id values for the <a href="#property_route">
     *
     * @property routeIdPaths
     * @type {Array}
     */

    /**
     * The related object.
     *
     * @property related
     * @type {Object}
     * @routeIdPathscategory computed
     * @requires path,parent
     */
    related: Ember.computed('path', 'parent', function () {
      return Ember.get(this.parent, this.path).findBy(this.relatedId, Ember.get(this.model, this.relatedIdLocal || this.relatedId));
    }),
    /**
     * The index of the related object.
     *
     * @property relatedIndex
     * @type {Number}
     * @category computed
     * @requires related
     */
    relatedIndex: Ember.computed('related', function () {
      return Ember.get(this.parent, this.path).indexOf(this.related);
    }),
    /**
     * An array of property names that correspond to model.ids for the link-to.
     *
     * @property models
     * @type {Array}
     * @category computed
     * @requires routeIdPaths
     */
    models: Ember.computed.map('routeIdPaths', function (p) {
      return this.get(p);
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-indicator/related/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "+x4rthUm",
    "block": "{\"symbols\":[],\"statements\":[[4,\"control/md-indicator\",null,[[\"title\",\"icon\",\"type\",\"note\",\"event\",\"values\",\"route\",\"model\",\"linkText\",\"popoverHideDelay\",\"popperContainer\"],[[24,[\"title\"]],[24,[\"icon\"]],[24,[\"type\"]],[24,[\"note\"]],[24,[\"event\"]],[24,[\"values\"]],[24,[\"route\"]],[24,[\"model\"]],[24,[\"linkText\"]],[24,[\"popoverHideDelay\"]],[24,[\"popperContainer\"]]]],{\"statements\":[[0,\"\\n  \"],[7,\"h4\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"route\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"models\",\"length\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"route\",\"models\",\"class\"],[[24,[\"route\"]],[24,[\"models\"]],[28,\"concat\",[\"btn btn-sm btn-\",[24,[\"type\"]]],null]]],{\"statements\":[[0,\"          \"],[1,[22,\"linkText\"],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\"],[[28,\"concat\",[\"btn btn-sm btn-\",[24,[\"type\"]]],null],[24,[\"route\"]]]],{\"statements\":[[0,\"          \"],[1,[22,\"linkText\"],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-indicator/related/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-indicator/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "t9huYnNK",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"fa-icon\",[[24,[\"icon\"]]],[[\"fixedWidth\"],[true]]],false],[0,\"\\n\\n\"],[4,\"ember-popover\",null,[[\"popoverHideDelay\",\"popperContainer\",\"tooltipClass\",\"event\"],[[24,[\"popoverHideDelay\"]],[24,[\"popperContainer\"]],[28,\"concat\",[\"md-tooltip \",[24,[\"type\"]]],null],[24,[\"event\"]]]],{\"statements\":[[4,\"if\",[[24,[\"title\"]]],null,{\"statements\":[[0,\"    \"],[7,\"h4\",true],[10,\"class\",\"title\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"icon\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"fa-icon\",[[24,[\"icon\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[22,\"title\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[7,\"span\",true],[8],[1,[22,\"interpolated\"],false],[9],[0,\"\\n  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-indicator/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-infotip/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
    * Tooltip displayed as icon with font styled as superscript.
    *
    * @class md-infotip
    * @module mdeditor
    * @submodule components-control
    * @constructor
    */

    tagName: 'sup',
    classNames: ['md-infotip'],
    /**
    * Tooltip text
    *
    * @property text
    * @type {String}
    * @required
    */

    /**
    * Tooltip text
    *
    * @property tip
    * @type {String}
    * @default 'info-circle'
    */
    icon: 'info-circle',
    /**
    * Tooltip delay
    *
    * @property tip
    * @type {Number}
    * @default 350
    */
    delay: 350
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-infotip/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "LtsRZPL9",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"fa-icon\",[[24,[\"icon\"]]],null],false],[0,\"\\n\"],[1,[28,\"ember-tooltip\",null,[[\"delay\",\"text\"],[[24,[\"delay\"]],[24,[\"text\"]]]]],false],[0,\"\\n\"],[14,1]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-infotip/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-itis/component", ["exports", "moment", "mdeditor/pods/components/object/md-citation/component"], function (_exports, _moment, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      this.selected = [];
      (true && !(this.taxonomy) && Ember.assert('No taxonomy object supplied', this.taxonomy));
    },
    tagName: 'form',
    classNames: ['md-itis'],
    itis: Ember.inject.service(),
    flashMessages: Ember.inject.service(),
    searchString: null,
    kingdom: null,
    total: null,
    isLoading: false,
    limit: 25,
    resultTitle: Ember.computed('limit', 'total', 'searchResult.[]', function () {
      let total = this.total;
      let result = this.get('searchResult.length');
      let limit = this.limit;
      return total <= limit ? result : "".concat(result, " of ").concat(total);
    }),
    notFound: Ember.computed('searchResult', function () {
      let result = this.searchResult;
      return Ember.isArray(result) && result.length === 0;
    }),
    found: Ember.computed.or('selected.length', 'searchResult.length'),
    submit() {
      let itis = this.itis;
      this.set('isLoading', true);
      this.set('searchResult', null);
      itis.sendQuery(this.searchString, this.kingdom, this.limit).then(response => {
        if (!response) {
          return;
        }
        let docs = response.response.docs;
        let data = docs.map(doc => itis.parseDoc(doc));
        this.set('searchResult', data);
        this.set('total', response.response.numFound);
        this.set('isLoading', false);
      });
    },
    actions: {
      search() {
        this.submit.call(this);
      },
      selectItem(item) {
        item.set('animate', true);
        item.set('selected', true);
        Ember.run.later(this, function () {
          this.searchResult.removeObject(item);
          this.selected.pushObject(item);
        }, 250);
      },
      deselectItem(item) {
        item.set('selected', false);
        Ember.run.later(this, function () {
          this.selected.removeObject(item);
          this.searchResult.pushObject(item);
        }, 250);
      },
      importTaxa(taxa) {
        let taxonomy = this.taxonomy;
        let itisCitation = this.get('itis.citation');
        let classification = Ember.set(taxonomy, 'taxonomicClassification', Ember.getWithDefault(taxonomy, 'taxonomicClassification', []));
        let systems = Ember.set(taxonomy, 'taxonomicSystem', Ember.getWithDefault(taxonomy, 'taxonomicSystem', [{
          citation: {}
        }]));
        let system = systems.findBy('citation.title', Ember.get(itisCitation, 'title'));
        let allTaxa = taxa.reduce((acc, itm) => acc.pushObjects(itm.taxonomy), []);
        let today = (0, _moment.default)().format('YYYY-MM-DD');
        let dateObj = {
          date: today,
          dateType: 'transmitted',
          description: 'Taxa imported from ITIS'
        };
        allTaxa.forEach(itm => this.itis.mergeTaxa(itm, classification));
        if (!system) {
          itisCitation.get('date').pushObject(dateObj);
          systems.pushObject({
            citation: itisCitation
          });
        } else {
          let citation = Ember.set(system, 'citation', Ember.getWithDefault(system, 'citation', {}));
          (0, _component.formatCitation)(citation);
          let date = Ember.A(Ember.get(citation, 'date'));
          if (!date.findBy('date', today)) {
            date.pushObject(dateObj);
          }
        }
        this.flashMessages.success("Successfully imported ".concat(allTaxa.length, " taxa from ITIS."));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-itis/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "X0q/DPKJ",
    "block": "{\"symbols\":[\"result\",\"name\",\"result\",\"name\"],\"statements\":[[4,\"layout/md-card\",null,[[\"spotlightEnabled\",\"block\"],[false,false]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"card-block row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group col-lg-9\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"control-label\"],[8],[0,\"Search Value\"],[9],[0,\"\\n        \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,0,[\"searchString\"]],\"Search ITIS using common name, scientific name, or TSN\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group col-lg-3\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"control-label\"],[8],[0,\"Kingdom \"],[7,\"em\",true],[8],[0,\"(optional)\"],[9],[9],[0,\"\\n      \"],[1,[28,\"input/md-select\",null,[[\"value\",\"valuePath\",\"namePath\",\"objectArray\",\"searchEnabled\",\"tooltip\",\"allowClear\",\"tooltipPath\",\"disabled\",\"placeholder\"],[[23,0,[\"kingdom\"]],\"kingdomName\",\"title\",[28,\"sort-by\",[\"title\",[24,[\"itis\",\"kingdoms\",\"kingdomNames\"]]],null],false,true,true,\"kingdomName\",[28,\"if\",[[24,[\"searchString\"]],false,true],null],\"Select a kingdom.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n    \"],[7,\"button\",false],[12,\"class\",\"btn btn-primary pull-right\"],[12,\"disabled\",[28,\"if\",[[24,[\"searchString\"]],false,true],null]],[12,\"type\",\"submit\"],[3,\"action\",[[23,0,[]],\"search\"]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"isLoading\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"fa-icon\",[\"spinner\"],[[\"spin\"],[true]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"fa-icon\",[\"search\"],null],false],[0,\"\\n      \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"tooltipClass\",\"side\"],[\"Click to send search request\",\"ember-tooltip md-tooltip info\",\"left\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      Search\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"notFound\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"alert alert-warning\"],[8],[0,\"\\n    \"],[7,\"h5\",true],[8],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\" No taxa matched the search. Please try again.\"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"found\"]]],[[\"use\",\"enableGrowth\"],[\"fade\",false]],{\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"card md-card\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-header\"],[8],[0,\"\\n        \"],[7,\"h4\",true],[10,\"class\",\"card-title\"],[8],[0,\"\\n          Select Taxa \"],[7,\"small\",true],[8],[0,\"Showing \"],[1,[22,\"resultTitle\"],false],[0,\" found\"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-block no-padding\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"list-group no-margin md-itis-taxalist\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"searchResult\"]]],null,{\"statements\":[[4,\"liquid-unless\",[[23,3,[\"selected\"]]],[[\"class\",\"enableGrowth\",\"shrinkDelay\"],[[28,\"concat\",[\"list-group-item \",[28,\"if\",[[23,3,[\"animate\"]],\"md-itis-unselected\"],null]],null],true,500]],{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"media\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-body\"],[8],[0,\"\\n                  \"],[7,\"h4\",true],[10,\"class\",\"media-heading\"],[8],[0,\"\\n                    \"],[1,[23,3,[\"name\"]],false],[0,\"\\n                    \"],[7,\"small\",true],[10,\"class\",\"text-success\"],[8],[1,[23,3,[\"rank\"]],false],[9],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"p\",true],[8],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Kingdom:\"],[9],[0,\" \"],[1,[23,3,[\"kingdom\"]],false],[9],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"TSN:\"],[9],[0,\"\\n                      \"],[7,\"a\",true],[11,\"href\",[29,[\"https://www.itis.gov/servlet/SingleRpt/SingleRpt?search_topic=TSN&search_value=\",[23,3,[\"tsn\"]]]]],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[1,[23,3,[\"tsn\"]],false],[9],[0,\"\\n                       (\"],[7,\"span\",true],[11,\"class\",[29,[\"text-\",[23,3,[\"style\"]]]]],[8],[1,[23,3,[\"status\"]],false],[9],[0,\")\\n                    \"],[9],[0,\"\\n                    \"],[7,\"dl\",true],[10,\"class\",\"no-margin\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Common Name:\"]],{\"statements\":[[4,\"each\",[[23,3,[\"common\"]]],null,{\"statements\":[[0,\"                                \"],[1,[23,4,[\"name\"]],false],[0,\" (\"],[1,[23,4,[\"language\"]],false],[0,\")\\n                                \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[4]},{\"statements\":[[0,\"                                \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No names assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"                    \"],[9],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-right media-middle\"],[8],[0,\"\\n                  \"],[7,\"button\",false],[12,\"class\",\"btn btn-success btn-lg btn-block\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"selectItem\",[23,3,[]]]],[8],[0,\"Add\"],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[3]},{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n                \"],[7,\"p\",true],[10,\"class\",\"list-group-item-text\"],[8],[0,\"\\n                  Perform a search to select additional taxa.\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[0,\"  \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"card md-card hd-success card-inverse card-outline-success\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-header\"],[8],[0,\"\\n        \"],[7,\"h4\",true],[10,\"class\",\"card-title\"],[8],[0,\"\\n          Taxa Selected\\n\"],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-block no-padding\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"list-group no-margin md-itis-selectedlist\"],[8],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"selected\",\"length\"]]],[[\"use\"],[\"fade\"]],{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n            \"],[7,\"p\",true],[10,\"class\",\"list-group-item-text\"],[8],[0,\"\\n              \"],[7,\"button\",false],[12,\"class\",\"btn btn-primary btn-lg btn-block\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"importTaxa\",[24,[\"selected\"]]]],[8],[0,\"Import Taxa\"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[24,[\"selected\"]]],null,{\"statements\":[[4,\"liquid-if\",[[23,1,[\"selected\"]]],[[\"class\",\"enableGrowth\",\"shrinkDelay\"],[\"list-group-item md-itis-selected\",true,500]],{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"media\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-body\"],[8],[0,\"\\n                  \"],[7,\"h4\",true],[10,\"class\",\"media-heading\"],[8],[0,\"\\n                    \"],[1,[23,1,[\"name\"]],false],[0,\"\\n                    \"],[7,\"small\",true],[10,\"class\",\"text-success\"],[8],[1,[23,1,[\"rank\"]],false],[9],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"p\",true],[8],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Kingdom:\"],[9],[0,\" \"],[1,[23,1,[\"kingdom\"]],false],[9],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"TSN:\"],[9],[0,\"\\n                      \"],[7,\"a\",true],[11,\"href\",[29,[\"https://www.itis.gov/servlet/SingleRpt/SingleRpt?search_topic=TSN&search_value=\",[23,1,[\"tsn\"]]]]],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[1,[23,1,[\"tsn\"]],false],[9],[0,\"\\n                       (\"],[7,\"span\",true],[11,\"class\",[29,[\"text-\",[23,1,[\"style\"]]]]],[8],[1,[23,1,[\"status\"]],false],[9],[0,\")\\n                    \"],[9],[0,\"\\n                    \"],[7,\"dl\",true],[10,\"class\",\"no-margin\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Common Name:\"]],{\"statements\":[[4,\"each\",[[23,1,[\"common\"]]],null,{\"statements\":[[0,\"                                \"],[1,[23,2,[\"name\"]],false],[0,\" (\"],[1,[23,2,[\"language\"]],false],[0,\")\\n                                \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"                                \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No names assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"                    \"],[9],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-left media-middle\"],[8],[0,\"\\n                  \"],[7,\"button\",false],[12,\"class\",\"btn btn-danger btn-lg btn-block\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"deselectItem\",[23,1,[]]]],[8],[0,\"Remove\"],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[],\"parameters\":[]}]],\"parameters\":[1]},{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n              \"],[7,\"p\",true],[10,\"class\",\"list-group-item-text\"],[8],[0,\"\\n                Select taxa from the list.\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\"],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-itis/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-json-button/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    slider: Ember.inject.service(),
    tagName: 'button',
    classNames: ['btn'],
    attributeBindings: ['type'],
    type: 'button',
    text: 'Preview JSON',
    icon: 'binoculars',
    json: Ember.computed(function () {
      return {};
    }),
    hideSlider: true,
    propagateClick: false,
    click(evt) {
      //this.set('preview', true);
      if (!this.propagateClick) {
        evt.stopPropagation();
      }
      this.showSlider();
    },
    _close() {
      this.set('preview', false);
      this.set('hideSlider', true);
    },
    showSlider() {
      let slider = this.slider;
      slider.set('fromName', 'md-slider-json');
      slider.set('onClose', this._close);
      slider.set('context', this);
      slider.toggleSlider(true);
      this.set('hideSlider', false);
    },
    actions: {
      close() {
        this._close;
      },
      showSlider() {
        this.showSlider();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-json-button/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "KRM9htbZ",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[25,1]],null,{\"statements\":[[0,\"  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"span\",true],[11,\"class\",[29,[\"fa fa-\",[22,\"icon\"]]]],[8],[9],[0,\" \"],[1,[22,\"text\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"preview\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"control/md-json-viewer\",null,[[\"json\",\"modal\",\"close\"],[[24,[\"json\"]],true,[28,\"action\",[[23,0,[]],\"close\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideSlider\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-slider-json\",[28,\"hash\",null,[[\"title\",\"body\"],[[28,\"concat\",[\"Viewing JSON for: \",[24,[\"title\"]]],null],[28,\"component\",[\"control/md-json-viewer\"],[[\"modal\",\"json\"],[false,[24,[\"json\"]]]]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-json-button/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-json-viewer/component", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * JSON viewer
     *
     * @class md-json-viewer
     * @module mdeditor
     * @submodule components-control
     */

    classNames: 'md-json-viewer',
    /**
     * True to render in modal dialog
     *
     * @property modal
     * @type {Boolean}
     */
    modal: true,
    /**
     * Element selector or element that serves as the reference for modal position
     *
     * @property target
     * @type {String}
     */
    target: 'html',
    /**
     * Object or string to render as JSON in viewer
     *
     * @property json
     * @type {Object|String}
     */
    json: 'No json supplied',
    close() {
      this.set('modal', false);
    },
    setFontSize(el, factor) {
      let currentFontSize = el.css('font-size');
      let currentFontSizeNum = parseFloat(currentFontSize, 10);
      let newFontSize = currentFontSizeNum * factor;
      el.animate({
        'font-size': "".concat(newFontSize, "px")
      });
    },
    didInsertElement() {
      let json = this.json;
      let out = Ember.typeOf(json) === 'string' ? json : JSON.stringify(json);
      (0, _jquery.default)('.md-viewer-body').JSONView(out);
    },
    actions: {
      collapse() {
        this.$('.md-viewer-body').JSONView('collapse');
      },
      expand() {
        this.$('.md-viewer-body').JSONView('expand');
      },
      zoomin() {
        let body = this.$('.md-viewer-body');
        this.setFontSize(body, 1.1);
      },
      zoomout() {
        let body = this.$('.md-viewer-body');
        this.setFontSize(body, 0.9);
      },
      closeModal() {
        this.close();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-json-viewer/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "RWAuna7C",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"modal\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"onClose\",\"translucentOverlay\",\"containerClass\",\"overlayClass\",\"attachment\",\"targetAttachment\",\"tetherTarget\"],[[28,\"action\",[[23,0,[]],\"closeModal\"],null],true,\"md-jsmodal-container\",\"md-modal-overlay\",\"top center\",\"top center\",\"html\"]],{\"statements\":[[0,\"    \"],[7,\"button\",false],[12,\"class\",\"md-modal-close\"],[12,\"aria-label\",\"Close\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"closeModal\"]],[8],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"fa-stack\"],[8],[0,\"\\n          \"],[7,\"i\",true],[10,\"class\",\"fa fa-circle fa-stack-2x\"],[8],[9],[0,\"\\n          \"],[7,\"i\",true],[10,\"class\",\"fa fa-times fa-stack-1x fa-inverse\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"md-viewer-body\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"well\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"btn-toolbar md-viewer-controls pull-right\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"btn-group-vertical\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"JSON viewer controls\"],[8],[0,\"\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-primary\"],[12,\"title\",\"Expand All\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"expand\"]],[8],[1,[28,\"fa-icon\",[\"plus\"],null],false],[9],[0,\"\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-default\"],[12,\"title\",\"Collapse All\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"collapse\"]],[8],[1,[28,\"fa-icon\",[\"minus\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"btn-group-vertical\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"JSON viewer controls\"],[8],[0,\"\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-primary\"],[12,\"title\",\"Zoom in\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"zoomin\"]],[8],[1,[28,\"fa-icon\",[\"search\"],null],false],[9],[0,\"\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-default\"],[12,\"title\",\"Zoom Out\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"zoomout\"]],[8],[1,[28,\"fa-icon\",[\"search-minus\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"md-viewer-body\"],[8],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-json-viewer/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-modal/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * @module mdeditor
     * @submodule components-control
     */

    /**
     * Modal dialog with buttons.
     *
     * @class md-modal
     */

    /**
     * Whether to display the modal
     *
     * @property isShowing
     * @type {Boolean}
     */
    isShowing: false,
    /**
     * Text to display in the modal.
     * Note: This string is NOT escaped in the template.
     *
     * @property message
     * @type {String}
     */

    /**
     * Element selector or element that serves as the reference for modal position
     *
     * @property target
     * @type {String}
     */
    target: 'viewport',
    /**
     * Whether to display the confirm button
     *
     * @property showConfirm
     * @type {Boolean}
     */
    showConfirm: false,
    /**
     * Whether to render in place
     *
     * @property renderInPlace
     * @type {Boolean}
     */
    renderInPlace: false,
    /**
     * Whether to display the cancel button
     *
     * @property showCancel
     * @type {Boolean}
     */
    showCancel: false,
    /**
     * Label for the confirm button
     *
     * @property confirmLabel
     * @type {String}
     */
    confirmLabel: 'OK',
    /**
     * Close action callback
     *
     * @method closeModal
     */
    closeModal() {
      this.set('isShowing', false);
    },
    /**
     * Confirm action callback
     * @method confirm
     */
    confirm() {
      this.closeModal();
    },
    /**
     * Cancel action callback
     *
     * @method cancel
     */
    cancel() {
      this.closeModal();
    },
    actions: {
      /**
       * Close modal action
       *
       * @method action.closeModal
       */
      closeModal() {
        this.closeModal();
      },
      /**
       * confirm action
       *
       * @method action.confirm
       */
      confirm() {
        this.confirm();
      },
      /**
       * Cancel action
       *
       * @method action.cancel
       */
      cancel() {
        this.cancel();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-modal/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "EtuohUT4",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"isShowing\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"onClose\",\"targetAttachment\",\"attachment\",\"translucentOverlay\",\"containerClass\",\"overlayClass\",\"tetherTarget\",\"renderInPlace\"],[[28,\"action\",[[23,0,[]],\"closeModal\"],null],\"middle center\",\"middle center\",true,\"md-modal-container\",\"md-modal-overlay\",[24,[\"target\"]],[24,[\"renderInPlace\"]]]],{\"statements\":[[0,\"    \"],[7,\"button\",false],[12,\"class\",\"md-modal-close\"],[12,\"aria-label\",\"Close\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"closeModal\"]],[8],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"fa-stack\"],[8],[0,\"\\n            \"],[7,\"i\",true],[10,\"class\",\"fa fa-circle fa-stack-2x\"],[8],[9],[0,\"\\n            \"],[7,\"i\",true],[10,\"class\",\"fa fa-times fa-stack-1x fa-inverse\"],[8],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"md-modal-body\"],[8],[0,\"\\n      \"],[14,1],[0,\" \"],[1,[28,\"html-safe\",[[24,[\"message\"]]],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"md-modal-buttons pull-right\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showConfirm\"]]],null,{\"statements\":[[0,\"        \"],[7,\"button\",false],[12,\"class\",\"btn btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"confirm\"]],[8],[1,[22,\"confirmLabel\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"showCancel\"]]],null,{\"statements\":[[0,\"        \"],[7,\"button\",false],[12,\"class\",\"btn btn-warning\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancel\"]],[8],[0,\"Cancel\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-modal/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    router: Ember.inject.service(),
    classNames: ['md-dashboard-buttons'],
    actions: {
      deleteItem(item, index, isSelected, clickOnRow) {
        if (isSelected) {
          clickOnRow(index, item);
        }
        this._deleteItem(item);
      },
      editItem(item, evt) {
        evt.stopPropagation();
        this.router.transitionTo("".concat(item.constructor.modelName, ".show.edit"), item);
        return false;
      },
      showSlider(rec, evt) {
        this.column.showSlider(rec, evt);
      }
    },
    _deleteItem(item) {
      item.destroyRecord().then(() => {
        item.unloadRecord();
      });
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/custom/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Button style.
     *
     * @property column.buttonConfig.style
     * @type {String}
     */

    /**
     * Text to display in the button.
     *
     * @property column.buttonConfig.title
     * @type {String}
     */

    /**
     * The record passed to the component.
     *
     * @property record
     * @type {Object}
     */

    /**
     * Action to run on button click
     *
     * @property column.buttonConfig.action
     * @param {Object} record The row record
     */
    action() {}
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/custom/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "q9XgWurF",
    "block": "{\"symbols\":[\"c\"],\"statements\":[[4,\"with\",[[24,[\"column\",\"buttonConfig\"]]],null,{\"statements\":[[0,\"  \"],[7,\"button\",true],[11,\"class\",[29,[\"btn btn-sm btn-\",[28,\"if\",[[23,1,[\"style\"]],[23,1,[\"style\"]],\"primary\"],null]]]],[11,\"onclick\",[28,\"action\",[[23,0,[]],[23,1,[\"action\"]],[24,[\"record\"]]],null]],[10,\"type\",\"button\"],[8],[0,\"\\n    \"],[1,[28,\"fa-icon\",[\"binoculars\"],null],false],[0,\" \"],[1,[23,1,[\"title\"]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-record-table/buttons/custom/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/filter/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    flashMessages: Ember.inject.service(),
    showButton: Ember.computed('selectedItems.[]', function () {
      return this.get('selectedItems.length') > 1;
    }),
    deleteSelected(records) {
      records.forEach(rec => {
        rec.destroyRecord().then(rec => {
          rec.unloadRecord();
          Ember.run.once(() => {
            records.removeObject(rec);
            this.flashMessages.danger("Deleted ".concat(rec.constructor.modelName, " \"").concat(rec.get('title'), "\"."));
          });
        });
      });
    },
    actions: {
      deleteSelected(records) {
        this.deleteSelected(records);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/filter/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "aofhSw4G",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"showButton\"]]],null,{\"statements\":[[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-danger btn-block\",[28,\"action\",[[23,0,[]],\"deleteSelected\",[24,[\"selectedItems\"]]],null]]],{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete Selected\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-record-table/buttons/filter/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/show/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: ''
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/show/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "9t9t8syH",
    "block": "{\"symbols\":[],\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-sm btn-info\",[28,\"concat\",[[24,[\"record\",\"constructor\",\"modelName\"]],\".show\"],null],[24,[\"record\",\"id\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"fa-icon\",[\"eye\"],null],false],[0,\" Show\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-record-table/buttons/show/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/buttons/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "LxkS0rCu",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"control/md-record-table/buttons/show\",null,[[\"record\"],[[24,[\"record\"]]]]],false],[0,\"\\n\"],[7,\"button\",true],[10,\"class\",\"btn btn-sm btn-success\"],[11,\"onclick\",[28,\"action\",[[23,0,[]],\"editItem\",[24,[\"record\"]]],null]],[10,\"type\",\"button\"],[8],[0,\"\\n  \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit\\n\"],[9],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-sm btn-danger\",[28,\"action\",[[23,0,[]],\"deleteItem\",[24,[\"record\"]],[24,[\"index\"]],[24,[\"isSelected\"]],[24,[\"clickOnRow\"]]],null]]],{\"statements\":[[0,\"  \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete\\n\"]],\"parameters\":[]},null],[1,[28,\"control/md-json-button\",null,[[\"class\",\"json\",\"title\"],[\"btn-sm btn-primary\",[24,[\"record\",\"cleanJson\"]],[24,[\"record\",\"title\"]]]]],false],[0,\"\\n\"],[1,[28,\"control/md-status\",null,[[\"model\",\"isBtn\",\"hideSlider\",\"showSlider\"],[[24,[\"record\"]],true,true,[28,\"action\",[[23,0,[]],\"showSlider\",[24,[\"record\"]]],null]]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-record-table/buttons/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-record-table/component", ["exports", "mdeditor/pods/components/md-models-table/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * @module mdeditor
     * @submodule components-control
     */

    /**
     * Table used to display objects. Includes column to toggle selection for all
     * rows.
     *
     *```handlebars
     * \{{control/md-record-table
     *   data=model.data
     *   columns=model.columns
     *   select=callback
     * }}
     * ```
     *
     * @class md-select-table
     * @extends models-table
     */
    init() {
      this.dataColumns = this.dataColumns || [];
      this.filteringIgnoreCase = this.filteringIgnoreCase || true;
      this.multipleSelect = this.multipleSelect || true;
      Ember.defineProperty(this, 'columns', Ember.computed('dataColumns', 'checkColumn', function () {
        let chk = this.checkColumn;
        let action = this.actionsColumn;
        let cols = Ember.A().concat(this.dataColumns);
        if (chk) {
          cols = [chk].concat(cols);
        }
        if (action) {
          cols.push(action);
        }
        return cols;
      }));
      this._super(...arguments);
    },
    classNames: ['md-record-table'],
    /**
     * Property name used to identify selected records. Should begin with underscore.
     *
     * @property selectProperty
     * @type {String}
     * @default "_selected"
     * @static
     * @readOnly
     * @required
     */
    selectProperty: '_selected',
    /**
     * Array of table records
     *
     * @property data
     * @type {Array}
     * @default []
     * @required
     */

    /**
     * Array of column configs for the table.
     * See http://onechiporenko.github.io/ember-models-table
     *
     * ```javascript
     * [{
     *  propertyName: 'id',
     *  title: 'ID'
     * }, {
     *  title: '',
     *  template: 'components/leaflet-table/actions',
     *  className: 'text-center text-nowrap'
     * }]
     * ```
     *
     * @property dataColumns
     * @type {Array}
     * @required
     * @default []
     */

    /**
     * Column configs for the checkbox column.
     * See http://onechiporenko.github.io/ember-models-table
     *
     *
     * @property checkColumns
     * @type {Object}
     * @required
     */
    checkColumn: Ember.computed(function () {
      return {
        component: 'components/md-models-table/components/check',
        disableFiltering: true,
        mayBeHidden: false,
        componentForSortCell: 'components/md-models-table/components/check-all',
        className: 'text-center'
      };
    }),
    /**
     * Column configs for the action column.
     * See http://onechiporenko.github.io/ember-models-table
     *
     *
     * @property actionsColumn
     * @type {Object}
     * @required
     */
    actionsColumn: Ember.computed('allActions', function () {
      let all = this.allActions;
      return {
        title: 'Actions',
        className: 'md-actions-column',
        component: all ? 'control/md-record-table/buttons' : 'control/md-record-table/buttons/show',
        disableFiltering: !all,
        componentForFilterCell: all ? 'control/md-record-table/buttons/filter' : null,
        showSlider: this.showSlider
      };
    }),
    selectedItems: Ember.computed({
      get() {
        let prop = this.selectProperty;
        return this.data.filterBy(prop).toArray();
      },
      set(k, v) {
        if (!Ember.isArray(v)) {
          (true && Ember.warn('`selectedItems` must be an array.', false, {
            id: '#emt-selectedItems-array'
          }));
        }
        return Ember.A(v);
      }
    }),
    /**
     * Callback on row selection.
     *
     * @method select
     * @param {Object} rec Selected record.
     * @param {Number} index Selected row index.
     * @param {Array} selected Selected records.
     * @return {Array} Selected records.
     */
    select(rec, index, selected) {
      return selected;
    },
    actions: {
      clickOnRow(idx, rec) {
        this._super(...arguments);
        let prop = this.selectProperty;
        let sel = Ember.get(this, 'selectedItems');
        rec.toggleProperty(prop);
        this.select(rec, idx, sel);
      },
      toggleAllSelection() {
        //this._super(...arguments);
        let selectedItems = Ember.get(this, 'selectedItems');
        let data = Ember.get(this, 'data');
        const allSelectedBefore = Ember.get(selectedItems, 'length') === Ember.get(data, 'length');
        Ember.get(this, 'selectedItems').clear();
        if (!allSelectedBefore) {
          Ember.get(this, 'selectedItems').pushObjects(data.toArray());
        }
        this.userInteractionObserver();
        let selected = Ember.get(this, 'selectedItems');
        let prop = this.selectProperty;
        //let data = get(this, 'data');

        if (Ember.get(selected, 'length')) {
          selected.setEach(prop, true);
        } else {
          data.setEach(prop, false);
        }
        this.select(null, null, selected);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-repo-link/component", ["exports", "mdeditor/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    APP: {
      repository,
      version
    }
  } = _environment.default;
  var _default = Ember.Component.extend({
    tagName: 'a',
    attributeBindings: ['href', 'target'],
    classNames: ['md-fa-link'],
    /**
     * Application repository URL.
     *
     * @property repository
     * @type string
     */
    repository,
    /**
     * Link target, open in new window by default.
     *
     * @property target
     * @type string
     */
    target: '_blank',
    /**
     * Application version.
     *
     * @property version
     * @type string
     */
    version,
    /**
     * The commit hash reference.
     *
     * @property hash
     * @type {Ember.computed}
     * @return string
     */
    hash: Ember.computed('version', function () {
      let idx = this.version.indexOf('+') + 1;
      return version.substring(idx);
    }),
    /**
     * The url link
     *
     * @property href
     * @type {Ember.computed}
     * @return string
     */
    href: Ember.computed('repository', 'hash', function () {
      let repo = this.repository;
      let hash = this.hash;
      return "".concat(repo, "/tree/").concat(hash);
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-repo-link/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "BLWai/EV",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[25,1]],null,{\"statements\":[[0,\"  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[22,\"version\"],false],[1,[28,\"fa-icon\",[\"github\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-repo-link/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-scroll-into-view/component", ["exports", "scroll-into-view-if-needed"], function (_exports, _scrollIntoViewIfNeeded) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // import InViewportMixin from 'ember-in-viewport';
  var _default = Ember.Component.extend({
    classNames: ['md-scroll-into-view'],
    didInsertElement() {
      this._super(...arguments);
      let el = document.getElementById(this.elementId);
      let boundary = document.querySelector("#".concat(this.elementId)).closest(".md-scroll-into-view:not(#".concat(this.elementId, ")"));
      (0, _scrollIntoViewIfNeeded.default)(el, {
        block: boundary ? 'center' : 'nearest',
        behavior: 'smooth'
        //boundary: boundary
      });
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-scroll-into-view/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "oDym0eRG",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[14,1]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-scroll-into-view/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-scroll-spy/component", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * mdEditor Component that enables scrollspy
     *
     * @class md-scroll-spy
     * @module mdeditor
     * @submodule components-control
     * @constructor
     */

    profile: Ember.inject.service('profile'),
    router: Ember.inject.service('router'),
    classNames: ['md-scroll-spy'],
    /**
     * The height to offset from top of container.
     *
     * @property offset
     * @type {Number}
     * @default 110
     */
    offset: 110,
    /**
     * The initial scroll target when the component is inserted.
     *
     * @property scrollInit
     * @type {String}
     */

    /**
     * The method(action) used to set the scroll target. Should accept a string with
     * the target.
     *
     * @method setScrollTo
     * @param {String} scrollTo The scroll target
     */

    /**
     * Array of data objects for the navigation links.
     *
     * @property links
     * @type {Array}
     * @category computed
     * @requires refresh,profile.active
     */
    links: Ember.computed('refresh', 'profile.active', function () {
      let liquid = '';
      if ((0, _jquery.default)('.liquid-spy').length) {
        liquid = (0, _jquery.default)('.liquid-spy .liquid-child:first > .liquid-container').length ? '.liquid-spy .liquid-child:first > .liquid-container:last ' : '.liquid-spy ';
        liquid += '.liquid-child:first ';
      }
      let $targets = (0, _jquery.default)("".concat(liquid, "[data-spy]:visible"));
      let links = Ember.A();
      $targets.each(function (idx, link) {
        let $link = (0, _jquery.default)(link);
        links.pushObject({
          id: $link.attr('id'),
          text: $link.attr('data-spy'),
          embedded: $link.hasClass('md-embedded')
        });
      });
      return links;
    }),
    /**
     * Click handler for nav links.
     *
     * @method clickLink
     * @param {Event} e The click event.
     */
    clickLink(e) {
      let setScrollTo = this.setScrollTo;
      let $target = (0, _jquery.default)(e.currentTarget);
      let targetId = $target.attr('href');
      e.preventDefault();
      this.scroll(targetId);
      if (typeof setScrollTo === 'function') {
        setScrollTo($target.text().dasherize());
      }
    },
    /**
     * Setup the scrollspy on  the body element
     *
     * @method setupSpy
     */
    setupSpy() {
      (0, _jquery.default)('body').scrollspy({
        target: '.md-scroll-spy',
        offset: this.offset
      });
    },
    /**
     * Call setupSpy and perform initial scroll.
     *
     * @method didInsertElement
     */
    didInsertElement() {
      this._super(...arguments);
      let data = (0, _jquery.default)('body').data('bs.scrollspy');
      if (data) {
        Ember.set(data, 'options.offset', this.offset);
      }
      this.setupSpy();
      let init = this.scrollInit;
      if (!init || init === 'top') {
        this.scroll();
      } else {
        let link = this.links.find(link => {
          return init === link.text.dasherize();
        });
        if (link) {
          this.scroll('#' + link.id);
        } else {
          if ((0, _jquery.default)('#' + init)) {
            this.scroll('#' + init);
          } else {
            this.scroll();
          }
        }
      }
    },
    didReceiveAttrs() {
      this._super(...arguments);
      if (!this.setScrollTo) {
        this.scroll();
      }
    },
    /**
     * Scrolls to the target.
     *
     * @method MyMethod
     * @param {String} id element id of target
     * @param {Boolean} hilite If true, set the spy nav link to active
     */
    scroll(id, hilite) {
      let $anchor = (0, _jquery.default)(id);
      if ($anchor.length === 0) {
        (0, _jquery.default)('html, body').scrollTop(0 - this.offset);
        return;
      }
      (0, _jquery.default)('html, body').scrollTop($anchor.offset().top - this.offset);
      if (hilite) {
        (0, _jquery.default)('[href="' + id + '"]').closest('li').addClass('active');
      }
      $anchor.removeClass('md-flash');
      void $anchor[0].offsetWidth;
      $anchor.addClass('md-flash');
    },
    actions: {
      clickLink(e) {
        this.clickLink(e);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-scroll-spy/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "65i9TnYs",
    "block": "{\"symbols\":[\"link\",\"&default\"],\"statements\":[[4,\"if\",[[24,[\"setScrollTo\"]]],null,{\"statements\":[[0,\"  \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills nav-stacked\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"links\"]]],null,{\"statements\":[[0,\"      \"],[7,\"li\",true],[11,\"class\",[28,\"if\",[[23,1,[\"embedded\"]],\"md-embedded\"],null]],[8],[0,\"\\n        \"],[7,\"a\",true],[11,\"href\",[29,[\"#\",[23,1,[\"id\"]]]]],[11,\"onclick\",[28,\"action\",[[23,0,[]],\"clickLink\"],null]],[8],[1,[23,1,[\"text\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[14,2],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-scroll-spy/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-select-table/component", ["exports", "mdeditor/pods/components/md-models-table/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * @module mdeditor
     * @submodule components-control
     */

    /**
     * Table with action on row click. Used to select objects(records).
     *
     *```handlebars
     * \{{control/md-select-table
     *   data=model.data
     *   columns=model.columns
     *   select=callback
     * }}
     * ```
     *
     * @class md-select-table
     * @extends models-table
     */

    classNames: ['md-select-table'],
    /**
     * Array of table records
     *
     * @property data
     * @type {Array}
     * @default []
     * @required
     */

    /**
     * Array of column configs for the table.
     * See http://onechiporenko.github.io/ember-models-table
     *
     * ```javascript
     * [{
     *  propertyName: 'id',
     *  title: 'ID'
     * }, {
     *  title: '',
     *  template: 'components/leaflet-table/actions',
     *  className: 'text-center text-nowrap'
     * }]
     * ```
     *
     * @property columns
     * @type {Array}
     * @required
     * @default []
     */

    filteringIgnoreCase: true,
    /**
     * Callback on row selection.
     *
     * @method select
     * @param {Array} selected Selected items.
     * @return {Array}
     */
    select(selected) {
      return selected;
    },
    actions: {
      clickOnRow() {
        this._super(...arguments);
        let sel = this.selectedItems;
        this.select(sel);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-spinner/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['text-center', 'md-spinner']

    /**
    * The size of the FontAwesome icon.
    *
    * @property size
    * @type {String}
    * @default "false"
    * @optional
    */

    /**
    * The the text to show below the spinner.
    *
    * @property text
    * @type {String}
    * @optional
    */
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-spinner/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Uo+34krd",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"fa-icon\",[\"spinner\"],[[\"pulse\",\"size\"],[true,[24,[\"size\"]]]]],false],[0,\"\\n\"],[7,\"h3\",true],[11,\"class\",[29,[\"md-spinner-text size-\",[22,\"size\"]]]],[8],[0,\"\\n    \"],[1,[22,\"text\"],false],[0,\"\\n\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-spinner/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-spotlight/component", ["exports", "ember-modal-dialog/components/modal-dialog"], function (_exports, _modalDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const containerClassNames = ['md-spotlight-modal'];
  const overlayClassNames = ['md-modal-overlay'];
  var _default = _modalDialog.default.extend({
    /**
     * Component that highlights a DOM element
     *
     * @class md-spotlight
     * @module mdeditor
     * @submodule components-control
     * @extends modal-dialog
     * @uses service-spotlight
     * @constructor
     */

    /**
     * The inected spotlight Service
     *
     * @property spotlight
     * @type {Service}
     */
    spotlight: Ember.inject.service(),
    containerClassNames: containerClassNames,
    overlayClassNames: overlayClassNames,
    overlayClass: 'md-spotlight-overlay fade-in-fast',
    targetAttachment: 'none',
    translucentOverlay: true,
    clickOutsideToClose: false,
    attachment: 'middle center',
    tetherTarget: 'viewport',
    // /**
    // * The id of the DOM element to spotlight. Uses the spotlight service "elementId"
    // * by default.
    // *
    // * @property spotlightTargetId
    // * @type {String}
    // * @default "computed.alias('spotlight.elementId')"
    // * @category computed
    // * @requires spotlight.elementId
    // * @required
    // */
    // spotlightTargetId: computed.alias('spotlight.elementId'),

    // willInsertElement() {
    //   $('.md-modal-overlay').click();
    // },
    // didInsertElement() {
    //   this._super(...arguments);
    //
    //   let id = this.get('spotlightTargetId');
    //
    //   if(isPresent(id)) {
    //     $('body').addClass('md-no-liquid');
    //     $('#' + id).addClass('md-spotlight-target');
    //   }
    //
    // },

    actions: {
      onClose() {
        this._super(...arguments);
        this.spotlight.close();
      },
      onClickOverlay() {
        this._super(...arguments);
        this.spotlight.close();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-status/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    slider: Ember.inject.service(),
    tagName: 'span',
    classNames: ['md-status'],
    /**
     * Model to display status for.
     *
     * @property model
     * @type {DS.model}
     * @required
     */

    isBtn: false,
    hideSlider: false,
    btnSize: 'sm',
    showSlider() {
      let slider = this.slider;
      slider.set('fromName', 'md-slider-error');
      slider.toggleSlider(true);
    },
    actions: {
      showSlider(evt) {
        this.showSlider(evt);
      },
      saveRecord(evt) {
        let model = this.model;
        evt.stopPropagation();
        model.save().then(() => {
          this.flashMessages.success("Saved Record: ".concat(model.get('title')));
        });
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/md-status/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "GhWSwcbv",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"model\",\"hasDirtyHash\"]]],null,{\"statements\":[[7,\"span\",true],[10,\"role\",\"button\"],[10,\"class\",\"md-status-icon\"],[11,\"onclick\",[28,\"action\",[[23,0,[]],\"saveRecord\"],null]],[8],[0,\"\\n  \"],[1,[28,\"fa-icon\",[\"exclamation-circle\"],[[\"class\"],[[28,\"if\",[[24,[\"isBtn\"]],[28,\"concat\",[\"btn btn-danger btn-\",[24,[\"btnSize\"]]],null],\"md-error\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"This record has been modified! Cick to save.\",\"top\",\"ember-tooltip md-tooltip danger\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"hasSchemaErrors\"]]],null,{\"statements\":[[7,\"span\",true],[10,\"role\",\"button\"],[10,\"class\",\"md-status-icon\"],[11,\"onclick\",[28,\"action\",[[23,0,[]],\"showSlider\"],null]],[8],[0,\"\\n  \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],[[\"class\"],[[28,\"if\",[[24,[\"isBtn\"]],[28,\"concat\",[\"btn btn-warning btn-\",[24,[\"btnSize\"]]],null],\"md-warning\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"This record has errors! Click to view.\",\"right\",\"ember-tooltip md-tooltip warning\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideSlider\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-slider-error\",[28,\"hash\",null,[[\"title\",\"body\"],[[28,\"concat\",[\"Viewing errors for: \",[24,[\"model\",\"title\"]]],null],[28,\"component\",[\"control/md-errors\"],[[\"errors\"],[[24,[\"model\",\"schemaErrors\"]]]]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/md-status/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-citation/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    selectResource() {
      return this;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "hQVwh2+2",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"btn-group-vertical center-block\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Citation Button Controls\"],[8],[0,\"\\n  \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-info btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[24,[\"selectResource\"]]]],[8],[0,\"\\n    \"],[1,[28,\"fa-icon\",[\"check\"],null],false],[0,\" Select a Record\\n    \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"tooltipClass\",\"side\"],[\"Select a record to copy into the association.\\n        Note: This will only copy information.\",\"ember-tooltip md-tooltip primary\",\"left\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-lg btn-primary btn-block md-btn-responsive\",[24,[\"route\"]]]],{\"statements\":[[0,\" \"],[1,[28,\"fa-icon\",[[24,[\"icon\"]]],null],false],[0,\" \"],[1,[22,\"text\"],false]],\"parameters\":[]},null],[0,\"\\n  \"],[14,1],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/subbar-citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-importcsv/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-importcsv/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "k09m7TB4",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-info btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"doImport\"],[[\"target\"],[[24,[\"actionContext\"]]]]],[8],[0,\"\\n  \"],[1,[28,\"fa-icon\",[\"sign-in\"],null],false],[0,\" Do Import\"],[9],[0,\"\\n\"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-danger btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancelImport\"],[[\"target\"],[[24,[\"actionContext\"]]]]],[8],[0,\"\\n  \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Cancel Import\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/subbar-importcsv/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-link/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * mdEditor Component that renders a button used to navigate to a parent route
     * or perform an action on click.
     *
     * @class md-button-modal
     * @module mdeditor
     * @submodule components-control
     * @constructor
     */

    /**
     * The text to display
     *
     * @property text
     * @type {String}
     * @required
     */

    /**
     * The click text to display
     *
     * @property clickText
     * @type {String}
     * @required
     */

    /**
     * The button icon
     *
     * @property icon
     * @type {String}
     * @required
     */

    /**
     * The button type
     *
     * @property btnType
     * @type {String}
     * @default 'primary'
     */

    /**
     * The click button icon
     *
     * @property clickIcon
     * @type {String}
     * @required
     */

    /**
     * The click button type
     *
     * @property clickType
     * @type {String}
     * @default 'primary'
     */
    btnType: 'primary',
    /**
     * The route to link to.
     *
     * @property route
     * @type {String}
     */

    /**
     * The click action.
     *
     * @property click
     * @type {String}
     */

    clickTxt: Ember.computed.or('clickText', 'text'),
    clickButtonType: Ember.computed.or('clickType', 'btnType'),
    clickButtonIcon: Ember.computed.or('clickIcon', 'icon')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-link/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Z0LIiMYv",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"btn-group-vertical center-block\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Action Button Controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"click\"]]],null,{\"statements\":[[0,\"  \"],[7,\"button\",true],[10,\"name\",\"button\"],[11,\"class\",[29,[\"btn btn-lg \",[28,\"concat\",[\"btn-\",[24,[\"clickButtonType\"]]],null],\" btn-block md-btn-responsive\"]]],[11,\"click\",[22,\"click\"]],[11,\"disabled\",[22,\"disabled\"]],[10,\"type\",\"button\"],[8],[1,[28,\"fa-icon\",[[24,[\"clickButtonIcon\"]]],null],false],[0,\" \"],[1,[22,\"clickTxt\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"route\"]]],null,{\"statements\":[[0,\"    \"],[4,\"link-to\",null,[[\"class\",\"route\"],[[28,\"concat\",[\"btn btn-lg btn-\",[24,[\"btnType\"]],\" btn-block md-btn-responsive\"],null],[24,[\"route\"]]]],{\"statements\":[[0,\" \"],[1,[28,\"fa-icon\",[[24,[\"icon\"]]],null],false],[0,\" \"],[1,[22,\"text\"],false]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[14,1],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/subbar-link/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-spatial/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    actions: {
      zoomAll() {
        this.zoomAll();
      },
      deleteAllFeatures() {
        this.deleteAllFeatures();
      },
      exportGeoJSON() {
        this.exportGeoJSON();
      },
      uploadData() {
        this.uploadData();
      },
      toList() {
        this.toList();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/control/subbar-spatial/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "v8+XYLRG",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"hr\",true],[8],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"btn-group-vertical center-block\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Geographic Extent Button Controls\"],[8],[0,\"\\n\"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-success btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"zoomAll\"]],[8],[0,\"\\n  \"],[1,[28,\"fa-icon\",[\"search\"],null],false],[0,\" Zoom All\"],[9],[0,\"\\n\"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-warning btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"uploadData\"]],[8],[1,[28,\"fa-icon\",[\"upload\"],null],false],[0,\" Import Features\"],[9],[0,\"\\n\"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-info btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"exportGeoJSON\"]],[8],[1,[28,\"fa-icon\",[\"download\"],null],false],[0,\" Export Features\"],[9],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-lg btn-danger btn-block md-btn-responsive\",[28,\"action\",[[23,0,[]],\"deleteAllFeatures\"],null]]],{\"statements\":[[0,\" \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete All\"]],\"parameters\":[]},null],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"hr\",true],[8],[9],[0,\"\\n\"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-primary btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"toList\"]],[8],[0,\"\\n  \"],[1,[28,\"fa-icon\",[\"list\"],null],false],[0,\" Back to List\\n\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/control/subbar-spatial/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/ember-tooltip/component", ["exports", "ember-tooltips/components/ember-tooltip"], function (_exports, _emberTooltip) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _emberTooltip.default.extend({
    popperContainer: 'body'
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-boolean/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNameBindings: ['label:form-group', 'required'],
    attributeBindings: ['data-spy'],
    /**
     * Input, edit, display a boolean value
     *
     * @class md-boolean
     * @constructor
     */

    /**
     * Value of the input.
     * The edited value is returned
     *
     * @property value
     * @type Boolean
     * @default false
     */
    value: false,
    /**
     * Text to display next to the checkbox
     *
     * @property text
     * @type String
     */

    /**
     * The form label to display
     *
     * @property label
     * @type String
     * @default null
     */
    label: null,
    /**
     * Text displayed in empty inputs
     *
     * @property showInfoText
     * @type String
     * @default null
     */
    showInfoText: null,
    /**
     * Whether to show the infotip
     *
     * @property infotip
     * @type Boolean
     * @default false
     */
    infotip: false,
    /**
     * Determines whether infotip is rendered
     *
     * @property showInfotip
     * @type {Boolean}
     * @default "false"
     * @readOnly
     * @category computed
     * @requires showInfoText,infotip
     */
    showInfotip: Ember.computed.and('showInfoText', 'infotip')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-boolean/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "4KMLB4ux",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[0,\"  \"],[7,\"label\",true],[8],[1,[22,\"label\"],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"showInfotip\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"control/md-infotip\",null,[[\"text\"],[[24,[\"placeholder\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[7,\"div\",true],[10,\"class\",\"checkbox md-boolean\"],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"value\"]]]]],false],[0,\"\\n    \"],[7,\"span\",true],[10,\"class\",\"md-boolean-text\"],[8],[1,[22,\"text\"],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-boolean/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-codelist-multi/component", ["exports", "mdeditor/pods/components/input/md-codelist/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    classNames: ['md-codelist-multi'],
    /**
     * Specialized select list control for displaying and selecting options in
     * mdCodes codelists. Extends md-codelist. Allows selection of multiple
     * options.
     *
     * ```handlebars
     * \{{input/md-codelist-multi
     *   value=array
     *   create=true
     *   tooltip=true
     *   icon=false
     *   mdCodeName="codeName"
     *   closeOnSelect=false
     *   placeholder="Select or enter one or more"
     * }}
     * ```
     *
     * @class md-codelist-multi
     * @constructor
     * @extends md-codelist
     */

    /**
     * Initial value, returned value.
     * Accepts an Array of strings.
     *
     * Example: `["foo","bar"]`
     *
     * @property value
     * @type Array
     * @return Array
     * @required
     */

    /**
     * The multiple property for power-select-with-create
     *
     * @property multiple
     * @private
     * @type Boolean
     * @default true
     */
    multiple: true,
    /**
     * The component to render
     *
     * @property theComponent
     * @type Ember.computed
     * @return String
     */
    theComponent: Ember.computed('create', function () {
      return this.create ? 'power-select-multiple-with-create' : 'power-select-multiple';
    }),
    /**
     * Whether to close the selection list after a selection has been made.
     *
     * @property closeOnSelect
     * @type Boolean
     * @default false
     */
    closeOnSelect: false,
    /**
     * The string to display when no option is selected.
     *
     * @property placeholder
     * @type String
     * @default 'Select one or more options'
     */
    placeholder: 'Select one or more options',
    /**
     * The currently selected item in the codelist
     *
     * @property selectedItem
     * @type Ember.computed
     * @return PromiseObject
     */
    selectedItem: Ember.computed('value', function () {
      let value = this.value;
      let codelist = this.codelist;
      if (value) {
        return codelist.filter(item => {
          return value.includes(item['codeId']);
        });
      }
      return null;
    }),
    /**
     * If a value is provided by the user which is not in the codelist and 'create=true'
     * the new value will be added into the codelist array
     *
     * @property codelist
     * @type Ember.computed
     * @return Array
     */
    codelist: Ember.computed('value', 'filterId', 'mapped', function () {
      let codelist = this.mapped;
      let value = this.value;
      let create = this.create;
      let filter = this.filterId;
      if (value) {
        if (create) {
          value.forEach(val => {
            let found = codelist.findBy('codeId', val);
            if (found === undefined) {
              let newObject = this.createCode(val);
              codelist.pushObject(newObject);
            }
          });
        }
      }
      return codelist.rejectBy('codeId', filter);
    }),
    /**
     * Set the value on the select.
     *
     * @method setValue
     * @param {Array|Object} selected The value to set. Generally, an array of
     * selected objects, unless using the create option.
     */
    setValue(selected) {
      let sel;

      //power-select-with-create always sends a single object onCreate
      //we need to add that object to the selectedItem array
      if (this.create && !Ember.isArray(selected)) {
        sel = this.selectedItem.compact();
        sel.pushObject(selected);
      } else {
        sel = selected;
      }
      this.set('value', sel.mapBy('codeId'));
      this.change();
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-codelist/component", ["exports", "mdeditor/pods/components/input/md-select/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * Specialized select list control for displaying and selecting
     * options in mdCodes codelists.
     * Access to codelists is provided by the 'codelist' service.
     * Descriptions of all codes (tooltips) are embedded within the codelists.
     *
     * ```handlebars
     * \{{input/md-codelist
     *   create=true
     *   required=false
     *   tooltip=fasle
     *   icon=false
     *   disabled=false
     *   allowClear=true
     *   showValidations=true
     *   mdCodeName="codeName"
     *   value=value
     *   path="path"
     *   model=model
     *   placeholder="Choose"
     * }}
     * ```
     *
     * @class md-codelist
     * @extends md-select
     * @constructor
     */

    init() {
      this._super(...arguments);

      //define cp using a dynamic dependent property
      Ember.defineProperty(this, 'mdCodelist', Ember.computed("mdCodes.".concat(this.mdCodeName, ".codelist.[]"), function () {
        return this.mdCodes.get(this.mdCodeName).codelist
        //.uniqBy(codeName)
        .sortBy(this.namePath);
      }));
    },
    classNames: ['md-codelist'],
    layoutName: 'components/input/md-select',
    /**
     * The name of the mdCodes's codelist to use
     *
     * @property mdCodeName
     * @type String
     * @required
     */

    /**
     * Name of the attribute in the objectArray to be used for the
     * select list's option value.
     *
     * @property valuePath
     * @type String
     * @default codeName
     * @required
     */
    valuePath: 'codeName',
    /**
     * Name of the attribute in the objectArray to be used for the
     * select list's option name or display text.
     *
     * @property namePath
     * @type String
     * @default codename
     * @required
     */
    namePath: 'codeName',
    /**
     * Name of the attribute in the objectArray to be used for the
     * select list's tooltip.  If null, no tooltip will be
     * generated.
     *
     * @property tooltipPath
     * @type String
     * @default null
     */
    tooltipPath: 'description',
    /**
     * Initial value, returned value.
     *
     * @property value
     * @type String
     * @return String
     * @required
     */

    /**
     * Whether to render a button to clear the selection.
     *
     * @property allowClear
     * @type Boolean
     * @default true
     */
    allowClear: true,
    /**
     * The string to display when no option is selected.
     *
     * @property placeholder
     * @type String
     * @default 'Select one option'
     */
    placeholder: "Select one option",
    /**
     * Form label for select list
     *
     * @property label
     * @type String
     * @default null
     */
    label: null,
    mdCodes: Ember.inject.service('codelist'),
    /*
     * The currently selected item in the codelist
     *
     * @property selectedItem
     * @type Ember.computed
     * @return PromiseObject
     */
    selectedItem: Ember.computed('value', function () {
      let value = this.value;
      return this.codelist.find(item => {
        return item['codeId'] === value;
      });
    }),
    // mdCodelist: computed('mdCodeName', function() {
    //   return this.mdCodes
    //     .get(this.mdCodeName)
    //     .codelist
    //     //.uniqBy(codeName)
    //     .sortBy(this.namePath);
    // }),

    /**
     * mapped is a re-mapped array of code objects.
     * The initial codelist for 'mdCodeName' is provided by the 'codelist' service.
     *
     * @property mapped
     * @type {Array}
     * @category computed
     * @requires mdCodeName
     */
    mapped: Ember.computed('mdCodelist.[]', function () {
      let codeId = this.valuePath;
      let codeName = this.namePath;
      let tooltip = this.tooltipPath;
      let codelist = [];
      let icons = this.icons;
      let defaultIcon = this.defaultIcon;
      // const mdCodes = this.mdCodes;

      this.mdCodelist.forEach(item => {
        let newObject = {
          codeId: item[codeId],
          codeName: this.mdCodes.get("codeOverrides.".concat(this.mdCodeName, ".").concat(item[codeName])) || item[codeName],
          tooltip: item[tooltip],
          icon: icons.get(item[codeName]) || icons.get(defaultIcon)
        };
        codelist.pushObject(newObject);
      });
      return codelist;
    }),
    /**
     * If a value is provided by the user which is not in the codelist and 'create=true'
     * the new value will be added into the codelist array
     *
     * @property codelist
     * @type {Array}
     * @category computed
     * @requires value
     */
    codelist: Ember.computed('value', 'filterId', 'mapped', function () {
      let codelist = this.mapped;
      let value = this.value;
      let create = this.create;
      let filter = this.filterId;
      if (value) {
        if (create) {
          let found = codelist.findBy('codeId', value);
          if (found === undefined) {
            let newObject = this.createCode(value);
            codelist.pushObject(newObject);
          }
        }
      }
      return codelist.rejectBy('codeId', filter);
    }),
    /**
     * Creates a new codelist entry with a randomly generated code identifier.
     *
     * @method createCode
     * @param  {String} code The codeName
     * @return {Object}      Returns a new codelist object
     */
    createCode(code) {
      return {
        codeId: code,
        codeName: code,
        description: 'Undefined'
      };
    },
    /**
     * Set the value on the select.
     *
     * @method setValue
     * @param {Object} selected The object with the value(codeName) to set.
     */
    /*setValue(selected) {
      let valuePath = this.get('valuePath');
      let namePath = this.get('namePath');
       if(selected) {
        this.get('codelist')
      }
      let val = selected ? selected.codeName : null;
      this.set('value', val);
      this.change();
    },*/

    actions: {
      // do the binding to value
      setValue: function setValue(selected) {
        this.setValue(selected);
      },
      //handle the create
      create(selected) {
        let code = this.createCode(selected);
        this.setValue(code);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-date-range/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  //import moment from 'moment';

  const Validations = (0, _emberCpValidations.buildValidations)({
    'start': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      disabled: Ember.computed.notEmpty('model.end'),
      ignoreBlank: true
    })],
    'end': [(0, _emberCpValidations.validator)('date', {
      onOrAfter: Ember.computed.alias('model.start'),
      isWarning: true
    }), (0, _emberCpValidations.validator)('presence', {
      presence: true,
      disabled: Ember.computed.notEmpty('model.start'),
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    /**
     * Date range with start date and end date fields.
     *
     * ```handlebars
     * \{{input/md-date-range
     *   startDateTime
     *   endDateTime=false
     * }}
     * ```
     *
     * @class md-date-range
     * @extends Ember.Component
     * @constructor
     */

    classNameBindings: ['formInline'],
    /**
     * If true, render the fields inline
     *
     * @property startDateTime
     * @type {Boolean}
     * @default true
     */
    formInline: true,
    /**
     * The value for the start datetime
     *
     * @property startDateTime
     * @type {String|Date|moment}
     * @default moment().hour(0).second(0).minute(0)
     * @required
     */
    //startDateTime: moment().hour(0).second(0).minute(0),

    /**
     * The value for the end datetime
     *
     * @property endDateTime
     * @type {String|Date|moment}
     * @default moment().hour(0).second(0).minute(0)
     * @required
     */
    //  endDateTime: moment().hour(0).second(0).minute(0)
    start: Ember.computed('startDateTime', {
      get() {
        let dt = Ember.get(this, 'startDateTime');
        return dt === undefined ? null : dt;
      },
      set(key, value) {
        Ember.run.once(this, function () {
          Ember.set(this, 'startDateTime', value);
          return value;
        });
      }
    }),
    end: Ember.computed('endDateTime', {
      get() {
        let dt = Ember.get(this, 'endDateTime');
        return dt === undefined ? null : dt;
      },
      set(key, value) {
        Ember.run.once(this, function () {
          Ember.set(this, 'endDateTime', value);
          return value;
        });
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-date-range/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "tTo28DrQ",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"label\",true],[10,\"class\",\"text-info required\"],[8],[0,\"Dates\"],[9],[0,\"\\n\"],[1,[28,\"input/md-datetime\",null,[[\"class\",\"valuePath\",\"model\",\"showValidations\",\"forceDateOutput\",\"label\",\"showClear\",\"format\",\"placeholder\",\"profilePath\"],[\"start\",\"start\",[23,0,[]],true,true,\"Start Date\",true,\"YYYY-MM-DD HH:mm:ss\",\"Enter start dateTime\",[28,\"concat\",[[24,[\"profilePath\"]],\".start\"],null]]]],false],[0,\"\\n\"],[1,[28,\"input/md-datetime\",null,[[\"class\",\"valuePath\",\"model\",\"showValidations\",\"forceDateOutput\",\"showClear\",\"label\",\"format\",\"placeholder\",\"profilePath\"],[\"end\",\"end\",[23,0,[]],true,true,true,\"End Date\",\"YYYY-MM-DD HH:mm:ss\",\"Enter end dateTime\",[28,\"concat\",[[24,[\"profilePath\"]],\".end\"],null]]]],false],[0,\"\\n\"],[1,[28,\"control/md-fiscalyear\",null,[[\"start\",\"end\",\"context\",\"profilePath\"],[\"start\",\"end\",[23,0,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".fiscalyear\"],null]]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-date-range/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-datetime/component", ["exports", "moment"], function (_exports, _moment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Datetime control with dropdown calendar.
     * Based on Bootstrap datetime picker.
     *
     * @class md-datetime
     * @constructor
     */

    init() {
      this._super(...arguments);
      let model = this.model;
      let valuePath = this.valuePath;
      if (Ember.isBlank(model) !== Ember.isBlank(valuePath)) {
        (true && !(false) && Ember.assert("You must supply both model and valuePath to ".concat(this.toString(), " or neither.")));
      }
      if (!Ember.isBlank(model)) {
        if (this.get("model.".concat(valuePath)) === undefined) {
          Ember.debug("model.".concat(valuePath, " is undefined in ").concat(this.toString(), "."));
        }
        Ember.defineProperty(this, '_date', Ember.computed("model.".concat(valuePath), {
          get() {
            let val = Ember.get(this, "model.".concat(valuePath));
            return val ? (0, _moment.default)(val, this.get('altFormat' || null)) : null;
          },
          set(key, value) {
            let formatted = this.formatValue(value, "model.".concat(valuePath));
            return formatted;
          }
        }));
        Ember.defineProperty(this, 'validation', Ember.computed.alias("model.validations.attrs.".concat(valuePath)).readOnly());
        Ember.defineProperty(this, 'required', Ember.computed('validation.options.presence.{presence,disabled}', function () {
          return this.get('validation.options.presence.presence') && !this.get('validation.options.presence.disabled');
        }).readOnly());
        Ember.defineProperty(this, 'notValidating', Ember.computed.not('validation.isValidating').readOnly());
        Ember.defineProperty(this, 'hasContent', Ember.computed.notEmpty('date').readOnly());
        Ember.defineProperty(this, 'hasWarnings', Ember.computed.notEmpty('validation.warnings').readOnly());
        Ember.defineProperty(this, 'isValid', Ember.computed.and('hasContent', 'validation.isTruelyValid').readOnly());
        Ember.defineProperty(this, 'shouldDisplayValidations', Ember.computed.or('showValidations', 'didValidate', 'hasContent').readOnly());
        Ember.defineProperty(this, 'showErrorClass', Ember.computed.and('notValidating', 'showErrorMessage', 'hasContent', 'validation').readOnly());
        Ember.defineProperty(this, 'showErrorMessage', Ember.computed.and('shouldDisplayValidations', 'validation.isInvalid').readOnly());
        Ember.defineProperty(this, 'showWarningMessage', Ember.computed.and('shouldDisplayValidations', 'hasWarnings', 'isValid').readOnly());
      } else {
        Ember.defineProperty(this, '_date', Ember.computed('date', {
          get() {
            let val = this.date;
            return val ? (0, _moment.default)(val, this.get('altFormat' || null)) : null;
          },
          set(key, value) {
            let formatted = this.formatValue(value, 'date');
            return formatted;
          }
        }));
      }
    },
    classNames: ['md-datetime', 'md-input-input'],
    classNameBindings: ['label:form-group', 'required'],
    /**
     * Datetime string passed in, edited, and returned.
     *
     * @property date
     * @type String
     * @default null
     * @return String
     */
    date: null,
    /**
     * Format of date string for property 'date'.
     *
     * @property format
     * @type String
     * @default 'YYYY-MM-DD'
     */
    format: 'YYYY-MM-DD',
    /**
     * The string to display when no datetime is selected.
     *
     * @property placeholder
     * @type String
     * @default 'Enter date or datetime'
     */
    placeholder: "Enter date or datetime",
    /**
     * Form label for datetime input.
     *
     * @property label
     * @type String
     * @default null
     */
    label: null,
    /**
     * On show, will set the picker to the current date/time
     *
     * @property useCurrent
     * @type Boolean
     * @default 'day'
     */
    useCurrent: 'day',
    /**
     * Show the Today button in the icon toolbar.
     *
     * @property showTodayButton
     * @type Boolean
     * @default true
     */
    showTodayButton: true,
    /**
     * Show the clear button in the icon toolbar.
     *
     * @property showClear
     * @type Boolean
     * @default true
     */
    showClear: true,
    formatValue(value, target) {
      if (Ember.isBlank(value)) {
        Ember.run.once(this, function () {
          Ember.set(this, target, null);
        });
        return value;
      }
      let mom = (0, _moment.default)(value);
      if (this.altFormat) {
        let alt = mom.format(this.altFormat);
        Ember.run.once(this, function () {
          Ember.set(this, target, alt);
        });
        return alt;
      }
      //utc.add(utc.utcOffset(), 'minutes');

      if (mom && mom.toISOString() !== this.get(target)) {
        Ember.run.once(this, function () {
          Ember.set(this, target, mom.toISOString());
        });
      }
      return mom;
    },
    /**
     * Icons to be used by the datetime picker and calendar.
     * Icons can be set for time, date, up, down, previous, next, clear,
     * and close.
     * The default icons are chosen from Font Awesome icons
     *
     * @property calendarIcons
     * @type Object
     * @default 'calendarIcons'
     */
    calendarIcons: Ember.computed(function () {
      return {
        time: "fa fa-clock-o",
        date: "fa fa-calendar",
        up: "fa fa-chevron-up",
        down: "fa fa-chevron-down",
        previous: "fa fa-angle-double-left",
        next: "fa fa-angle-double-right",
        close: "fa fa-times",
        clear: "fa fa-trash"
      };
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-datetime/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "VufmyIhj",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[0,\"  \"],[7,\"label\",true],[8],[1,[22,\"label\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[7,\"div\",true],[10,\"class\",\"md-input-input\"],[8],[0,\"\\n  \"],[1,[28,\"bs-datetimepicker\",null,[[\"date\",\"format\",\"extraFormats\",\"dateIcon\",\"icons\",\"placeholder\",\"showClear\",\"useCurrent\",\"textFieldRequired\",\"showTodayButton\",\"change\"],[[24,[\"_date\"]],[24,[\"format\"]],[24,[\"extraFormats\"]],\"fa fa-calendar\",[24,[\"calendarIcons\"]],[24,[\"placeholder\"]],[24,[\"showClear\"]],[24,[\"useCurrent\"]],[24,[\"required\"]],[24,[\"showTodayButton\"]],[24,[\"change\"]]]]],false],[0,\"\\n  \"],[7,\"span\",true],[10,\"class\",\"md-inputgroup-error\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showErrorMessage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"span\",true],[10,\"class\",\"md-error\"],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"exclamation-circle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip danger\"]],{\"statements\":[[0,\"            \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"valuePath\"]]],null],\"message\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showWarningMessage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"span\",true],[10,\"class\",\"md-warning\"],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip warning\"]],{\"statements\":[[0,\"        \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"valuePath\"]]],null],\"warningMessage\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-datetime/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-input-confirm/component", ["exports", "mdeditor/pods/components/input/md-input/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * Input, edit, display a single item
     *
     * @class md-input-confirm
     * @extends md-input
     * @constructor
     */

    classNameBindings: ['required'],
    disabled: true,
    isDisabled: Ember.computed('disabled', function () {
      return this.disabled;
    }),
    actions: {
      allowEdit() {
        this.set('disabled', false);
        this.element.querySelector('input').focus();
      },
      inputBlur() {
        this.set('disabled', true);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-input-confirm/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "6ffs/CnW",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[7,\"label\",true],[8],[1,[22,\"label\"],false],[9]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[11,\"class\",[28,\"if\",[[24,[\"disabled\"]],\"input-group\"],null]],[8],[0,\"\\n\\n\"],[1,[28,\"input\",null,[[\"value\",\"placeholder\",\"required\",\"type\",\"maxlength\",\"class\",\"disabled\",\"blur\"],[[24,[\"value\"]],[24,[\"placeholder\"]],[24,[\"required\"]],[24,[\"type\"]],[24,[\"maxlength\"]],[24,[\"inputClass\"]],[24,[\"isDisabled\"]],[28,\"action\",[[23,0,[]],\"inputBlur\"],null]]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"disabled\"]]],null,{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"input-group-btn\"],[8],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-warning\",[28,\"action\",[[23,0,[]],\"allowEdit\"],null]]],{\"statements\":[[0,\"            \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit\\n\"],[4,\"if\",[[24,[\"confirmTip\"]]],null,{\"statements\":[[4,\"ember-tooltip\",null,null,{\"statements\":[[0,\"                \"],[1,[22,\"confirmTip\"],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-input-confirm/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-input/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Input, edit, display a single item
     *
     * ```handlebars
     * \{{input/md-input
     *    value=val
     *    model=null
     *    valuePath=null
     *    label="Name"
     *    placeholder="Enter name."
     *    infotip=true
     *    required=false
     *  }}
     * ```
     *
     * @class md-input
     * @constructor
     */

    init() {
      this._super(...arguments);
      let model = this.model;
      let valuePath = this.valuePath;
      if (Ember.isBlank(model) !== Ember.isBlank(valuePath)) {
        (true && !(false) && Ember.assert("You must supply both model and valuePath to ".concat(this.toString(), " or neither.")));
      }
      if (!Ember.isBlank(model)) {
        if (this.get("model.".concat(valuePath)) === undefined) {
          Ember.debug("model.".concat(valuePath, " is undefined in ").concat(this.toString(), "."));

          //Ember.run.once(()=>model.set(valuePath, ""));
        }

        if (this.type === 'number') {
          let attribute = "model.".concat(valuePath);
          Ember.defineProperty(this, 'value', Ember.computed(attribute, {
            get() {
              let val = this.get(attribute);
              return val ? val.toString() : '';
            },
            set(key, value) {
              let parse = this.step ? parseFloat : parseInt;
              this.set(attribute, parse(value, 10));
              return value;
            }
          }));
        } else {
          Ember.defineProperty(this, 'value', Ember.computed.alias("model.".concat(valuePath)));
        }
        Ember.defineProperty(this, 'validation', Ember.computed.alias("model.validations.attrs.".concat(valuePath)).readOnly());
        Ember.defineProperty(this, 'required', Ember.computed('validation.options.presence{presence,disabled}', 'disabled', function () {
          return !this.disabled && this.get('validation.options.presence.presence') && !this.get('validation.options.presence.disabled');
        }).readOnly());
        Ember.defineProperty(this, 'notValidating', Ember.computed.not('validation.isValidating').readOnly());
        Ember.defineProperty(this, 'hasContent', Ember.computed.notEmpty('value').readOnly());
        Ember.defineProperty(this, 'hasWarnings', Ember.computed.notEmpty('validation.warnings').readOnly());
        Ember.defineProperty(this, 'isValid', Ember.computed.and('hasContent', 'validation.isTruelyValid').readOnly());
        Ember.defineProperty(this, 'shouldDisplayValidations', Ember.computed.or('showValidations', 'didValidate', 'hasContent').readOnly());
        Ember.defineProperty(this, 'showErrorClass', Ember.computed.and('notValidating', 'showErrorMessage', 'hasContent', 'validation').readOnly());
        Ember.defineProperty(this, 'showErrorMessage', Ember.computed.and('shouldDisplayValidations', 'validation.isInvalid').readOnly());
        Ember.defineProperty(this, 'showWarningMessage', Ember.computed.and('shouldDisplayValidations', 'hasWarnings', 'isValid').readOnly());
      }
    },
    classNames: ['md-input'],
    classNameBindings: ['label:form-group', 'required'],
    attributeBindings: ['data-spy'],
    /**
     * Value of the input.
     * Value sets the initial value and returns the edited result.
     * This property is overridden if valuePath and model are supplied.
     *
     * @property value
     * @type String
     * @required
     */

    /**
     * Type of data represented by the value string.
     * HTML5 types may be specified ('text', 'number', etc.)
     *
     * @property type
     * @type String
     * @default text
     */
    type: 'text',
    /**
     * The form label to display
     *
     * @property label
     * @type String
     * @default null
     */
    label: null,
    /**
     * Whether a value is required
     *
     * @property required
     * @type Boolean
     * @default false
     */
    required: false,
    /**
     * Whether a input is disabled
     *
     * @property disabled
     * @type Boolean
     * @default false
     */
    disabled: false,
    /**
     * Maximum number of characters for each input string.
     * If no maxlength is specified the length will not be restricted
     *
     * @property maxlength
     * @type Number
     * @default null
     */
    maxlength: null,
    /**
     * Text displayed in empty inputs
     *
     * @property placeholder
     * @type String
     * @default null
     */
    placeholder: null,
    /**
     * CSS class to set on the input control
     *
     * @property class
     * @type String
     * @default 'form-control'
     */
    inputClass: 'form-control',
    /**
     * The model or object containing the input value. Only needed for validation.
     *
     * @property model
     * @type {Object}
     * @default undefined
     * @readOnly
     */

    /**
     * The path of the input value. Only needed for validation.
     *
     * @property valuePath
     * @type {String}
     * @default ''
     * @readOnly
     */
    valuePath: '',
    /**
     * Whether to show the infotip
     *
     * @property infotip
     * @type {Boolean}
     * @default false
     */
    infotip: false,
    /**
     * Determines whether infotip is rendered
     *
     * @property showInfoTip
     * @type {Boolean}
     * @default "false"
     * @readOnly
     * @category computed
     * @requires placeholder, infotip
     */
    showInfoTip: Ember.computed.and('placeholder', 'infotip')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-input/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "pz/MJhTG",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[0,\"  \"],[7,\"label\",true],[8],[0,\"\\n    \"],[1,[22,\"label\"],false],[0,\"\\n\"],[0,\"  \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"showInfoTip\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"control/md-infotip\",null,[[\"text\"],[[24,[\"placeholder\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[7,\"div\",true],[10,\"class\",\"md-input-input\"],[8],[0,\"\\n  \"],[1,[28,\"input\",null,[[\"value\",\"placeholder\",\"required\",\"type\",\"step\",\"maxlength\",\"class\",\"disabled\",\"change\"],[[24,[\"value\"]],[24,[\"placeholder\"]],[24,[\"required\"]],[24,[\"type\"]],[24,[\"step\"]],[24,[\"maxlength\"]],[24,[\"inputClass\"]],[24,[\"disabled\"]],[24,[\"change\"]]]]],false],[0,\"\\n\\n  \"],[7,\"span\",true],[10,\"class\",\"md-input-error\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showErrorMessage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"span\",true],[10,\"class\",\"md-error\"],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"exclamation-circle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip danger\"]],{\"statements\":[[0,\"            \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"valuePath\"]]],null],\"message\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showWarningMessage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"span\",true],[10,\"class\",\"md-warning\"],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip warning\"]],{\"statements\":[[0,\"        \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"valuePath\"]]],null],\"warningMessage\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[14,1]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-input/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-markdown-area/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Component for markdown enabled text-area.
     *
     * @class md-markdown-editor
     * @constructor
     * @example
     *   {{md-markdown-editor value=value options=options}}
     */

    /**
     * Fix fullscreen render inside of liquid-outlet..
     *
     * @event didInsertElement
     * @public
     */
    didInsertElement() {
      this._super(...arguments);
      let editor = this.editor;
      let $el = this.$();
      const oldEditorSetOption = editor.codemirror.setOption;
      editor.codemirror.setOption = function (option, value) {
        oldEditorSetOption.apply(this, arguments);
        if (option === 'fullScreen') {
          $el.parents('.liquid-child,.liquid-container, .md-card').toggleClass('full-screen', value);
        }
      };
    },
    /**
     * Make sure the value is not null or undefined, for Simple MDE.
     *
     * @event didReceiveAttrs
     * @public
     */
    didReceiveAttrs() {
      this._super(...arguments);
      Ember.run.once(this, () => {
        if (Ember.isNone(Ember.get(this, 'value'))) {
          Ember.set(this, 'value', '');
        }
      });
    },
    classNames: ['md-markdown-editor'],
    classNameBindings: ['label:form-group', 'required', 'errorClass'],
    attributeBindings: ['data-spy'],
    /**
     * The current simplemde editor instance.
     *
     * @property editor
     * @type {Object}
     * @private
     */

    /**
     * Bound textarea value.
     *
     * @property value
     * @type {String}
     */

    /**
     * If true, the "row" the editor will be initally collapse.
     *
     * @property collapsed
     * @type {Boolean}
     * @default undefined
     */

    /**
     * If true, the collapse control will be added to the label header.
     *
     * @property collapsible
     * @type {Boolean}
     * @default true
     */
    collapsible: true,
    /**
     * Placeholder string.
     *
     * @property placeholder
     * @type {String}
     * @default Enter text, Markdown is supported.
     */
    placeholder: 'Enter text, Markdown is supported.',
    /**
     * Options for markdown editor
     *
     * @property options
     * @type {Object}
     * @category computed
     * @requires placeholder
     */
    options: Ember.computed('placeholder', function () {
      return {
        placeholder: Ember.get(this, 'placeholder'),
        status: [{
          className: 'length',
          defaultValue: el => {
            el.innerHTML = "<span class=\"length md-".concat(Ember.get(this, 'errorClass'), "\">length: ").concat(Ember.get(this, 'length'), "</span>");
          },
          onUpdate: el => {
            el.innerHTML = "<span class=\"length md-".concat(Ember.get(this, 'errorClass'), "\">length: ").concat(Ember.get(this, 'length'), "</span>");
          }
        }, 'lines', 'words', 'cursor']
      };
    }),
    // fullscreen: Ember.observer('editor.codemirror.options.fullScreen', function(){
    //   console.info(this.get('editor.codemirror.options.fullScreen'));
    // }),

    /**
     * Returns the length of hte value string, 0 if falsy.
     *
     * @property length
     * @type {Number}
     * @category computed
     * @requires value
     */
    length: Ember.computed('value', function () {
      return Ember.get(this, 'value') ? Ember.get(this, 'value').length : 0;
    }).readOnly(),
    /**
     * Returns string indicating error or warning based on maxlength.
     *
     * @property errorClass
     * @type {String}
     * @category computed
     * @requires value|maxlength
     */
    errorClass: Ember.computed('value', 'maxlength', function () {
      let length = Ember.get(this, 'length');
      let max = Ember.get(this, 'maxlength');
      if (Ember.get(this, 'required') && length < 1) {
        return 'error';
      }
      if (!max || length <= max - 25) {
        return '';
      }
      if (length > max) {
        return 'error';
      } else if (length + 25 > max) {
        return 'warning';
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-markdown-area/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "YjZZCwaM",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[0,\"    \"],[7,\"label\",true],[10,\"class\",\"md-card-chevron\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"collapsible\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",true],[10,\"role\",\"button\"],[10,\"data-toggle\",\"collapse\"],[11,\"href\",[29,[\"#\",[28,\"concat\",[\"md-\",[24,[\"elementId\"]]],null]]]],[11,\"aria-expanded\",[28,\"if\",[[24,[\"collapsed\"]],\"false\",\"true\"],null]],[11,\"class\",[28,\"if\",[[24,[\"collapsed\"]],\"collapsed\"],null]],[11,\"aria-controls\",[28,\"concat\",[\"md-\",[24,[\"elementId\"]]],null]],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\"\\n        \"],[1,[22,\"label\"],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[22,\"label\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[7,\"div\",true],[11,\"id\",[28,\"concat\",[\"md-\",[24,[\"elementId\"]]],null]],[11,\"class\",[28,\"if\",[[24,[\"collapsed\"]],\"collapse\",\"in\"],null]],[8],[0,\"\\n  \"],[1,[28,\"simple-mde\",null,[[\"value\",\"options\",\"maxlength\",\"spellcheck\",\"disabled\",\"change\",\"currentEditor\"],[[24,[\"value\"]],[24,[\"options\"]],[24,[\"maxlength\"]],true,[24,[\"disabled\"]],[28,\"if\",[[24,[\"change\"]],[24,[\"change\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"value\"]]],null]],null]],null],[24,[\"editor\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-markdown-area/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-month/component", ["exports", "mdeditor/pods/components/input/md-datetime/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    layoutName: 'components/input/md-datetime',
    format: 'MMMM',
    extraFormats: Ember.computed(function () {
      return ['MM', 'M', 'MMM'];
    }),
    showClear: false,
    useCurrent: false,
    showTodayButton: false
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select-contact/component", ["exports", "mdeditor/pods/components/input/md-codelist/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * Specialized select list control for displaying and selecting
     * contacts.
     *
     * @class md-select-contacts
     * @constructor
     * @extends md-select
     */

    /**
     * The contacts service
     *
     * @property contacts
     * @type {Ember.Service}
     * @readOnly
     */
    contacts: Ember.inject.service(),
    /**
     * The default CSS classnames
     *
     * @property classNames
     * @type {Array}
     * @default ['md-select-contact']
     * @readOnly
     */
    classNames: ['md-select-contact'],
    /**
     * The default codelist name. Should not be overridden.
     *
     * @property classNames
     * @protected
     * @type {String}
     * @default 'contacts'
     * @readOnly
     */
    mdCodeName: 'contacts',
    /**
     * The property that holds the select item value. Should not be overridden.
     *
     * @property valuePath
     * @protected
     * @type {String}
     * @default 'valuePath'
     * @readOnly
     */
    valuePath: 'contactId',
    /**
     * The property that holds the select item text. Should not be overridden.
     *
     * @property namePath
     * @protected
     * @type {String}
     * @default 'namePath'
     * @readOnly
     */
    namePath: 'title',
    /**
     * The contact type to display in the list. Choices are `organizations` or
     * `individuals` or 'contacts'. Passing any other value will default to
     * 'contacts'.
     *
     * @property contactType
     * @protected
     * @type {String}
     * @default 'contacts'
     */
    contactType: 'contacts',
    /**
     * The contact list mapped from the store to a codelist.
     *
     * @property mapped
     * @type {Array}
     * @category computed
     * @requires contacts.[]
     */
    mapped: Ember.computed('contacts.mapped.[]', 'contactType', function () {
      let type = this.contactType;
      if (!['individuals', 'organizations'].includes(type)) {
        return this.contacts.get('contactsCodes');
      }
      return this.contacts.get(type + 'Codes');
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select-contacts/component", ["exports", "mdeditor/pods/components/input/md-codelist-multi/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * Specialized select list control for displaying and selecting
     * contacts.
     *
     * @class md-select-contacts
     * @constructor
     * @extends md-select
     */

    /**
     * The contacts service
     *
     * @property contacts
     * @type {Ember.Service}
     * @readOnly
     */
    contacts: Ember.inject.service(),
    /**
     * The default CSS classnames
     *
     * @property classNames
     * @type {Array}
     * @default ['md-select-organization']
     * @readOnly
     */
    classNames: ['md-select-contact'],
    /**
     * The default codelist name. Should not be overridden.
     *
     * @property classNames
     * @protected
     * @type {String}
     * @default 'contacts'
     * @readOnly
     */
    mdCodeName: 'contacts',
    /**
     * The property that holds the select item value. Should not be overridden.
     *
     * @property valuePath
     * @protected
     * @type {String}
     * @default 'valuePath'
     * @readOnly
     */
    valuePath: 'contactId',
    /**
     * The property that holds the select item text. Should not be overridden.
     *
     * @property namePath
     * @protected
     * @type {String}
     * @default 'namePath'
     * @readOnly
     */
    namePath: 'title',
    /**
     * The contact type to display in the list. Choices are `organizations` or
     * `individuals` or 'contacts'. Passing any other value will default to
     * 'contacts'.
     *
     * @property contactType
     * @protected
     * @type {String}
     * @default 'contacts'
     */
    contactType: 'contacts',
    /**
     * The contact list mapped from the store to a codelist.
     *
     * @property mapped
     * @type {Array}
     * @category computed
     * @requires contacts.[]
     */
    mapped: Ember.computed('contacts.mapped.[]', 'contactType', function () {
      let type = this.contactType;
      if (!['individuals', 'organizations'].includes(type)) {
        return this.contacts.get('contactsCodes');
      }
      return this.contacts.get(type + 'Codes');
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select-profile/component", ["exports", "ember-basic-dropdown/utils/calculate-position"], function (_exports, _calculatePosition) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
    * Input that displays available record profiles.
    *
    * @module mdeditor
    * @submodule components-input
    * @class input/md-select-profile
    * @constructor
    */
    profile: Ember.inject.service('custom-profile'),
    /**
     * Update the record profile
     *
     * @method   action.updateProfile
     * @param  {String} profile The new profile.
     */
    updateProfile(profile) {
      this.profile.set('active', profile);
      this.record.save();
    },
    /**
    * Calculate the width of the input.
    *
    * @method calculatePosition
    * @private
    * @return {String}
    */
    calculatePosition() {
      let originalValue = (0, _calculatePosition.default)(...arguments);
      originalValue.style['min-width'] = originalValue.style.width + 'px';
      originalValue.style.width = 'auto';
      originalValue.style['max-width'] = '250px';
      return originalValue;
    },
    actions: {
      /**
       * Update the record profile
       *
       * @method   action.updateProfile
       * @param  {String} profile The new profile.
       */
      updateProfile(profile) {
        this.updateProfile(profile);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select-profile/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "mCClHfti",
    "block": "{\"symbols\":[],\"statements\":[[7,\"form\",true],[10,\"class\",\"navbar-form form-inline\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group-sm\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"navbar-text control-label\"],[8],[0,\"Profile\"],[9],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"change\",\"class\",\"create\",\"tooltip\",\"icon\",\"allowClear\",\"mdCodeName\",\"valuePath\",\"value\",\"placeholder\",\"searchEnabled\",\"matchTriggerWidth\",\"calculatePosition\",\"label\"],[[28,\"action\",[[23,0,[]],\"updateProfile\",[24,[\"value\"]]],null],\"select-profile\",false,true,true,false,\"profile\",\"code\",[24,[\"value\"]],\"Choose profile\",false,true,[24,[\"calculatePosition\"]],false]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-select-profile/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select-thesaurus/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * A select list control for displaying and selecting thesaurus entries from
     * the keyword service.
     *
     * @class md-select-thesaurus
     * @constructor
     */

    keyword: Ember.inject.service(),
    /**
     * This method is called after the thesaurus selection is updated. It should be
     * overridden.
     *
     * @method selectThesaurus
     * @param  {Object} selected  The selected thesaurus from the keyword service
     * @param  {Object} thesaurus The thesaurus for the keyword record
     */
    selectThesaurus() {},
    thesaurusList: Ember.computed('keyword.thesaurus.[]', function () {
      let list = this.keyword.thesaurus.map(k => {
        return Ember.Object.create({
          id: k.citation.identifier[0].identifier,
          label: k.label || k.citation.title || 'Keywords'
        });
      });
      list.unshift(Ember.Object.create({
        id: 'custom',
        label: 'Custom Thesaurus'
      }));
      return list;
    }),
    actions: {
      update(id, thesaurus) {
        let selected = this.keyword.findById(id);
        this.selectThesaurus(selected, thesaurus);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select-thesaurus/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Rr7PKlPy",
    "block": "{\"symbols\":[],\"statements\":[[0,\" \"],[1,[28,\"input/md-select\",null,[[\"placeholder\",\"disabled\",\"objectArray\",\"valuePath\",\"namePath\",\"value\",\"change\"],[\"Pick a thesaurus\",[24,[\"disabled\"]],[24,[\"thesaurusList\"]],\"id\",\"label\",[24,[\"value\"]],[28,\"action\",[[23,0,[]],\"update\",[24,[\"value\"]],[24,[\"thesaurus\"]]],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-select-thesaurus/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select/component", ["exports", "ember-data"], function (_exports, _emberData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * A select list control for displaying and selecting options
     * provided in an array or promise array.
     *
     * ```handlebars
     * \{{input/md-select
     *  label="Measure Type"
     *  showValidations=true
     *  model=this
     *  path="measureType"
     *  valuePath="value"
     *  namePath="name"
     *  objectArray=typeOptions
     *  tooltip=true
     *  tooltipPath="tip"
     *  searchEnabled=false
     *  disabled=measureDisabled
     *  placeholder="The type of measurement."
     *  profilePath=(concat profilePath ".measure.type")
     * }}
     * ```
     *
     * @class md-select
     * @constructor
     */

    init() {
      this._super(...arguments);
      let model = this.model;
      let path = this.path;
      if (Ember.isNone(model) !== Ember.isNone(path)) {
        (true && !(false) && Ember.assert("You must supply both model and path to ".concat(this.toString(), " or neither.")));
      }
      if (!Ember.isBlank(model)) {
        if (this.get("model.".concat(path)) === undefined) {
          Ember.debug("model.".concat(path, " is undefined in ").concat(this.toString(), "."));
          //Ember.run.once(()=>model.set(path, ""));
        }

        Ember.defineProperty(this, 'value', Ember.computed.alias("model.".concat(path)));
        Ember.defineProperty(this, 'validation', Ember.computed.alias("model.validations.attrs.".concat(path)).readOnly());
        Ember.defineProperty(this, 'required', Ember.computed('validation.options.presence.{presence,disabled}', 'disabled', function () {
          return !this.disabled && this.get('validation.options.presence.presence') && !this.get('validation.options.presence.disabled');
        }).readOnly());
        Ember.defineProperty(this, 'notValidating', Ember.computed.not('validation.isValidating').readOnly());
        Ember.defineProperty(this, 'hasContent', Ember.computed.notEmpty('value').readOnly());
        Ember.defineProperty(this, 'hasWarnings', Ember.computed.notEmpty('validation.warnings').readOnly());
        Ember.defineProperty(this, 'isValid', Ember.computed.and('hasContent', 'validation.isTruelyValid').readOnly());
        Ember.defineProperty(this, 'shouldDisplayValidations', Ember.computed.or('showValidations', 'didValidate', 'hasContent').readOnly());
        Ember.defineProperty(this, 'showErrorClass', Ember.computed.and('notValidating', 'showErrorMessage', 'hasContent', 'validation').readOnly());
        Ember.defineProperty(this, 'showErrorMessage', Ember.computed.and('shouldDisplayValidations', 'validation.isInvalid').readOnly());
        Ember.defineProperty(this, 'showWarningMessage', Ember.computed.and('shouldDisplayValidations', 'hasWarnings', 'isValid').readOnly());
      }
    },
    classNames: ['md-select'],
    classNameBindings: ['formGroup', 'required'],
    attributeBindings: ['data-spy'],
    formGroup: Ember.computed.notEmpty('label'),
    icons: Ember.inject.service('icon'),
    /**
     * An array or promise array containing the options for the
     * select list.
     * At a minimum the array elements should provide attributes for the
     * name value pairs displayed as select list options.
     * Tooltips may also be included.
     * Other attributes in the array elements will be ignored.
     *
     * ```javascript
     * {
     *   name: 'displayed',
     *   value: 'option',
     *   type: 'xtra info',
     *   tip: 'tooltip'
     * }
     * ```
     *
     * @property objectArray
     * @type Array
     * @required
     */

    /**
     * The initial value of the select. Type must match the type of the attribute
     * identified by the path option.
     *
     * @property value
     * @type Any
     * @required
     */
    value: null,
    /**
     * Path in the model to be used for the select list's option value. Both
     * `model` and `path` must be supplied together.
     *
     * @property path
     * @type String
     */

    /**
     * The model to be used to compute the value alias, generally used for
     * validations. Both `model` and `path` must be supplied together.
     *
     * @property model
     * @type String
     */

    /**
     * Name of the attribute in the objectArray to be used for the
     * select list's option value.
     *
     * @property valuePath
     * @type String
     * @required
     */

    /**
     * Name of the attribute in the objectArray to be used for the
     * select list's option name or display text.
     *
     * @property namePath
     * @type String
     * @required
     */

    /**
     * Indicates if icons should be rendered.
     *
     * @property icon
     * @type Boolean
     * @default false
     */
    icon: false,
    /**
     * Indicates if value is required.
     *
     * @property required
     * @type Boolean
     * @default false
     */
    required: false,
    /**
     * The default icon.
     *
     * @property defaultIcon
     * @type {String}
     * @default defaultList
     * @required
     */
    defaultIcon: 'defaultList',
    /**
     * Indicates if tooltips should be rendered for the options.
     *
     * @property tooltip
     * @type Boolean
     * @default false
     */
    tooltip: false,
    /**
     * Name of the attribute in the objectArray to be used for the
     * select list's tooltip.  If null, no tooltip will be
     * generated.
     *
     * @property tooltipPath
     * @type String
     * @default null
     */
    tooltipPath: null,
    /**
     * Whether to render a button to clear the selection.
     *
     * @property allowClear
     * @type Boolean
     * @default false
     */
    allowClear: false,
    /**
     * Whether to render the search input.
     *
     * @property searchEnabled
     * @type Boolean
     * @default true
     */
    searchEnabled: true,
    /**
     * Whether to disable the select.
     *
     * @property disabled
     * @type Boolean
     * @default false
     */
    disabled: false,
    /**
     * Whether to close the selection list after a selection has been made.
     *
     * @property closeOnSelect
     * @type Boolean
     * @default true
     */
    closeOnSelect: true,
    /**
     * The string to display when no option is selected.
     *
     * @property placeholder
     * @type String
     * @default 'Select one option'
     */
    placeholder: "Select one option",
    /**
     * Form label for select list
     *
     * @property label
     * @type String
     * @default null
     */
    label: null,
    ariaLabel: Ember.computed('label', function () {
      return this.label;
    }),
    /**
     * Indicates whether to allow the user to enter a new option
     * not contained in the select list.
     *
     * @property create
     * @type Boolean
     * @default false
     */
    create: false,
    /**
     * If set, removes the option with the specified id from the list. By default,
     * it will hide options with a null id.
     *
     * @property filterId
     * @type {String|Number|null}
     * @default null
     * @optional
     */
    filterId: null,
    /**
     * The component to render
     *
     * @property theComponent
     * @type Ember.computed
     * @return String
     */
    theComponent: Ember.computed('create', function () {
      return this.create ? 'power-select-with-create' : 'power-select';
    }),
    /**
     * Callback after value is updated, usually an action is passed.
     *
     * @method change
     */
    change() {},
    /**
     * The currently selected item in the codelist
     *
     * @property selectedItem
     * @type Ember.computed
     * @return PromiseObject
     */
    selectedItem: Ember.computed('value', function () {
      let value = this.value;
      return _emberData.default.PromiseObject.create({
        promise: this.codelist.then(function (arr) {
          return arr.find(item => {
            return item['codeId'] === value;
          });
        })
      });
    }),
    /**
     * codelist is an array of code objects re-mapped from the input 'objectArray'.
     * Values from the input object array are mapped according the path parameters
     * provided.
     *
     * @property codelist
     * @type Ember.computed
     * @return PromiseArray
     */
    codelist: Ember.computed('objectArray', function () {
      const objArray = this.objectArray;
      let inList = new Ember.RSVP.Promise(function (resolve, reject) {
        // succeed
        resolve(objArray);
        // or reject
        reject(new Error('Couldn\'t create a promise.'));
      });
      let codeId = this.valuePath;
      let codeName = this.namePath;
      let tooltip = this.tooltipPath;
      let icons = this.icons;
      let defaultIcon = this.defaultIcon;
      let outList = Ember.A();
      return _emberData.default.PromiseArray.create({
        promise: inList.then(function (arr) {
          arr.forEach(function (item) {
            let newObject = {
              codeId: Ember.get(item, codeId),
              codeName: Ember.get(item, codeName),
              tooltip: false,
              icon: icons.get(item[codeName].toString()) || icons.get(defaultIcon)
            };
            if (tooltip) {
              newObject.tooltip = Ember.get(item, tooltip);
            }
            outList.pushObject(newObject);
          });
          return outList;
        })
      });
    }),
    /**
     * Creates a new codelist entry. The codeId and codeName are both set to the
     * passed value.
     *
     * @method createCode
     * @param  {String} code The code
     * @return {Object}      Returns a new codelist object
     */
    createCode(code) {
      return {
        codeId: code,
        codeName: code,
        tooltip: false
      };
    },
    /**
     * Set the value on the select.
     *
     * @method setValue
     * @param {Object} selected The object with the value(codeName) to set.
     */
    setValue(selected) {
      let val = selected ? selected.codeId : null;
      this.set('value', val);
      this.change();
    },
    actions: {
      // do the binding to value
      setValue(selected) {
        this.setValue(selected);
      },
      create(selected) {
        let code = this.createCode(selected);
        this.codelist.pushObject(code);
        this.setValue(code);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-select/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "m3JikheU",
    "block": "{\"symbols\":[\"code\"],\"statements\":[[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[0,\"      \"],[7,\"label\",true],[8],[1,[22,\"label\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[7,\"div\",true],[10,\"class\",\"md-input-input\"],[8],[0,\"\\n\"],[4,\"component\",[[24,[\"theComponent\"]]],[[\"selected\",\"multiple\",\"options\",\"disabled\",\"placeholder\",\"searchField\",\"searchEnabled\",\"matchTriggerWidth\",\"calculatePosition\",\"allowClear\",\"closeOnSelect\",\"onChange\",\"onCreate\",\"ariaLabel\"],[[24,[\"selectedItem\"]],[24,[\"multiple\"]],[24,[\"codelist\"]],[24,[\"disabled\"]],[24,[\"placeholder\"]],\"codeName\",[24,[\"searchEnabled\"]],[24,[\"matchTriggerWidth\"]],[24,[\"calculatePosition\"]],[24,[\"allowClear\"]],[24,[\"closeOnSelect\"]],[28,\"action\",[[23,0,[]],\"setValue\"],null],[28,\"action\",[[23,0,[]],\"create\"],null],[24,[\"ariaLabel\"]]]],{\"statements\":[[4,\"unless\",[[24,[\"filter\"]]],null,{\"statements\":[[0,\"        \"],[7,\"span\",true],[11,\"class\",[29,[\"md-select-option \",[28,\"if\",[[23,1,[\"tooltip\"]],\"with-tip\"],null]]]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"icon\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"icon\"]]],null,{\"statements\":[[0,\"              \"],[7,\"span\",true],[11,\"class\",[29,[\"fa fa-\",[23,1,[\"icon\"]]]]],[8],[0,\" \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"          \"],[7,\"span\",true],[10,\"class\",\"select-value\"],[8],[1,[23,1,[\"codeName\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"tooltip\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"tooltip\"]]],null,{\"statements\":[[0,\"            \"],[7,\"span\",true],[10,\"class\",\"select-tip\"],[8],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"badge tooltip\"],[8],[0,\"?\\n                \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\"],[[23,1,[\"tooltip\"]],\"right\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null],[0,\"      \"],[7,\"span\",true],[10,\"class\",\"md-input-error\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showErrorMessage\"]]],null,{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"md-error\"],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"exclamation-circle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip danger\"]],{\"statements\":[[0,\"                \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"path\"]]],null],\"message\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showWarningMessage\"]]],null,{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"md-warning\"],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip warning\"]],{\"statements\":[[0,\"            \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"path\"]]],null],\"warningMessage\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-select/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-textarea/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Input, edit, display a multi-line, expandable, text area.
     *
     * @class md-textarea
     * @constructor
     */

    init() {
      this._super(...arguments);
      let model = this.model;
      let valuePath = this.valuePath;
      if (Ember.isBlank(model) !== Ember.isBlank(valuePath)) {
        (true && !(false) && Ember.assert("You must supply both model and valuePath to ".concat(this.toString(), " or neither.")));
      }
      if (!Ember.isBlank(model)) {
        if (this.get("model.".concat(valuePath)) === undefined) {
          Ember.debug("model.".concat(valuePath, " is undefined in ").concat(this.toString(), "."));

          //Ember.run.once(()=>model.set(valuePath, ""));
        }

        Ember.defineProperty(this, 'value', Ember.computed.alias("model.".concat(valuePath)));
        Ember.defineProperty(this, 'validation', Ember.computed.alias("model.validations.attrs.".concat(valuePath)).readOnly());
        Ember.defineProperty(this, 'required', Ember.computed('validation.options.presence{presence,disabled}', 'disabled', function () {
          return !this.disabled && this.get('validation.options.presence.presence') && !this.get('validation.options.presence.disabled');
        }).readOnly());
        Ember.defineProperty(this, 'notValidating', Ember.computed.not('validation.isValidating').readOnly());
        Ember.defineProperty(this, 'hasContent', Ember.computed.notEmpty('value').readOnly());
        Ember.defineProperty(this, 'hasWarnings', Ember.computed.notEmpty('validation.warnings').readOnly());
        Ember.defineProperty(this, 'isValid', Ember.computed.and('hasContent', 'validation.isTruelyValid').readOnly());
        Ember.defineProperty(this, 'shouldDisplayValidations', Ember.computed.or('showValidations', 'didValidate', 'hasContent').readOnly());
        Ember.defineProperty(this, 'showErrorClass', Ember.computed.and('notValidating', 'showErrorMessage', 'hasContent', 'validation').readOnly());
        Ember.defineProperty(this, 'showErrorMessage', Ember.computed.and('shouldDisplayValidations', 'validation.isInvalid').readOnly());
        Ember.defineProperty(this, 'showWarningMessage', Ember.computed.and('shouldDisplayValidations', 'hasWarnings', 'isValid').readOnly());
      }
    },
    attributeBindings: ['data-spy'],
    classNames: ['md-textarea'],
    classNameBindings: ['label:form-group', 'required', 'embedded:md-embedded'],
    /**
     * Initial value, returned value.
     *
     * @property value
     * @type String
     * @return String
     * @required
     */

    /**
     * Form label for textarea
     *
     * @property label
     * @type String
     * @default null
     */
    label: null,
    /**
     * The string to display when no option is selected.
     *
     * @property placeholder
     * @type String
     * @default 'Select one option'
     */
    placeholder: "Select one option",
    /**
     * Indicates whether the value is required
     *
     * @property required
     * @type Boolean
     * @default false
     */
    required: false,
    /**
     * Maximum number of characters allowed.
     * If maxlength is not provided the number of characters will
     * not be restricted.
     *
     * @property maxlength
     * @type Number
     * @default null
     */
    maxlength: null,
    /**
     * Enable auto-resizing of the textarea
     *
     * @property autoresize
     * @type Boolean
     * @default true
     */
    autoresize: true,
    /**
     * Toggle expand state
     *
     * @property isExpanded
     * @type Boolean
     * @default true
     */
    isExpanded: true,
    /**
     * Enable collapse of the textarea
     *
     * @property isCollapsible
     * @type Boolean
     * @default false
     */
    isCollapsible: false,
    /**
     * Set the maximum width of the resizeable element in pixels.
     * If maxwidth is not provided width will not be restricted.
     *
     * @property maxwidth
     * @type Number
     * @default null
     */
    maxwidth: null,
    /**
     * Set the maximum height of the resizable element in pixels.
     * If maxheight is not provided height will not be restricted.
     *
     * @property maxheight
     * @type {Number}
     * @default null
     */
    maxheight: null,
    /**
     * Set the minimum number of rows for the element.
     * Recommended for textareas.
     *
     * @property rows
     * @type Number
     * @default 2
     */
    rows: 2,
    /**
     * Set the maximum number of rows for the element.
     * Recommended for textareas.
     *
     * @property maxrows
     * @type Number
     * @default 10
     */
    maxrows: 10,
    /**
     * Class to set on the textarea
     *
     * @property inputClass
     * @type {string}
     * @default 'form-control'
     */
    inputClass: 'form-control',
    _didInsertArea() {
      this.scheduleMeasurement();
    },
    /**
     * Whether to show the infotip
     *
     * @property infotip
     * @type Boolean
     * @default false
     */
    infotip: false,
    /**
     * Determines whether infotip is rendered
     *
     * @property showInfotip
     * @type {Boolean}
     * @default "false"
     * @readOnly
     * @category computed
     * @requires placeholder,infotip
     */
    showInfotip: Ember.computed.and('placeholder', 'infotip')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-textarea/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "fEpEL+Ns",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"isCollapsible\"]]],null,{\"statements\":[[0,\"    \"],[7,\"label\",false],[12,\"role\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"toggle\",[\"isExpanded\",[23,0,[]]],null]]],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[[28,\"if\",[[24,[\"isExpanded\"]],\"caret-up\",\"caret-down\"],null]],null],false],[0,\"\\n      \"],[1,[22,\"label\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"label\",true],[8],[1,[22,\"label\"],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[24,[\"showInfotip\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"control/md-infotip\",null,[[\"text\"],[[24,[\"placeholder\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"isExpanded\"]]],[[\"enableGrowth\"],[true]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"md-input-input\"],[8],[0,\"\\n  \"],[1,[28,\"textarea\",null,[[\"value\",\"placeholder\",\"required\",\"maxlength\",\"autoresize\",\"didInsertElement\",\"rows\",\"max-rows\",\"max-width\",\"max-height\",\"class\"],[[24,[\"value\"]],[24,[\"placeholder\"]],[24,[\"required\"]],[24,[\"maxlength\"]],[24,[\"autoresize\"]],[24,[\"_didInsertArea\"]],[24,[\"rows\"]],[24,[\"maxrows\"]],[24,[\"maxwidth\"]],[24,[\"maxheight\"]],[24,[\"inputClass\"]]]]],false],[0,\"\\n    \"],[7,\"span\",true],[10,\"class\",\"md-input-error\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showErrorMessage\"]]],null,{\"statements\":[[0,\"        \"],[7,\"span\",true],[10,\"class\",\"md-error\"],[8],[0,\"\\n          \"],[1,[28,\"fa-icon\",[\"exclamation-circle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip danger\"]],{\"statements\":[[0,\"              \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"valuePath\"]]],null],\"message\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showWarningMessage\"]]],null,{\"statements\":[[0,\"        \"],[7,\"span\",true],[10,\"class\",\"md-warning\"],[8],[0,\"\\n          \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip warning\"]],{\"statements\":[[0,\"          \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],[24,[\"valuePath\"]]],null],\"warningMessage\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/input/md-textarea/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/input/md-toggle/component", ["exports", "ember-toggle/components/x-toggle/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  /**
   * @module mdeditor
   * @submodule components-input
   */
  var _default = _component.default.extend({
    /**
    * Custom toggle switch for boolean input
    *
    * @class md-toggle
    * @constructor
    * @extends ember-toggle/components/x-toggle
    */

    /**
     * Bound classes:
     *  - value
     *    - __true__: toggle-on
     *    - __false__: toggle-off
     *
     * @property classNameBindings
     * @type {Array}
     */
    classNameBindings: ['value:toggle-on:toggle-off']
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-breadcrumb/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-breadcrumb/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "gO7BvOt4",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"bread-crumbs\",null,[[\"tagName\",\"linkable\"],[\"ol\",true]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-breadcrumb/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-card/component", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Component that renders a Bootstrap card.
     *
     * ```handlebars
     * \{{#layout/md-card
     *   title="title"
     *   collapsible=true
     *   collapsed=false
     *   profilePath="card"
     *   data-spy="Card"
     *   shadow=true
     * }}
     *   Content
     * {{/layout/md-card}}
     * ```
     * @module mdeditor
     * @submodule components-layout
     * @class md-card
     * @constructor
     */

    // init() {
    //   this._super(...arguments);
    //
    //   let content = this.get('content');
    //
    //   if(content !== null) {
    //     let empty = content ? Object.keys(this.get('cleaner').clean(content, {
    //         preserveArrays: false
    //       })).length ===
    //       0 : true;
    //
    //     this.set('collapsed', empty);
    //   }
    // },

    spotlight: Ember.inject.service(),
    cleaner: Ember.inject.service(),
    classNames: ['md-card', 'card'],
    classNameBindings: ['shadow:box-shadow--4dp', 'scroll:scroll-card', 'maximizable', 'fullScreen', 'required', 'muted', 'borderColor'],
    attributeBindings: ['data-spy'],
    content: null,
    /**
     * The card element id.
     *
     * @property cardId
     * @type {String}
     * @readOnly
     * @category computed
     * @requires elementId
     */
    cardId: Ember.computed('elementId', function () {
      return 'card-' + this.elementId;
    }).readOnly(),
    /**
     * The card title.
     *
     * @property title
     * @type {String}
     * @required
     */

    /**
     * The card title icon.
     *
     * @property titleIcon
     * @type {String}
     */

    /**
     * If true, the "row" the card body will be initally collapsed.
     *
     * @property collapsed
     * @type {Boolean}
     * @default undefined
     */

    /**
     * If true, the spotlight button will be inserted into the toolbar.
     *
     * @property spotlightEnabled
     * @type {Boolean}
     * @default true
     */
    spotlightEnabled: true,
    /**
     * If true, the scroll-card class will be applied to the card.
     *
     * @property scroll
     * @type {Boolean}
     * @default undefined
     */

    /**
     * If true, the maximize control will be avialable on the card.
     *
     * @property maximizable
     * @type {Boolean}
     * @default undefined
     */

    /**
     * If true, a box shadow will be rendered around the card.
     *
     * @property shadow
     * @type {Boolean}
     * @default true
     */
    shadow: true,
    /**
     * If true, the card header will have a white background.
     *
     * @property plain
     * @type {Boolean}
     * @default false
     */
    plain: false,
    /**
     * If true, the card-block class will be added.
     *
     * @property block
     * @type {Boolean}
     * @default true
     */
    block: true,
    /**
     * If true, the card-flex class will be added.
     *
     * @property flex
     * @type {Boolean}
     * @default false
     */
    flex: false,
    /**
     * If true, the card-block text color will be muted.
     *
     * @property muted
     * @type {Boolean}
     * @default false
     */
    muted: false,
    /**
     * If true, the collapse control will be added to the card header.
     *
     * @property collapsible
     * @type {Boolean}
     * @default undefined
     */

    /**
     * If true, the "row" class will be added to the card body.
     *
     * @property bodyIsRow
     * @type {Boolean}
     * @default undefined
     */

    /**
     * Bootstrap button class to apply to header buttton
     *
     * @property btnClass
     * @type {String}
     * @default 'primary'
     */
    btnClass: 'primary',
    /**
     * Icon to display in header button
     *
     * @property btnIcon
     * @type {String}
     * @default undefined
     */

    /**
     * Border color
     *
     * @property border
     * @type {String}
     * @default undefined
     */

    /**
     * The text to display in the header button.
     * @property btnText
     * @type {String}
     * @default undefined
     */

    /**
     * The action to perform whrn the header button is clicked.
     * @property btnAction
     * @type {Function}
     * @default undefined
     */

    /**
     * The height to offset from top of container when scrolling.
     *
     * @property offset
     * @type {Number}
     * @default 130
     */
    offset: 130,
    /**
     * The data-spy text. Defaults to the title.
     *
     * @property data-spy
     * @type {String}
     * @default "this.title"
     * @category computed
     */
    'data-spy': Ember.computed.oneWay('title'),
    borderColor: Ember.computed('border', function () {
      return this.border ? 'border-' + this.border : null;
    }),
    windowIcon: Ember.computed('fullScreen', function () {
      return this.fullScreen ? 'compress' : 'expand';
    }),
    isCollapsible: Ember.computed('fullScreen', 'collapsible', function () {
      return !this.fullScreen && this.collapsible;
    }),
    didInsertElement() {
      this._super(...arguments);
      if (this.collapsible) {
        let card = this.$();
        let body = this.$(' > .card-collapse');
        let offset = this.offset || 0;
        body.on('shown.bs.collapse', function (e) {
          e.stopPropagation();
          // card.get(0).scrollIntoView({
          //   block: "end",
          //   behavior: "smooth"
          // });
          //
          // let scrolledY = window.scrollY;
          //
          // if(scrolledY) {
          //   window.scroll(0, scrolledY - offset);
          // }
          (0, _jquery.default)('html,body').animate({
            scrollTop: card.offset().top - offset
          }, 'slow');
        });
      }
      let content = this.content;
      if (content !== null) {
        let empty = content ? Object.keys(this.cleaner.clean(content, {
          preserveArrays: false
        })).length === 0 : true;
        this.set('collapsed', empty);
      }
    },
    actions: {
      toggleFullScreen() {
        let val = this.toggleProperty('fullScreen');
        (0, _jquery.default)(this.element).parents('.liquid-child,.liquid-container, .md-card').toggleClass('full-screen', val);
        (0, _jquery.default)('body').toggleClass('slider', val);
      },
      spotlight(id) {
        Ember.get(this, 'spotlight').setTarget(id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-card/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "kchVFL4a",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"title\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[11,\"class\",[29,[\"card-header text-info \",[28,\"if\",[[24,[\"plain\"]],\"bg-white border-bottom-0 rounded-sm\"],null],\" \",[28,\"if\",[[24,[\"collapsed\"]],\"border-0\"],null],\" \",[22,\"borderColor\"]]]],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"card-title md-card-chevron\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"isCollapsible\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"titleIcon\"]]],null,{\"statements\":[[0,\"            \"],[7,\"a\",true],[10,\"role\",\"button\"],[10,\"data-toggle\",\"collapse\"],[11,\"href\",[29,[\"#\",[22,\"cardId\"]]]],[11,\"aria-expanded\",[28,\"if\",[[24,[\"collapsed\"]],\"false\",\"true\"],null]],[11,\"class\",[29,[\"text-info \",[28,\"if\",[[24,[\"collapsed\"]],\"collapsed\"],null]]]],[11,\"aria-controls\",[22,\"panelId\"]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[[24,[\"titleIcon\"]]],null],false],[0,\"\\n            \"],[1,[22,\"title\"],false],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[7,\"a\",true],[10,\"role\",\"button\"],[10,\"data-toggle\",\"collapse\"],[11,\"href\",[29,[\"#\",[22,\"cardId\"]]]],[11,\"aria-expanded\",[28,\"if\",[[24,[\"collapsed\"]],\"false\",\"true\"],null]],[11,\"class\",[29,[\"text-info \",[28,\"if\",[[24,[\"collapsed\"]],\"collapsed\"],null]]]],[11,\"aria-controls\",[22,\"panelId\"]],[8],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\"\\n            \"],[1,[22,\"title\"],false],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"titleIcon\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"fa-icon\",[[24,[\"titleIcon\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[1,[22,\"title\"],false],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[24,[\"maximizable\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",true],[10,\"role\",\"button\"],[10,\"class\",\"pull-right md-card-maximize hidden-print\"],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[[24,[\"windowIcon\"]]],[[\"size\",\"click\"],[1,[28,\"action\",[[23,0,[]],\"toggleFullScreen\"],null]]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[7,\"div\",true],[10,\"class\",\"btn-group hidden-print pull-right\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"btnText\"]]],null,{\"statements\":[[0,\"            \"],[7,\"button\",false],[12,\"name\",\"button\"],[12,\"class\",[29,[\"btn btn-\",[28,\"if\",[[24,[\"btnClass\"]],[24,[\"btnClass\"]],\"primary\"],null],\" btn-xs\"]]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[24,[\"btnAction\"]]]],[8],[0,\"\\n              \"],[1,[28,\"fa-icon\",[[24,[\"btnIcon\"]]],null],false],[0,\"\\n              \"],[1,[22,\"btnText\"],false],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"spotlightEnabled\"]]],null,{\"statements\":[[0,\"            \"],[7,\"button\",false],[12,\"name\",\"button\"],[12,\"class\",\"btn btn-info btn-xs md-btn-spotlight\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"spotlight\",[24,[\"elementId\"]]]],[8],[0,\"\\n              \"],[1,[28,\"fa-icon\",[\"circle\"],null],false],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[7,\"div\",true],[11,\"id\",[22,\"cardId\"]],[11,\"class\",[29,[\"card-collapse \",[28,\"if\",[[24,[\"collapsed\"]],\"collapse\",\"in\"],null],\" \",[28,\"if\",[[24,[\"bodyIsRow\"]],\"row\"],null],\" \",[28,\"if\",[[24,[\"block\"]],\"card-block\"],null],\" \",[28,\"if\",[[24,[\"flex\"]],\"card-flex\"],null],\" \",[28,\"if\",[[24,[\"plain\"]],\"border-top\"],null]]]],[8],[0,\"\\n    \"],[14,1],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-card/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-footer/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: 'footer',
    classNames: ['md-footer'],
    settings: Ember.inject.service()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-footer/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "RYQi9Wbg",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"footer-container\"],[8],[0,\"\\n  \"],[7,\"span\",true],[8],[7,\"a\",true],[10,\"class\",\"btn btn-xs btn-warning\"],[10,\"href\",\"https://github.com/adiwg/mdEditor/issues/new\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[1,[28,\"fa-icon\",[\"github\"],null],false],[0,\" Report Issue\\n\\n    \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\"],[\"Report bugs, Request features - GitHub account required.\",\"top\"]]],false],[0,\"\\n  \"],[9],[9],[0,\"\\n  \"],[7,\"span\",true],[8],[0,\"AutoSave:\\n      \"],[7,\"span\",true],[11,\"class\",[28,\"if\",[[24,[\"settings\",\"data\",\"autoSave\"]],\"text-success\",\"text-warning\"],null]],[8],[0,\"\\n        \"],[1,[28,\"if\",[[24,[\"settings\",\"data\",\"autoSave\"]],\"On\",\"Off\"],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[14,1],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-footer/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-main/component", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /*didInsertElement: function () {
      this.$('[data-toggle="tooltip"]')
        .tooltip();
    },*/
    actions: {
      toggleSidebar() {
        (0, _jquery.default)('#md-wrapper').toggleClass('toggled');
        //hack to force reflow
        (0, _jquery.default)('#md-navbar-main-collapse ul').hide().show(0);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-main/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "c6O6ESmn",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"nav\",true],[10,\"id\",\"md-navbar-main\"],[10,\"class\",\"navbar navbar-inverse navbar-top\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"container-fluid\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"navbar-header\"],[8],[0,\"\\n      \"],[7,\"button\",true],[10,\"class\",\"navbar-toggle collapsed\"],[10,\"data-toggle\",\"collapse\"],[10,\"data-target\",\"#md-navbar-main-collapse\"],[10,\"aria-expanded\",\"false\"],[10,\"type\",\"button\"],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"sr-only\"],[8],[0,\"Toggle navigation\"],[9],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"icon-bar\"],[8],[9],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"icon-bar\"],[8],[9],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"icon-bar\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"a\",false],[12,\"class\",\"navbar-brand\"],[12,\"href\",\"#\"],[3,\"action\",[[23,0,[]],\"toggleSidebar\"]],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"md-icon-mdeditor\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"collapse navbar-collapse\"],[10,\"id\",\"md-navbar-main-collapse\"],[8],[0,\"\\n      \"],[7,\"ul\",true],[10,\"class\",\"nav navbar-nav\"],[8],[0,\"\\n        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"dashboard\"]],{\"statements\":[[0,\"            \"],[7,\"span\",true],[10,\"class\",\"fa fa-dashboard\"],[8],[9],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Dashboard\"],[9],[0,\"\\n            \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Dashboard\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"export\"]],{\"statements\":[[0,\"            \"],[7,\"span\",true],[10,\"class\",\"fa fa-sign-out\"],[8],[9],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Export\"],[9],[0,\"\\n            \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Export\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"import\"]],{\"statements\":[[0,\"            \"],[7,\"span\",true],[10,\"class\",\"fa fa-sign-in\"],[8],[9],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Import\"],[9],[0,\"\\n            \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Import\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"publish\"]],{\"statements\":[[0,\"            \"],[7,\"span\",true],[10,\"class\",\"fa fa-share-square-o\"],[8],[9],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Publish\"],[9],[0,\"\\n            \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Publish\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[14,1],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"ul\",true],[10,\"class\",\"nav navbar-nav navbar-right\"],[8],[0,\"\\n        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"settings\"]],{\"statements\":[[0,\"            \"],[7,\"span\",true],[10,\"class\",\"fa fa-gear\"],[8],[9],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"md-nav-text nav-settings\"],[8],[0,\"Settings\"],[9],[0,\"\\n            \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Settings\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-nav-main/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-secondary/component", ["exports", "ember-resize/mixins/resize-aware"], function (_exports, _resizeAware) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend(_resizeAware.default, {
    customProfile: Ember.inject.service('custom-profile'),
    resizeService: Ember.inject.service('resize'),
    resizeWidthSensitive: true,
    resizeHeightSensitive: true,
    navPadding: 5,
    navWidth: 0,
    /**
    * Array of nav links. If not supplied, the links will be pulled from the
    * active profile.
    *
    * @property navLinks
    * @type {Array}
    * @default "undefined"
    * @optional
    */

    /**
     * translated "more" text
     *
     * @property more
     * @type {String}
     */
    more: 'More',
    links: Ember.computed('customProfile.active', 'model', 'navWidth', function () {
      const active = this.customProfile.getActiveProfile();
      const modelName = this.get('model.constructor.modelName');
      const nav = this;
      let links = this.navLinks || Ember.get(active, 'definition.nav.' + modelName) || this.customProfile.defaultProfile.definition.nav[modelName];
      return links.map((lnk, index) => {
        let link = Ember.Object.create(lnk);
        link.setProperties({
          nav: nav,
          index: index
        });
        Ember.defineProperty(link, 'navWidth', Ember.computed.alias('nav.navWidth'));
        Ember.defineProperty(link, 'isOverflow', Ember.computed('navWidth', 'width', function () {
          return this.navWidth < this.linkWidth + this.nav.offset;
        }));
        return link;
      });
    }),
    sortedLinks: Ember.computed('links', function () {
      let sorted = this.links.sortBy('index');
      return sorted;
    }),
    hasOverflow: Ember.computed('navWidth', 'linkWidth', function () {
      return this.navWidth < this.linkWidth;
    }),
    linkWidth: Ember.computed('links.@each.width', function () {
      return this.links.reduce((a, b) => a + b.width, this.navPadding);
    }),
    /**
     * Width to be added to linkWidth to make sure the last link will fit.
     * Calcuated as the smaller of the maximum link width or 150.
     *
     * @property offset
     * @type {Number}
     */
    offset: Ember.computed('links.@each.width', function () {
      return Math.min(Math.max(...this.links.mapBy('width'), 1), 150);
    }),
    didInsertElement: function didInsertElement() {
      this._super.apply(this, arguments);
      this._handleDebouncedResizeEvent();
    },
    debouncedDidResize(width) {
      this.set('navWidth', width || this.navWidth);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-secondary/link/component", ["exports", "liquid-fire/components/liquid-measured"], function (_exports, _liquidMeasured) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: 'li',
    didInsertElement() {
      this._super(...arguments);
      let width = (0, _liquidMeasured.measure)(this.$()).width;
      if (width === this.link.width || this.link.isOverflow) return;
      Ember.run.scheduleOnce('afterRender', () => {
        //next(this, () => {
        let sliced = this.nav.links.slice(0, this.index + 1);
        this.set('link.width', width);
        this.link.set('linkWidth', sliced.reduce((a, b) => {
          return a + b.width;
        }, this.nav.navPadding));
        //});
      });
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-secondary/link/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "LaRnfYIY",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"isStaticLinks\"]]],null,{\"statements\":[[0,\"    \"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"link.class\",[24,[\"link\",\"target\"]]]],{\"statements\":[[1,[24,[\"link\",\"title\"]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"link\",\"tip\"]]],null,{\"statements\":[[4,\"ember-tooltip\",null,[[\"effect\",\"side\",\"delay\",\"tooltipClass\"],[\"slide\",\"bottom\",500,\"ember-tooltip md-tooltip info\"]],{\"statements\":[[0,\"      \"],[1,[24,[\"link\",\"tip\"]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"link.class\",[24,[\"link\",\"target\"]],[24,[\"model\"]]]],{\"statements\":[[1,[24,[\"link\",\"title\"]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"link\",\"tip\"]]],null,{\"statements\":[[4,\"ember-tooltip\",null,[[\"effect\",\"side\",\"delay\",\"tooltipClass\"],[\"slide\",\"bottom\",500,\"ember-tooltip md-tooltip info\"]],{\"statements\":[[0,\"          \"],[1,[24,[\"link\",\"tip\"]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-nav-secondary/link/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-secondary/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "C6wo/z7M",
    "block": "{\"symbols\":[\"link\",\"index\"],\"statements\":[[7,\"ul\",true],[10,\"id\",\"md-navbar-secondary\"],[10,\"class\",\"nav nav-pills\"],[10,\"role\",\"navigation\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"sortedLinks\"]]],null,{\"statements\":[[4,\"if\",[[28,\"and\",[[24,[\"hasOverflow\"]],[23,1,[\"isOverflow\"]]],null]],null,{\"statements\":[[0,\"      \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"secondary-nav-menu\",[28,\"component\",[\"layout/md-nav-secondary/link\"],[[\"isStaticLinks\",\"link\",\"index\",\"model\",\"nav\",\"navWidth\"],[[24,[\"isStaticLinks\"]],[23,1,[]],[23,2,[]],[24,[\"model\"]],[23,0,[]],[24,[\"navWidth\"]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"layout/md-nav-secondary/link\",null,[[\"isStaticLinks\",\"link\",\"index\",\"model\",\"nav\",\"navWidth\"],[[24,[\"isStaticLinks\"]],[23,1,[]],[23,2,[]],[24,[\"model\"]],[23,0,[]],[24,[\"navWidth\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[1,2]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"hasOverflow\"]]],null,{\"statements\":[[0,\"    \"],[7,\"li\",true],[10,\"class\",\"dropdown\"],[8],[0,\"\\n      \"],[7,\"a\",true],[10,\"href\",\"#\"],[10,\"class\",\"dropdown-toggle\"],[10,\"data-toggle\",\"dropdown\"],[10,\"role\",\"button\"],[10,\"aria-haspopup\",\"true\"],[10,\"aria-expanded\",\"false\"],[8],[0,\"More \"],[7,\"span\",true],[10,\"class\",\"caret\"],[8],[9],[9],[0,\"\\n      \"],[7,\"ul\",true],[10,\"class\",\"dropdown-menu\"],[8],[0,\"\\n        \"],[1,[28,\"multiple-from-elsewhere\",null,[[\"name\"],[\"secondary-nav-menu\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-nav-secondary/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-sidebar/component", ["exports", "mdeditor/config/environment", "jquery"], function (_exports, _environment, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-sidebar-wrapper'],
    classNameBindings: ['showHelp:help'],
    showHelp: false,
    prerelease: Ember.computed(function () {
      let version = this.version;
      if (version.substring(0, 3) === "0.0") {
        return 'alpha';
      }
      if (version.substring(0, 1) === "0" && version.substring(0, 3) > 0) {
        return 'beta';
      }
    }),
    version: Ember.computed(function () {
      let version = _environment.default.APP.version;
      return version.substring(0, version.indexOf('+'));
    }),
    actions: {
      toggleHelp() {
        this.toggleProperty('showHelp');
      },
      toggleSidebar() {
        (0, _jquery.default)('#md-wrapper').toggleClass('toggled');
        //hack to force reflow
        (0, _jquery.default)('#md-navbar-main-collapse ul').hide().show(0);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-nav-sidebar/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "oFHS2a0v",
    "block": "{\"symbols\":[\"class\",\"meta\",\"record\"],\"statements\":[[0,\"  \"],[7,\"ul\",true],[10,\"class\",\"sidebar-nav\"],[8],[0,\"\\n    \"],[7,\"li\",true],[10,\"class\",\"sidebar-brand\"],[8],[0,\"\\n      \"],[7,\"a\",false],[12,\"class\",\"sidebar-brand-link\"],[12,\"href\",\"#\"],[3,\"action\",[[23,0,[]],\"toggleSidebar\"]],[8],[0,\"md\"],[7,\"span\",true],[10,\"class\",\"md-icon-mdeditor\"],[8],[9],[0,\"ditor\"],[9],[7,\"span\",true],[11,\"class\",[29,[\"md-app-version \",[22,\"prerelease\"]]]],[8],[0,\"v\"],[1,[22,\"version\"],false],[9],[0,\"\\n      \"],[7,\"a\",false],[12,\"class\",\"md-btn-help pull-right\"],[12,\"href\",\"#\"],[3,\"action\",[[23,0,[]],\"toggleHelp\"]],[8],[1,[28,\"fa-icon\",[[28,\"if\",[[24,[\"showHelp\"]],\"list\",\"question-circle\"],null]],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"showHelp\"]]],[[\"use\",\"enableGrowth\"],[\"fade\",false]],{\"statements\":[[0,\"      \"],[1,[22,\"md-help\"],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"li\",true],[10,\"id\",\"md-sidebar-lists\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"panel-group\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"items\"]]],null,{\"statements\":[[4,\"with\",[[23,1,[\"meta\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"panel\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"panel-heading clearfix\"],[11,\"id\",[29,[[23,2,[\"listId\"]],\"-heading\"]]],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"btn-group btn-group-xs pull-right\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"...\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-primary btn-xs\",[28,\"concat\",[[23,2,[\"type\"]],\".new\"],null]]],{\"statements\":[[0,\"                    \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" \"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-primary btn-xs\",[23,2,[\"list\"]]]],{\"statements\":[[0,\"                    \"],[7,\"span\",true],[10,\"class\",\"fa fa-list\"],[8],[9],[0,\" \"]],\"parameters\":[]},null],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"h4\",true],[10,\"class\",\"panel-title bg-primary\"],[8],[0,\"\\n              \"],[7,\"a\",true],[10,\"class\",\"\"],[10,\"data-toggle\",\"collapse\"],[10,\"aria-expanded\",\"true\"],[11,\"href\",[29,[\"#\",[23,2,[\"listId\"]]]]],[11,\"aria-controls\",[23,2,[\"listId\"]]],[8],[0,\"\\n                \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\" \"],[1,[23,2,[\"title\"]],false],[0,\" (\"],[1,[23,1,[\"length\"]],false],[0,\")\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"panel-collapse collapse in\"],[10,\"role\",\"tabpanel\"],[10,\"aria-expanded\",\"true\"],[11,\"id\",[23,2,[\"listId\"]]],[11,\"aria-labelledby\",[29,[[23,2,[\"listId\"]],\"-heading\"]]],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[]]],null,{\"statements\":[[0,\"                    \"],[7,\"div\",true],[10,\"class\",\"list-group-item\"],[10,\"draggable\",\"true\"],[8],[0,\"\\n                      \"],[7,\"div\",true],[10,\"class\",\"btn-group btn-group-xs pull-right\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Navigation Buttons\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"disabledWhen\",\"draggable\",\"route\",\"model\"],[[28,\"concat\",[\"btn btn-\",[23,3,[\"status\"]]],null],[23,3,[\"isNew\"]],\"false\",[28,\"concat\",[[23,2,[\"type\"]],\".show.edit\"],null],[23,3,[]]]],{\"statements\":[[0,\"                          \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                      \"],[9],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"disabledWhen\",\"activeClass\",\"draggable\",\"route\",\"model\"],[\"sidebar-row\",[23,3,[\"isNew\"]],[28,\"concat\",[\"active text-\",[23,3,[\"status\"]]],null],\"false\",[28,\"concat\",[[23,2,[\"type\"]],\".show\"],null],[23,3,[]]]],{\"statements\":[[4,\"if\",[[23,3,[\"defaultLogo\"]]],null,{\"statements\":[[0,\"                            \"],[7,\"img\",true],[11,\"src\",[23,3,[\"defaultLogo\"]]],[10,\"alt\",\"logo\"],[10,\"class\",\"fa-fw\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                            \"],[7,\"span\",true],[11,\"class\",[29,[\"fa fa-\",[23,3,[\"icon\"]],\" fa-fw\"]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                          \"],[1,[23,3,[\"title\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                    \"],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-nav-sidebar/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-object-container/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-object-container'],
    classNameBindings: ['even'],
    attributeBindings: ['data-spy'],
    /**
    * The index of the container, usually representing the zero-based array index.
    *
    * @property collapsible
    * @type {Number|String}
    * @default "true"
    */

    /**
    * Determine whether the collapse control is rendered in the header.
    *
    * @property collapsible
    * @type {Boolean}
    * @default "true"
    */
    collapsible: true,
    /**
    * The value of this property must evaluate to true for the component to be
    * collapsible.
    *
    * @property collapseProperty
    * @type {Boolean}
    * @default "true"
    */
    collapseProperty: true,
    isCollapsible: Ember.computed.and('collapsible', 'collapseProperty'),
    'data-spy': Ember.computed('title', function () {
      return "".concat(this.title, " ").concat(this.index);
    }),
    /**
    * True if the position indicated by the `index` value is even on a zero-based
    * scale.
    *
    * @property even
    * @type {Boolean}
    * @default "false"
    * @readOnly
    * @category computed
    * @requires 'index'
    */
    even: Ember.computed('index', function () {
      return !!(Number.parseInt(this.index, 10) % 2);
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-object-container/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "OsdXYNev",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"md-object-container-header\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"isCollapsible\"]]],null,{\"statements\":[[0,\"  \"],[7,\"a\",true],[10,\"class\",\"btn-collapse\"],[10,\"data-toggle\",\"collapse\"],[10,\"aria-expanded\",\"true\"],[11,\"href\",[28,\"concat\",[\"#\",[24,[\"elementId\"]],\"-collapse\"],null]],[11,\"aria-controls\",[28,\"concat\",[[24,[\"elementId\"]],\"-collapse\"],null]],[8],[0,\"\\n    \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"title\"]]],null,{\"statements\":[[0,\"    \"],[7,\"h4\",true],[10,\"class\",\"title inline-block text-primary\"],[10,\"code\",\"\"],[8],[0,\"\\n      \"],[7,\"strong\",true],[8],[1,[28,\"concat\",[[24,[\"title\"]],\" #\",[24,[\"index\"]]],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"btn-group btn-group-sm\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"editItem\"]]],null,{\"statements\":[[0,\"      \"],[7,\"button\",false],[12,\"class\",\"btn btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[24,[\"editItem\"]],[24,[\"index\"]]]],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"deleteItem\"]]],null,{\"statements\":[[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-danger\",[28,\"action\",[[23,0,[]],[24,[\"deleteItem\"]],[24,[\"index\"]]],null]]],{\"statements\":[[0,\"        \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[11,\"id\",[28,\"concat\",[[24,[\"elementId\"]],\"-collapse\"],null]],[10,\"class\",\"md-object-container-body collapse in\"],[8],[0,\"\\n  \"],[7,\"hr\",true],[8],[9],[0,\"\\n  \"],[14,1],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-object-container/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-slider/component", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-slider'],
    classNameBindings: ['visible:in'],
    visible: false,
    didReceiveAttrs() {
      (0, _jquery.default)('body').toggleClass('slider', this.visible === true);
    },
    fromName: null,
    name: Ember.computed('fromName', function () {
      return this.fromName || 'md-slider-content';
    }),
    actions: {
      toggleVisibility() {
        this.toggleProperty('visible');
        if (!this.visible) {
          let context = this.get('context.isDestroying');
          this.set('fromName', null);
          if (!context) {
            this.onClose.call(this);
          }
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-slider/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Tjz4Adhy",
    "block": "{\"symbols\":[\"slider\",\"&default\"],\"statements\":[[7,\"button\",false],[12,\"class\",\"close huge-text\"],[12,\"aria-label\",\"Close\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"toggleVisibility\"]],[8],[0,\"\\n  Close\\n  \"],[1,[28,\"fa-icon\",[\"caret-right\"],null],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"section\",true],[10,\"class\",\"md-slider-body\"],[8],[0,\"\\n\"],[4,\"from-elsewhere\",null,[[\"name\"],[[24,[\"name\"]]]],{\"statements\":[[0,\"    \"],[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[1,[23,1,[\"title\"]],false],[9],[0,\"\\n    \"],[7,\"hr\",true],[8],[9],[0,\"\\n    \"],[1,[28,\"component\",[[23,1,[\"body\"]]],null],false],[0,\"\\n\"]],\"parameters\":[1]},null],[9],[0,\"\\n\"],[14,2],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-slider/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-wrap/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Component used as a wrapper, data-spy enabled.
     *
     * ```handlebars
     * \{{#layout/md-wrap
     *   data-spy="Wrap"
     *   shadow=true
     * }}
     *   Content
     * {{/layout/md-wrap}}
     * ```
     * @module mdeditor
     * @submodule components-layout
     * @class md-wrap
     * @constructor
     */
    attributeBindings: ['data-spy']
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/md-wrap/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "iYe4iQAw",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/md-wrap/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/nav/dictionary/nav-main/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: ''
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/nav/dictionary/nav-main/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "nK3VPbaY",
    "block": "{\"symbols\":[],\"statements\":[[7,\"li\",true],[10,\"class\",\"divider-vertical\"],[8],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"li\",true],[8],[0,\"\\n\"],[1,[28,\"from-elsewhere\",null,[[\"name\"],[\"dictionary-nav\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/nav/dictionary/nav-main/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/nav/record/nav-main/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: ''
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/layout/nav/record/nav-main/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "zTzFvsBc",
    "block": "{\"symbols\":[],\"statements\":[[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"record.show.translate\",[24,[\"model\"]]]],{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"fa fa-retweet\"],[8],[9],[0,\"\\n    \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Translate\"],[9],[0,\"\\n    \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Translate\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"li\",true],[10,\"class\",\"divider-vertical\"],[8],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"li\",true],[8],[0,\"\\n\"],[1,[28,\"from-elsewhere\",null,[[\"name\"],[\"record-nav\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/layout/nav/record/nav-main/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-help/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-help-sidebar'],
    tagName: 'section'
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-help/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Qjns8qrY",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"md-help-sidebar-content\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"page-header\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[0,\"Help \"],[7,\"small\",true],[8],[0,\"Main\"],[9],[0,\"\\n      \"],[7,\"button\",true],[10,\"disabled\",\"\"],[10,\"id\",\"md-btn-tour\"],[10,\"class\",\"btn btn-xs btn-success pull-right\"],[10,\"type\",\"button\"],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"fa fa-bus\"],[8],[9],[0,\" Tour\\n      \"],[9],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n    The mdEditor is a web application that allows users to author and\\n    edit metadata for projects and datasets. The primary design goal is\\n    to develop an editor that will allow creation and management of\\n    archival quality metadata without requiring extensive knowledge of\\n    metadata standards.\\n  \"],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n    A comprehensive User Manual is available. The manual includes a tutorial,\\nreference, and best practices.\\n  \"],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n    \"],[7,\"a\",true],[10,\"href\",\"https://guide.mdeditor.org/\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[10,\"class\",\"external btn btn-lg btn-success btn-block md-btn-responsive\"],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[\"book\"],null],false],[0,\" View User Manual\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n    If you would like to receive announcements regarding the mdEditor, join our email list!\\n  \"],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n    \"],[7,\"a\",true],[10,\"href\",\"https://sourceforge.net/projects/mdtoolkit/lists/mdtoolkit-announce\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[10,\"class\",\"external btn btn-lg btn-info btn-block md-btn-responsive\"],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[\"envelope\"],null],false],[0,\" Join Email list\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/md-help/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/component", ["exports", "ember-models-table/components/models-table", "mdeditor/pods/components/md-models-table/themes/bootstrap3"], function (_exports, _modelsTable, _bootstrap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _modelsTable.default.extend({
    init() {
      this.pageSizeValues = [10, 25, 50, 500];
      this.filteringIgnoreCase = true;
      this._super(...arguments);
    },
    themeInstance: _bootstrap.default.create()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/check-all/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    actions: {
      toggleAllSelection() {
        this.toggleAllSelection();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/check-all/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "s4F/nn4d",
    "block": "{\"symbols\":[],\"statements\":[[7,\"span\",false],[12,\"role\",\"button\"],[12,\"class\",[29,[\"center-block\\n\",[28,\"if\",[[28,\"is-equal\",[[24,[\"selectedItems\",\"length\"]],[24,[\"data\",\"length\"]]],null],[24,[\"themeInstance\",\"select-all-rows\"]],[24,[\"themeInstance\",\"deselect-all-rows\"]]],null]]]],[3,\"action\",[[23,0,[]],\"toggleAllSelection\"]],[8],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/md-models-table/components/check-all/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/check/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    attributeBindings: ['aria-checked:isSelected'],
    actions: {
      clickOnRow(index, record, event) {
        this.clickOnRow(index, record);
        event.stopPropagation();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/check/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Qci7ovKc",
    "block": "{\"symbols\":[],\"statements\":[[7,\"span\",true],[11,\"class\",[28,\"if\",[[24,[\"isSelected\"]],[24,[\"themeInstance\",\"select-row\"]],[24,[\"themeInstance\",\"deselect-row\"]]],null]],[11,\"onclick\",[28,\"action\",[[23,0,[]],\"clickOnRow\",[24,[\"index\"]],[24,[\"record\"]]],null]],[10,\"role\",\"checkbox\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/md-models-table/components/check/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/row-body/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-row-body'],
    spotlight: Ember.inject.service(),
    didInsertElement() {
      this._super(...arguments);
      this.spotlight.setTarget(this.elementId, this.collapse, this);
      this.element.classList.add('fade-in-fast');
    },
    willDestroyElement() {
      this._super(...arguments);
      this.spotlight.close();
    },
    collapse() {
      this.element.classList.add('fade-out-fast');
      this.collapseRow(this.index, this.record);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/row-body/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "rHHG4Dak",
    "block": "{\"symbols\":[],\"statements\":[[0,\"  \"],[1,[28,\"component\",[[24,[\"rowBodyComponent\"]]],[[\"record\",\"visibleProcessedColumns\",\"index\",\"clickOnRow\",\"sendAction\",\"themeInstance\",\"expandRow\",\"collapseRow\"],[[24,[\"record\"]],[24,[\"visibleProcessedColumns\"]],[24,[\"index\"]],[24,[\"clickOnRow\"]],[24,[\"sendAction\"]],[24,[\"themeInstance\"]],[24,[\"expandRow\"]],[24,[\"collapseRow\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/md-models-table/components/row-body/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/row-buttons/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-row-buttons']
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/components/row-buttons/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "bhntGEDT",
    "block": "{\"symbols\":[\"badge\",\"btn\"],\"statements\":[[4,\"each\",[[24,[\"column\",\"buttons\"]]],null,{\"statements\":[[4,\"if\",[[23,2,[\"confirm\"]]],null,{\"statements\":[[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[[28,\"concat\",[\"btn btn-sm btn-\",[23,2,[\"type\"]]],null],[28,\"action\",[[23,0,[]],[23,2,[\"action\"]],[24,[\"column\"]],[24,[\"index\"]],[24,[\"record\"]]],[[\"target\"],[[23,2,[\"target\"]]]]]]],{\"statements\":[[0,\"      \"],[7,\"span\",true],[11,\"class\",[29,[\"fa fa-\",[23,2,[\"icon\"]]]]],[8],[9],[0,\" \"],[1,[23,2,[\"title\"]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"button\",true],[11,\"class\",[29,[\"btn btn-sm btn-\",[23,2,[\"type\"]]]]],[11,\"onclick\",[28,\"action\",[[23,0,[]],[23,2,[\"action\"]],[24,[\"column\"]],[24,[\"index\"]],[24,[\"record\"]]],[[\"target\"],[[23,2,[\"target\"]]]]]],[10,\"type\",\"button\"],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[[23,2,[\"icon\"]]],null],false],[0,\" \"],[1,[23,2,[\"title\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[2]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"btn-group text-center\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Row Error\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"record\",\"validations\",\"isInvalid\"]]],null,{\"statements\":[[0,\"  \"],[7,\"span\",true],[10,\"class\",\"md-error\"],[8],[0,\"\\n    \"],[1,[28,\"fa-icon\",[\"exclamation-circle\"],[[\"fixedWidth\"],[true]]],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip danger\"]],{\"statements\":[[0,\"      This item has errors.\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"record\",\"validations\",\"hasWarnings\"]]],null,{\"statements\":[[0,\"  \"],[7,\"span\",true],[10,\"class\",\"md-warning\"],[8],[0,\"\\n    \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],[[\"fixedWidth\"],[true]]],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip warning\"]],{\"statements\":[[0,\"      This item has warnings.\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n  \"]],\"parameters\":[]},null]],\"parameters\":[]}],[4,\"each\",[[24,[\"column\",\"badges\"]]],null,{\"statements\":[[4,\"if\",[[28,\"get\",[[24,[\"record\"]],[23,1,[\"isVisible\"]]],null]],null,{\"statements\":[[0,\"      \"],[7,\"span\",true],[11,\"class\",[29,[\"md-\",[23,1,[\"type\"]]]]],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[[23,1,[\"icon\"]]],[[\"fixedWidth\"],[true]]],false],[0,\"\\n        \"],[1,[28,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\",\"text\"],[\"right\",[28,\"concat\",[\"ember-tooltip md-tooltip \",[23,1,[\"type\"]]],null],[23,1,[\"tip\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/md-models-table/components/row-buttons/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-models-table/themes/bootstrap3", ["exports", "ember-models-table/themes/bootstrap3"], function (_exports, _bootstrap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _bootstrap.default.extend({
    'sort-asc': 'fa fa-caret-up',
    'sort-desc': 'fa fa-caret-down',
    'column-visible': 'fa fa-check-square-o',
    'column-hidden': 'fa fa-square-o',
    'nav-first': 'fa fa-fast-backward',
    'nav-prev': 'fa fa-backward',
    'nav-next': 'fa fa-forward',
    'nav-last': 'fa fa-fast-forward',
    'caret': 'fa fa-caret-down',
    'select-row': 'fa fa-fw fa-check-square-o',
    'deselect-row': 'fa fa-fw fa-square-o',
    'select-all-rows': 'fa fa-fw fa-check-square-o',
    'deselect-all-rows': 'fa fa-fw fa-square-o',
    'expand-row': 'fa fa-plus',
    'expand-all-rows': 'fa fa-plus',
    'collapse-row': 'fa fa-minus',
    'collapse-all-rows': 'fa fa-minus',
    clearFilterIcon: 'fa fa-times form-control-feedback',
    clearAllFiltersIcon: 'fa fa-times',
    sortGroupedPropertyBtn: 'btn',
    input: 'form-control',
    inputGroup: 'input-group',
    expandedRow: 'expanded-row',
    expandRow: 'expand-row md-collapsible-content',
    table: 'table table-striped table-bordered table-condensed table-hover',
    selectRowOnExpandClick: false
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-title/component", ["exports", "ember-crumbly/components/bread-crumbs", "ember-cli-string-helpers/helpers/truncate", "mdeditor/pods/components/md-title/template"], function (_exports, _breadCrumbs, _truncate, _template) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _breadCrumbs.default.extend({
    init() {
      this._super(...arguments);
      let applicationInstance = Ember.getOwner(this);
      this.set('applicationRoute', applicationInstance.lookup('route:application'));
      this.set('classNameBindings', []);
    },
    layout: _template.default,
    tagName: '',
    title: Ember.computed('routeHierarchy', function () {
      return this.routeHierarchy.reduce((val, itm) => {
        return val + (0, _truncate.truncate)([itm.title, 28, true]) + (itm.isTail ? '' : ' | ');
      }, '');
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-title/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "VOggky8T",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[14,1,[[24,[\"title\"]]]],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/md-title/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-translate/component", ["exports", "moment", "mdeditor/models/setting"], function (_exports, _moment, _setting) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const errorLevels = {
    'OK': 0,
    'NOTICE': 1,
    'WARNING': 2,
    'ERROR': 3
  };
  const errorClasses = ['success', 'info', 'warning', 'danger'];
  var _default = Ember.Component.extend({
    classNames: ['row'],
    cleaner: Ember.inject.service(),
    flashMessages: Ember.inject.service(),
    mdjson: Ember.inject.service(),
    settings: Ember.inject.service(),
    ajax: Ember.inject.service(),
    /**
     * Indicates whether empty tags should be written to the translated output
     *
     * @property showAllTags
     * @type {Boolean}
     * @default "false"
     */
    showAllTags: false,
    /**
     * Indicates whether to force writer to meet the output standard
     *
     * @property forceValid
     * @type {Boolean}
     * @default "false"
     */
    forceValid: false,
    writer: null,
    writerOptions: Ember.computed(function () {
      return [{
        name: 'FGDC CSDGM',
        value: 'fgdc',
        type: 'application/xml',
        tip: 'Federal Geographic Data Committee Content Standard for Digital Geospatial Metadata'
      }, {
        name: 'HTML',
        value: 'html',
        type: 'text/html',
        tip: 'HTML "human-readable" and printable report of the metadata content'
      }, {
        name: 'ISO 19115-1',
        value: 'iso19115_1',
        type: 'application/xml',
        tip: 'International Standards Organization Geographic Information - Metadata 19115-1:2014'
      }, {
        name: 'ISO 19115-2',
        value: 'iso19115_2',
        type: 'application/xml',
        tip: 'International Standards Organization Geographic Information - Metadata 19115-2:2009'
      }, {
        name: 'ISO 19110',
        value: 'iso19110',
        type: 'application/xml',
        tip: 'International Standards Organization Geographic Information - Feature Catalogue 19110:2005'
      }, {
        name: 'sbJSON',
        value: 'sbJson',
        type: 'application/json',
        tip: 'USGS ScienceBase metadata format'
      }];
    }),
    result: null,
    errorLevel: null,
    errors: null,
    xhrError: null,
    isLoading: false,
    subTitle: null,
    errorClass: Ember.computed('errorLevel', 'errors', function () {
      return errorClasses[Ember.get(this, 'errorLevel')];
    }),
    errorTitle: Ember.computed('errorLevel', 'errors', function () {
      let type = ['Success', 'Notice', 'Warning', 'Error'];
      return type[Ember.get(this, 'errorLevel')];
    }),
    errorSubTitle: Ember.computed('subTitle', function () {
      let err = Ember.get(this, 'errors');
      if (err.length) {
        return Ember.get(this, 'errorTitle') + ' ocurred during translation.';
      }
      return null;
    }),
    writeObj: Ember.computed('writer', function () {
      return Ember.get(this, 'writerOptions').findBy('value', Ember.get(this, 'writer'));
    }),
    writerType: Ember.computed('writeObj', function () {
      let obj = Ember.get(this, 'writeObj');
      return obj ? obj.type.split('/')[1] : null;
    }),
    isJson: Ember.computed.equal('writerType', 'json'),
    defaultAPI: _setting.defaultValues.mdTranslatorAPI,
    apiURL: Ember.computed.or('settings.data.mdTranslatorAPI', 'defaultAPI'),
    isHtml: Ember.computed('writerType', function () {
      //IE does not supoprt srcdoc, so default to non-html display
      return Ember.get(this, 'writerType') === 'html' && 'srcdoc' in document.createElement('iframe');
    }),
    messages: Ember.computed.alias('errors'),
    _clearResult() {
      Ember.set(this, 'result', null);
      Ember.set(this, 'subtitle', null);
      Ember.set(this, 'errors', null);
      Ember.set(this, 'xhrError', null);
    },
    actions: {
      translate() {
        let mdjson = this.mdjson;
        let url = this.apiURL;
        let cmp = this;
        this._clearResult();
        Ember.set(this, 'isLoading', true);
        this.ajax.request(url, {
          type: 'POST',
          data: {
            //file: JSON.stringify(cleaner.clean(json)),
            file: mdjson.formatRecord(Ember.get(this, 'model'), true),
            reader: 'mdJson',
            writer: Ember.get(this, 'writer'),
            showAllTags: Ember.get(this, 'showAllTags'),
            forceValid: Ember.get(this, 'forceValid'),
            validate: 'normal',
            format: 'json'
          },
          context: this
        }).then(function (response) {
          Ember.set(cmp, 'isLoading', false);
          let level = Math.max(...[response.readerExecutionStatus, response.readerStructureStatus, response.readerValidationStatus, response.writerStatus].map(itm => errorLevels[itm]));
          Ember.set(cmp, 'errorLevel', level);
          Ember.set(cmp, 'errors', response.readerExecutionMessages.concat(response.readerStructureMessages, response.readerValidationMessages.length ? response.readerValidationMessages[0] : response.readerValidationMessages, response.writerMessages).map(itm => itm.split(':')));
          Ember.set(cmp, 'result', response.writerOutput);
          if (!response.success) {
            Ember.get(cmp, 'flashMessages').danger('Translation error!');
          }
        }, response => {
          let error = "mdTranslator Server error:\n          ".concat(response.status, ": ").concat(response.statusText);
          Ember.set(cmp, 'errorLevel', 3);
          Ember.set(cmp, 'isLoading', false);
          Ember.set(cmp, 'xhrError', error);
          Ember.get(cmp, 'flashMessages').danger(error);
        });
      },
      saveResult() {
        let title = Ember.get(this, 'model.title');
        let result = Ember.get(this, 'result');
        let writer = Ember.get(this, 'writeObj');
        window.saveAs(new Blob([result], {
          type: "".concat(writer.type, ";charset=utf-8")
        }), "".concat(title, "_").concat((0, _moment.default)().format('YYYYMMDD'), ".").concat(Ember.get(this, 'writerType')));
      },
      clearResult() {
        this._clearResult();
      },
      prettifyJson() {
        let promise = new Ember.RSVP.Promise((resolve, reject) => {
          let parsed = JSON.parse(Ember.get(this, 'result'));
          if (parsed) {
            resolve(parsed);
          } else {
            reject('JSON not valid');
          }
        });
        promise.then(obj => {
          Ember.set(this, 'result', JSON.stringify(obj, null, 2));
        }).catch(error => {
          //console.log(error);
          Ember.get(this, 'flashMessages').danger(error.message);
        });
      },
      errorClass(level) {
        return errorClasses[errorLevels[level]] || 'primary';
      },
      formatMessage(message) {
        return message ? message.trim().replace(/^([A-Z]{2,})/g, match => match.toLowerCase()) : 'context not provided';
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/md-translate/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "MMqH3CpL",
    "block": "{\"symbols\":[\"message\",\"errorClass\",\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"class\",\"spotlightEnabled\",\"block\"],[\"Options\",\"md-translator-options\",false,false]],{\"statements\":[[0,\"        \"],[7,\"form\",false],[3,\"action\",[[23,0,[]],\"translate\"],[[\"on\"],[\"submit\"]]],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n                \"],[1,[28,\"input/md-select\",null,[[\"label\",\"value\",\"valuePath\",\"namePath\",\"objectArray\",\"tooltip\",\"tooltipPath\",\"searchEnabled\",\"change\"],[\"Choose Format\",[24,[\"writer\"]],\"value\",\"name\",[24,[\"writerOptions\"]],true,\"tip\",false,[28,\"action\",[[23,0,[]],\"clearResult\"],null]]]],false],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n                    \"],[7,\"label\",true],[8],[0,\"Force Valid Ouput?\"],[9],[0,\"\\n                    \"],[7,\"div\",true],[10,\"class\",\"form-control\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"inline-block\"],[8],[0,\"\\n                            \"],[1,[28,\"input/md-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"forceValid\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"forceValid\"]]],null]],null],true,\"Yes\",\"No\",\"medium\",\"form\"]]],false],[0,\"\\n                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n                    \"],[7,\"label\",true],[8],[0,\"Show Empty Tags?\"],[9],[0,\"\\n                    \"],[7,\"div\",true],[10,\"class\",\"form-control\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"inline-block\"],[8],[0,\"\\n                            \"],[1,[28,\"input/md-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"showAllTags\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"showAllTags\"]]],null]],null],true,\"Yes\",\"No\",\"medium\",\"form\"]]],false],[0,\"\\n                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n                \"],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n                \"],[1,[28,\"control/md-status\",null,[[\"model\",\"isBtn\",\"bntSize\"],[[24,[\"model\"]],true,\"lg\"]]],false],[0,\"\\n                \"],[7,\"button\",true],[10,\"class\",\"btn btn-lg btn-primary pull-right\"],[11,\"disabled\",[28,\"if\",[[24,[\"writer\"]],false,true],null]],[10,\"type\",\"submit\"],[8],[0,\"\\n                    \"],[1,[28,\"fa-icon\",[\"retweet\"],null],false],[0,\" Translate \"],[9],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"col-md-7\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"isLoading\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"control/md-spinner\",null,[[\"size\",\"text\"],[5,\"Translating...\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"messages\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"class\",\"scroll\",\"maximizable\",\"titleIcon\",\"spotlightEnabled\",\"collapsible\"],[[28,\"concat\",[\"Translation \",[24,[\"errorTitle\"]]],null],[28,\"concat\",[\"card-inverse card-outline-\",[24,[\"errorClass\"]],\" md-translator-error \",[24,[\"errorClass\"]]],null],false,true,\"exclamation\",false,true]],{\"statements\":[[0,\"        \"],[7,\"h4\",true],[11,\"class\",[29,[\"text-\",[22,\"errorClass\"]]]],[8],[1,[22,\"errorSubTitle\"],false],[9],[0,\"\\n        \"],[7,\"ul\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"messages\"]]],null,{\"statements\":[[4,\"with\",[[28,\"compute\",[[28,\"action\",[[23,0,[]],\"errorClass\"],null],[23,1,[\"0\"]]],null]],null,{\"statements\":[[0,\"              \"],[7,\"li\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n                  \"],[7,\"h4\",true],[10,\"class\",\"list-group-item-heading\"],[8],[0,\"\\n                    \"],[7,\"span\",true],[11,\"class\",[29,[\"label label-\",[23,2,[]]]]],[8],[1,[23,1,[\"0\"]],false],[9],[0,\"\\n                    \"],[1,[23,1,[\"2\"]],false],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n                  \"],[7,\"span\",true],[11,\"class\",[29,[\"label label-pill \",[28,\"if\",[[23,1,[\"3\"]],\"label-primary\",\"label-default\"],null]]]],[8],[1,[23,1,[\"1\"]],false],[9],[0,\"\\n                  \"],[1,[28,\"compute\",[[28,\"action\",[[23,0,[]],\"formatMessage\",[23,1,[\"3\"]]],null]],null],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"xhrError\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"spotlightEnabled\",\"class\",\"scroll\",\"maximizable\",\"titleIcon\"],[\"mdTranslator Error\",false,\"card-inverse card-outline-danger md-translator-error danger\",false,true,\"exclamation\"]],{\"statements\":[[0,\"        \"],[7,\"p\",true],[8],[1,[22,\"xhrError\"],false],[9],[0,\"\\n        \"],[7,\"p\",true],[8],[0,\"An error occurred during the translation. The incident has been\\n        logged. If the problem persists, please contact techincal support.\"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"result\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"class\",\"scroll\",\"maximizable\",\"titleIcon\",\"spotlightEnabled\"],[\"Result\",[28,\"if\",[[24,[\"messages\"]],[28,\"concat\",[\"card-inverse card-outline-\",[24,[\"errorClass\"]],\" md-translator-error \",[24,[\"errorClass\"]],\" md-translator-preview\"],null],\"md-translator-preview\"],null],false,true,\"check\",false]],{\"statements\":[[4,\"if\",[[24,[\"isHtml\"]]],null,{\"statements\":[[0,\"          \"],[7,\"iframe\",true],[11,\"srcdoc\",[22,\"result\"]],[10,\"sandbox\",\"allow-scripts\"],[10,\"width\",\"100%\"],[10,\"height\",\"100%\"],[8],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"input/md-textarea\",null,[[\"rows\",\"class\",\"placeholder\",\"value\"],[20,\"md-translator-area\",\"\",[24,[\"result\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"card-footer text-right\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"isJson\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"control/md-json-button\",null,[[\"class\",\"json\",\"disabled\"],[\"btn-lg btn-primary\",[24,[\"result\"]],[28,\"if\",[[24,[\"result\"]],false,true],null]]]],false],[0,\"\\n\\n              \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-primary\"],[12,\"disabled\",[28,\"if\",[[24,[\"result\"]],false,true],null]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"prettifyJson\"]],[8],[0,\"\\n              \"],[1,[28,\"fa-icon\",[\"align-left\"],null],false],[0,\" Format \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n              \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-success\"],[12,\"disabled\",[28,\"if\",[[24,[\"result\"]],false,true],null]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"saveResult\"]],[8],[0,\"\\n              \"],[1,[28,\"fa-icon\",[\"floppy-o\"],null],false],[0,\" Save Result \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[9],[0,\"\\n\"],[14,3],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/md-translate/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/models-table/cell-content-display/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "DSgSwcxQ",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"column\",\"truncate\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"word-limit\",[[28,\"get\",[[24,[\"record\"]],[24,[\"column\",\"propertyName\"]]],null]],[[\"limit\",\"wordLength\"],[[24,[\"column\",\"wordLimit\"]],[24,[\"column\",\"wordLength\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"column\",\"break\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"word-break-all inline-block\"],[8],[0,\"\\n    \"],[1,[28,\"get\",[[24,[\"record\"]],[24,[\"column\",\"propertyName\"]]],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"get\",[[24,[\"record\"]],[24,[\"column\",\"propertyName\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/models-table/cell-content-display/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/models-table/row-expand/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "9IGxu2OU",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"td\",true],[11,\"colspan\",[24,[\"visibleProcessedColumns\",\"length\"]]],[8],[0,\"\\n\"],[4,\"if\",[[25,1]],null,{\"statements\":[[0,\"    \"],[14,1,[[28,\"hash\",null,[[\"expandedRowComponent\",\"record\",\"visibleProcessedColumns\",\"index\",\"clickOnRow\",\"sendAction\",\"themeInstance\",\"expandRow\",\"collapseRow\"],[[24,[\"expandedRowComponent\"]],[24,[\"record\"]],[24,[\"visibleProcessedColumns\"]],[24,[\"index\"]],[24,[\"clickOnRow\"]],[24,[\"sendAction\"]],[24,[\"themeInstance\"]],[24,[\"expandRow\"]],[24,[\"collapseRow\"]]]]]]],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"component\",[[24,[\"expandedRowComponent\"]]],[[\"record\",\"visibleProcessedColumns\",\"index\",\"clickOnRow\",\"sendAction\",\"themeInstance\",\"expandRow\",\"collapseRow\"],[[24,[\"record\"]],[24,[\"visibleProcessedColumns\"]],[24,[\"index\"]],[24,[\"clickOnRow\"]],[24,[\"sendAction\"]],[24,[\"themeInstance\"]],[24,[\"expandRow\"]],[24,[\"collapseRow\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/models-table/row-expand/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/models-table/table-body/component", ["exports", "ember-models-table/components/models-table/table-body"], function (_exports, _tableBody) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _tableBody.default.extend({
    actions: {
      clickOnRowExpand(index, record) {
        if (this.themeInstance.selectRowOnExpandClick) {
          this.clickOnRow(index, record);
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/models-table/table-body/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "otmlqMXf",
    "block": "{\"symbols\":[\"tb\",\"record\",\"index\",\"groupedValue\",\"groupedIndex\",\"groupedItems\",\"gi\",\"row-gr\",\"record\",\"index\",\"&default\"],\"statements\":[[4,\"with\",[[28,\"hash\",null,[[\"columns-hidden\",\"row\",\"row-expand\",\"no-data\",\"row-grouping\",\"allColumnsAreHidden\",\"visibleContent\",\"visibleProcessedColumns\",\"expandedItems\",\"groupedVisibleContentValuesOrder\",\"toggleGroupedRowsSelection\",\"toggleGroupedRowsExpands\",\"groupedVisibleContent\",\"useDataGrouping\",\"sendAction\",\"themeInstance\"],[[28,\"component\",[[24,[\"themeInstance\",\"components\",\"columns-hidden\"]]],[[\"columnsCount\",\"sendAction\",\"themeInstance\"],[[24,[\"columnsCount\"]],[24,[\"sendAction\"]],[24,[\"themeInstance\"]]]]],[28,\"component\",[[24,[\"themeInstance\",\"components\",\"row\"]]],[[\"visibleProcessedColumns\",\"groupingRowComponent\",\"collapsedGroupValues\",\"currentGroupingPropertyName\",\"clickOnRow\",\"doubleClickOnRow\",\"hoverOnRow\",\"outRow\",\"sendAction\",\"expandRow\",\"collapseRow\",\"expandAllRows\",\"collapseAllRows\",\"themeInstance\",\"selectedItems\",\"expandedItems\",\"displayGroupedValueAs\",\"toggleGroupedRows\",\"toggleGroupedRowsSelection\",\"toggleGroupedRowsExpands\"],[[24,[\"visibleProcessedColumns\"]],[24,[\"groupingRowComponent\"]],[24,[\"collapsedGroupValues\"]],[24,[\"currentGroupingPropertyName\"]],[24,[\"clickOnRow\"]],[24,[\"doubleClickOnRow\"]],[24,[\"hoverOnRow\"]],[24,[\"outRow\"]],[24,[\"sendAction\"]],[24,[\"expandRow\"]],[24,[\"collapseRow\"]],[24,[\"expandAllRows\"]],[24,[\"collapseAllRows\"]],[24,[\"themeInstance\"]],[24,[\"selectedItems\"]],[24,[\"expandedItems\"]],[24,[\"displayGroupedValueAs\"]],[24,[\"toggleGroupedRows\"]],[24,[\"toggleGroupedRowsSelection\"]],[24,[\"toggleGroupedRowsExpands\"]]]]],[28,\"component\",[[24,[\"themeInstance\",\"components\",\"row-expand\"]]],[[\"expandedRowComponent\",\"selectedItems\",\"processedColumns\",\"visibleProcessedColumns\",\"clickOnRow\",\"sendAction\",\"themeInstance\",\"expandRow\",\"collapseRow\"],[[24,[\"expandedRowComponent\"]],[24,[\"selectedItems\"]],[24,[\"processedColumns\"]],[24,[\"visibleProcessedColumns\"]],[28,\"action\",[[23,0,[]],\"clickOnRowExpand\"],null],[24,[\"sendAction\"]],[24,[\"themeInstance\"]],[24,[\"expandRow\"]],[24,[\"collapseRow\"]]]]],[28,\"component\",[[24,[\"themeInstance\",\"components\",\"no-data\"]]],[[\"columnsCount\",\"displayGroupedValueAs\",\"sendAction\",\"themeInstance\"],[[24,[\"visibleProcessedColumns\",\"length\"]],[24,[\"displayGroupedValueAs\"]],[24,[\"sendAction\"]],[24,[\"themeInstance\"]]]]],[28,\"component\",[[24,[\"themeInstance\",\"components\",\"row-grouping\"]]],[[\"groupingRowComponent\",\"currentGroupingPropertyName\",\"visibleProcessedColumns\",\"toggleGroupedRows\",\"displayGroupedValueAs\",\"toggleGroupedRowsSelection\",\"toggleGroupedRowsExpands\",\"themeInstance\",\"sendAction\"],[[24,[\"groupingRowComponent\"]],[24,[\"currentGroupingPropertyName\"]],[24,[\"visibleProcessedColumns\"]],[24,[\"toggleGroupedRows\"]],[24,[\"displayGroupedValueAs\"]],[24,[\"toggleGroupedRowsSelection\"]],[24,[\"toggleGroupedRowsExpands\"]],[24,[\"themeInstance\"]],[24,[\"sendAction\"]]]]],[24,[\"allColumnsAreHidden\"]],[24,[\"visibleContent\"]],[24,[\"visibleProcessedColumns\"]],[24,[\"expandedItems\"]],[24,[\"groupedVisibleContentValuesOrder\"]],[24,[\"toggleGroupedRowsSelection\"]],[24,[\"toggleGroupedRowsExpands\"]],[24,[\"groupedVisibleContent\"]],[24,[\"useDataGrouping\"]],[24,[\"sendAction\"]],[24,[\"themeInstance\"]]]]]],null,{\"statements\":[[4,\"if\",[[25,11]],null,{\"statements\":[[0,\"    \"],[14,11,[[23,1,[]]]],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"allColumnsAreHidden\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"component\",[[23,1,[\"columns-hidden\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"useDataGrouping\"]]],null,{\"statements\":[[4,\"each\",[[24,[\"groupedVisibleContentValuesOrder\"]]],null,{\"statements\":[[4,\"with\",[[28,\"filter-by\",[[24,[\"currentGroupingPropertyName\"]],[23,4,[]],[24,[\"groupedArrangedContent\"]]],null]],null,{\"statements\":[[4,\"with\",[[28,\"hash\",null,[[\"selectedGroupedItems\",\"expandedGroupedItems\",\"visibleGroupedItems\"],[[28,\"intersect\",[[24,[\"selectedItems\"]],[23,6,[]]],null],[28,\"intersect\",[[24,[\"expandedItems\"]],[23,6,[]]],null],[28,\"object-at\",[[23,5,[]],[24,[\"groupedVisibleContent\"]]],null]]]]],null,{\"statements\":[[4,\"with\",[[28,\"component\",[[23,1,[\"row-grouping\"]]],[[\"groupedValue\",\"groupedLength\",\"groupedItems\",\"visibleGroupedItems\",\"selectedGroupedItems\",\"expandedGroupedItems\"],[[23,4,[]],[23,6,[\"length\"]],[23,6,[]],[23,7,[\"visibleGroupedItems\"]],[23,7,[\"selectedGroupedItems\"]],[23,7,[\"expandedGroupedItems\"]]]]]],null,{\"statements\":[[4,\"if\",[[28,\"is-equal\",[[24,[\"displayGroupedValueAs\"]],\"row\"],null]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"component\",[[23,8,[]]],[[\"groupIsCollapsed\",\"visibleGroupedLength\"],[[28,\"exists-in\",[[24,[\"collapsedGroupValues\"]],[23,4,[]]],null],[23,7,[\"visibleGroupedItems\",\"length\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[28,\"exists-in\",[[24,[\"collapsedGroupValues\"]],[23,4,[]]],null]],null,{\"statements\":[[4,\"if\",[[28,\"is-equal\",[[24,[\"displayGroupedValueAs\"]],\"column\"],null]],null,{\"statements\":[[0,\"                    \"],[1,[28,\"component\",[[23,8,[]]],[[\"groupIsCollapsed\",\"visibleGroupedLength\"],[true,[23,7,[\"visibleGroupedItems\",\"length\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"each\",[[23,7,[\"visibleGroupedItems\"]]],null,{\"statements\":[[0,\"                    \"],[1,[28,\"component\",[[23,1,[\"row\"]]],[[\"record\",\"index\",\"groupedValue\",\"groupedLength\",\"groupedItems\",\"groupSummaryRowComponent\",\"visibleGroupedItems\",\"selectedGroupedItems\",\"expandedGroupedItems\",\"isFirstGroupedRow\",\"expandedGroupItemsCount\",\"isSelected\",\"isExpanded\"],[[23,9,[]],[23,10,[]],[23,4,[]],[23,6,[\"length\"]],[23,6,[]],[24,[\"groupSummaryRowComponent\"]],[23,7,[\"visibleGroupedItems\"]],[23,7,[\"selectedGroupedItems\"]],[23,7,[\"expandedGroupedItems\"]],[28,\"is-equal\",[[23,10,[]],0],null],[28,\"get\",[[28,\"intersect\",[[24,[\"expandedItems\"]],[23,7,[\"visibleGroupedItems\"]]],null],\"length\"],null],[28,\"exists-in\",[[24,[\"selectedItems\"]],[23,9,[]]],null],[28,\"exists-in\",[[24,[\"expandedItems\"]],[23,9,[]]],null]]]],false],[0,\"\\n\"],[4,\"if\",[[28,\"exists-in\",[[24,[\"expandedItems\"]],[23,9,[]]],null]],null,{\"statements\":[[0,\"                      \"],[1,[28,\"component\",[[23,1,[\"row-expand\"]]],[[\"record\",\"index\",\"isSelected\"],[[23,9,[]],[23,10,[]],[28,\"exists-in\",[[24,[\"selectedItems\"]],[23,9,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[9,10]},null],[4,\"if\",[[24,[\"groupSummaryRowComponent\"]]],null,{\"statements\":[[0,\"                    \"],[1,[28,\"component\",[[24,[\"groupSummaryRowComponent\"]]],[[\"visibleProcessedColumns\",\"sendAction\",\"themeInstance\",\"groupedItems\",\"visibleGroupedItems\",\"selectedGroupedItems\",\"expandedGroupedItems\"],[[24,[\"visibleProcessedColumns\"]],[24,[\"sendAction\"]],[24,[\"themeInstance\"]],[23,6,[]],[23,7,[\"visibleGroupedItems\"]],[23,7,[\"selectedGroupedItems\"]],[23,7,[\"expandedGroupedItems\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[8]},null]],\"parameters\":[7]},null]],\"parameters\":[6]},null]],\"parameters\":[4,5]},{\"statements\":[[0,\"          \"],[1,[28,\"component\",[[23,1,[\"no-data\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[4,\"each\",[[24,[\"visibleContent\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"component\",[[23,1,[\"row\"]]],[[\"record\",\"index\",\"isSelected\",\"isExpanded\"],[[23,2,[]],[23,3,[]],[28,\"exists-in\",[[24,[\"selectedItems\"]],[23,2,[]]],null],[28,\"exists-in\",[[24,[\"expandedItems\"]],[23,2,[]]],null]]]],false],[0,\"\\n\"],[4,\"if\",[[28,\"exists-in\",[[24,[\"expandedItems\"]],[23,2,[]]],null]],null,{\"statements\":[[0,\"            \"],[1,[28,\"component\",[[23,1,[\"row-expand\"]]],[[\"expandedRowComponent\",\"record\",\"index\",\"isSelected\"],[[24,[\"expandedRowComponent\"]],[23,2,[]],[23,3,[]],[28,\"exists-in\",[[24,[\"selectedItems\"]],[23,2,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[2,3]},{\"statements\":[[0,\"          \"],[1,[28,\"component\",[[23,1,[\"no-data\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/models-table/table-body/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-address/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'address' object
     * arrays. The class manages the maintenance of an array of address
     * objects using the md-object-table class.
     *
     * @class md-address
     * @constructor
     * @requires md-object-table
     */

    attributeBindings: ['data-spy'],
    /**
     * mdJSON object containing the 'address' array.
     *
     * @property model
     * @type Object
     * @required
     */

    /**
     * List of mdJSON 'address' object attributes to display in
     * md-object-table to aid in choosing the address to edit or
     * delete.
     * The property is passed to md-object-table for configuration.
     *
     * @property attributes
     * @type String
     * @default ''
     */
    attributes: '',
    /**
     * Name to place on the mdEditor panel header for entry and edit of
     * 'address' objects.
     * The property is passed to md-object-table for configuration.
     *
     * @property label
     * @type String
     * @default 'Address'
     */
    label: 'Address',
    templateClass: Ember.Object.extend({
      init() {
        this._super(...arguments);
        this.set('addressType', Ember.A());
        this.set('deliveryPoint', Ember.A());
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-address/md-address-block/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-address/md-address-block/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "9a5mJSU9",
    "block": "{\"symbols\":[\"dp\"],\"statements\":[[7,\"address\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"item\",\"deliveryPoint\"]]],null,{\"statements\":[[0,\"    \"],[1,[23,1,[]],false],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[1,[24,[\"item\",\"city\"]],false],[0,\", \"],[1,[24,[\"item\",\"administrativeArea\"]],false],[0,\" \"],[1,[24,[\"item\",\"postalCode\"]],false],[0,\"\\n  \"],[1,[24,[\"item\",\"country\"]],false],[7,\"br\",true],[8],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"item\",\"addressType\"]]],null,{\"statements\":[[0,\"    \"],[7,\"strong\",true],[8],[1,[28,\"join\",[\", \",[24,[\"item\",\"addressType\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-address/md-address-block/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-address/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ad+DH+nG",
    "block": "{\"symbols\":[\"address\",\"line\",\"&default\"],\"statements\":[[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"buttonText\",\"previewTemplate\",\"templateClass\",\"attributes\"],[[24,[\"model\"]],[24,[\"label\"]],\"Add Address\",\"object/md-address/md-address-block\",[24,[\"templateClass\"]],[24,[\"attributes\"]]]],{\"statements\":[[0,\"\\n\"],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"required\"],[8],[0,\"Address Type\"],[9],[0,\"\\n    \"],[1,[28,\"input/md-codelist-multi\",null,[[\"model\",\"path\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"required\",\"showValidations\",\"placeholder\"],[[23,1,[]],\"addressType\",true,true,false,\"addressType\",true,true,\"Select or enter one or more types\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"required\",\"plain\",\"value\"],[\"Street Line\",false,true,[23,1,[\"deliveryPoint\"]]]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,2,[\"item\",\"value\"]],\"Enter street address\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"class\",\"placeholder\",\"label\"],[[23,1,[\"city\"]],\"col-md-6\",\"City Name\",\"City\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"class\",\"placeholder\",\"label\"],[[23,1,[\"administrativeArea\"]],\"col-md-6\",\"State or Province\",\"State/Province\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"class\",\"placeholder\",\"label\"],[[23,1,[\"postalCode\"]],\"col-md-6\",\"Zip or Postal Code\",\"Postal Code\"]]],false],[0,\"\\n\\n\"],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group col-md-6\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"Country\"],[9],[0,\"\\n        \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"namePath\",\"tooltipPath\",\"width\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"placeholder\"],[[23,1,[\"country\"]],\"description\",\"codeName\",\"175px\",false,true,false,\"countries\",\"Enter a country code\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\",\"label\"],[[23,1,[\"description\"]],\"Address description\",\"Description\"]]],false],[0,\"\\n\\n\"]],\"parameters\":[1]},null],[14,3],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-address/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-allocation/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'amount': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'currency': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'currency', Ember.getWithDefault(model, 'currency', 'USD'));
        Ember.set(model, 'onlineResource', Ember.getWithDefault(model, 'onlineResource', []));
        Ember.set(model, 'responsibleParty', Ember.getWithDefault(model, 'responsibleParty', []));
      });
    },
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    attributeBindings: ['data-spy'],
    'data-spy': 'Allocation',
    tagName: 'form',
    amount: Ember.computed.alias('model.amount'),
    currency: Ember.computed.alias('model.currency')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-allocation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "t117aovF",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"plain\"],[false,false,true]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"text-info col-sm-2 col-xxl-1 required\"],[8],[0,\"Amount\"],[9],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"class\",\"type\",\"model\",\"valuePath\",\"step\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"col-sm-5 col-xxl-3\",\"number\",[23,0,[]],\"amount\",\"0.01\",\"Amount\",\"Enter amount for the allocation.\",[28,\"concat\",[[24,[\"profilePath\"]],\".amount\"],null],true]]],false],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"create\",\"model\",\"class\",\"mdCodeName\",\"namePath\",\"valuePath\",\"path\",\"label\",\"required\",\"tooltip\",\"icon\",\"allowClear\",\"placeholder\",\"profilePath\"],[false,[23,0,[]],\"col-sm-5 col-xxl-3\",\"currency\",\"codeName\",\"codeName\",\"currency\",\"Currency\",true,true,false,true,\"Choose unit of currency\",[28,\"concat\",[[24,[\"profilePath\"]],\".currency\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"sourceAllocationId\"]],\"Award ID\",\"The source's identifier for the allocation, e.g. award number.\",[28,\"concat\",[[24,[\"profilePath\"]],\".sourceAllocationId\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-select-contact\",null,[[\"label\",\"placeholder\",\"value\",\"contactType\",\"icon\",\"tooltip\",\"profilePath\"],[\"Source\",\"Pick contact that supplied funds\",[24,[\"model\",\"sourceId\"]],\"contacts\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".source\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-select-contact\",null,[[\"label\",\"placeholder\",\"value\",\"contactType\",\"icon\",\"tooltip\",\"profilePath\"],[\"Recipient\",\"Pick contact that received funds\",[24,[\"model\",\"recipientId\"]],\"contacts\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".recipient\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"plain\",\"required\",\"value\",\"profilePath\"],[\"Other Contacts\",false,false,[24,[\"model\",\"responsibleParty\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".otherContacts\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-boolean\",null,[[\"label\",\"text\",\"value\",\"profilePath\"],[\"Matching\",\"Matching funds or in-kind services\",[24,[\"model\",\"matching\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".matching\"],null]]]],false],[0,\"\\n\\n \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\"],[[24,[\"model\",\"comment\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".comment\"],null],\"Comment\",\"Enter any comments about the allocation.\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[28,\"is-array\",[[24,[\"model\",\"onlineResource\"]]],null]],null,{\"statements\":[[0,\"    \"],[1,[28,\"object/md-online-resource-array\",null,[[\"model\",\"profilePath\",\"class\",\"plain\",\"shadow\",\"data-spy\"],[[24,[\"model\",\"onlineResource\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".onlineResource\"],null],[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null],true,false,\"Online Resource\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-allocation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-array-table/component", ["exports", "mdeditor/mixins/object-template"], function (_exports, _objectTemplate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend(_objectTemplate.default, {
    /**
     * mdEditor class for input and edit of arrays of objects. The
     * component is rendered as an editable table.
     *
     * @class md-array-table
     * @constructor
     * @uses object-template
     */

    didReceiveAttrs() {
      this._super(...arguments);
      if (this.value) {
        this.applyTemplateArray('value');
      }
    },
    attributeBindings: ['data-spy'],
    /**
     * The array to render in the template
     *
     * @property value
     * @type {Array}
     * @default Ember.A()
     * @required
     */
    value: Ember.A(),
    /**
     * The template class to use for new items. This should be a constructor.
     * Objects should be created by extending Ember.Object.
     *  ```javascript
     *  Ember.Object.extend({
     *   foo: null,
     *   bar: Ember.A()
     *  }
     *  ```
     *
     * @property templateClass
     * @type {Any}
     * @constructor
     * @default null
     * @required
     */
    templateClass: null,
    /**
     * Comma-separated list of column headers to display in the table. If not
     * provided, the table header will not be created.
     *
     * @property columns
     * @type String
     */

    /**
     * Inital collapse state fo the panel.
     *
     * @property isCollapsed
     * @type {Boolean}
     * @default undefined
     */

    /**
     * The validation to apply to the array items.
     *
     * @property validation
     * @type {Ember.Mixin}
     * @default undefined
     */

    /**
     * Whether to render in a panel.
     *
     * @property plain
     * @type {Boolean}
     * @default false
     */
    plain: false,
    /**
     * Whether to render a panel drop-shadow.
     *
     * @property plain
     * @type {Boolean}
     * @default false
     */
    shadow: true,
    /**
     * Indicates whether at least one item is required is required in the value
     * array.
     *
     * @property required
     * @type {Boolean}
     * @default false
     */
    required: false,
    /**
     * The title for the panel. Should be in singular form.
     *
     * @property title
     * @type {String}
     * @default Item
     */
    title: 'Item',
    /**
     * The error message to display, if required = true. Overrides the validation
     * message.
     *
     * @property errorMessage
     * @type {String}
     * @default undefined
     */

    /**
     * The data-spy text. Defaults to the title.
     *
     * @property data-spy
     * @type {String}
     * @default "this.title"
     * @category computed
     */
    'data-spy': Ember.computed.oneWay('title'),
    /**
     * If true, an alert will be rendered with an "add" button when no items are
     * present.
     *
     * @property alertIfEmpty
     * @type {Boolean}
     * @default true
     */
    alertIfEmpty: true,
    /**
     * Array of column headers
     *
     * @property columnArray
     * @type {Array}
     * @readOnly
     * @category computed
     * @requires columns
     */
    columnArray: Ember.computed('columns', function () {
      let columns = this.columns;
      return typeof columns === 'string' ? columns.split(',') : null;
    }),
    /**
     * Render an alert if the items array is empty and alertIfEmpty is true.
     *
     * @property showAlert
     * @type {Boolean}
     * @default "false"
     * @readOnly
     * @category computed
     * @requires items.length,alertIfEmpty
     */
    showAlert: Ember.computed('arrayValues.[]', 'alertIfEmpty', function () {
      return this.get('arrayValues.length') === 0 && this.alertIfEmpty;
    }),
    /**
     * Uses isCollapsed if defined, otherwise inspects array length.
     *
     * @property collapsed
     * @type {Boolean}
     * @readOnly
     * @category computed
     * @requires isCollapsed
     */
    collapsed: Ember.computed('isCollapsed', 'arrayValues.[]', function () {
      let isCollapsed = this.isCollapsed;
      let value = this.arrayValues;
      if (isCollapsed !== undefined) {
        return isCollapsed;
      } else if (Ember.isArray(value) && Ember.get(value, 'length') > 0) {
        return false;
      } else {
        return true;
      }
    }),
    /**
     * Alias for values
     *
     * @property arrayValues
     * @type {Array}
     * @readOnly
     * @category computed
     * @requires value
     */
    arrayValues: Ember.computed.alias('value'),
    /**
     * The panel id selector
     *
     * @property panelId
     * @type {String}
     * @default "panel-{this.elementId}"
     * @readOnly
     * @category computed
     * @requires elementId
     */
    panelId: Ember.computed('elementId', function () {
      return 'panel-' + this.elementId;
    }),
    /**
     * The color of the counter displayed in the panel header
     *
     * @property pillColor
     * @type {String}
     * @readOnly
     * @category computed
     * @requires value.[]
     */
    pillColor: Ember.computed('value.[]', 'required', function () {
      let count = this.get('value.length') || 0;
      let required = this.required;
      return count === 0 ? required ? 'label-danger' : 'label-warning' : 'label-info';
    }),
    alertTipMessage: Ember.computed('tipModel', 'tipPath', 'errorMessage', function () {
      if (this.errorMessage) {
        return this.errorMessage;
      }
      return this.tipModel ? this.tipModel.get("validations.attrs.".concat(this.tipPath, ".message")) : null;
    }),
    onChange() {},
    /**
     * Focus the added row, or the last row on deletion.
     *
     * @method valueChanged
     * @return none
     */
    valueChanged() {
      Ember.run.schedule('afterRender', this, function () {
        let panel = this.$('.panel-collapse');
        let input = this.$('.panel-collapse tbody tr:last-of-type input').first();
        if (panel.hasClass('in')) {
          input.focus();
        } else {
          //add a one-time listener to wait until panel is open
          panel.one('shown.bs.collapse', function () {
            input.focus();
          });
          panel.collapse('show');
        }
      });
      this.onChange();
    },
    actions: {
      addItem: function addItem() {
        const Template = this.templateClass;
        const owner = Ember.getOwner(this);
        this.arrayValues.pushObject(Ember.typeOf(Template) === 'class' ? Template.create(owner.ownerInjection()) : {
          value: null
        });
        //this.templateAsObject ? {} : null);
        this.valueChanged();
      },
      deleteItem: function deleteItem(item, idx) {
        if (this.arrayValues.length > idx) {
          this.arrayValues.removeAt(idx);
        }
        this.valueChanged();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-array-table/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "2t14HFOx",
    "block": "{\"symbols\":[\"item\",\"index\",\"prop\",\"item\",\"index\",\"prop\",\"&default\"],\"statements\":[[4,\"unless\",[[24,[\"showAlert\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"plain\"]]],null,{\"statements\":[[0,\"    \"],[7,\"label\",true],[10,\"class\",\"show\"],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\" \"],[1,[28,\"unless\",[[24,[\"pluralTitle\"]],[28,\"pluralize\",[[24,[\"title\"]]],null],[24,[\"pluralTitle\"]]],null],false],[0,\"\\n        \"],[7,\"div\",true],[11,\"class\",[29,[\"label label-pill \",[22,\"pillColor\"]]]],[8],[0,\" \"],[1,[24,[\"value\",\"length\"]],false],[0,\" \"],[9],[0,\"\\n        \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",\"btn btn-xs btn-info pull-right\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\",[24,[\"value\"]]]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add \"],[1,[22,\"title\"],false],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[11,\"class\",[28,\"if\",[[24,[\"responsive\"]],\"table-responsive\"],null]],[8],[0,\"\\n\"],[0,\"    \"],[7,\"table\",true],[10,\"class\",\"table table-striped table-hover md-table-align-middle\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"columnArray\"]]],null,{\"statements\":[[0,\"            \"],[7,\"thead\",true],[8],[0,\"\\n              \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                \"],[7,\"th\",true],[8],[0,\"#\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[24,[\"columnArray\"]]],null,{\"statements\":[[0,\"                \"],[7,\"th\",true],[8],[1,[28,\"uc-words\",[[23,6,[]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[6]},null],[0,\"                \"],[7,\"th\",true],[8],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"arrayValues\"]]],null,{\"statements\":[[0,\"                \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"td\",true],[8],[1,[23,5,[]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                    \"],[14,7,[[28,\"hash\",null,[[\"item\",\"index\",\"profilePath\"],[[23,4,[]],[23,5,[]],[24,[\"profilePath\"]]]]]]],[0,\"\\n                    \"],[7,\"td\",true],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"md-button-column\"],[8],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"disabled\",\"onConfirm\"],[\"btn btn-xs btn-danger\",[28,\"if\",[[24,[\"simple\"]],[28,\"if\",[[23,4,[\"value\"]],null,\"disabled\"],null]],null],[28,\"action\",[[23,0,[]],\"deleteItem\",[24,[\"value\"]],[23,5,[]]],null]]],{\"statements\":[[0,\"                              \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[4,5]},{\"statements\":[[0,\"            \"],[7,\"tr\",true],[8],[0,\"\\n                \"],[7,\"td\",true],[11,\"colspan\",[28,\"add-em\",[[28,\"if\",[[24,[\"hideIndex\"]],1,2],null],[24,[\"columnArray\",\"length\"]]],null]],[8],[0,\"\\n                    \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\",[24,[\"value\"]]]],[8],[0,\"\\n                        \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add \"],[1,[22,\"title\"],false],[0,\"\\n                    \"],[9],[0,\"\\n                \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[11,\"class\",[29,[\"panel panel-default \",[28,\"if\",[[24,[\"shadow\"]],\"box-shadow--4dp\"],null]]]],[8],[0,\"\\n\\n          \"],[7,\"div\",true],[10,\"class\",\"panel-heading\"],[8],[0,\"\\n              \"],[7,\"h3\",true],[10,\"class\",\"panel-title md-panel-chevron\"],[8],[0,\"\\n                  \"],[7,\"a\",true],[10,\"data-toggle\",\"collapse\"],[11,\"aria-expanded\",[28,\"if\",[[24,[\"collapsed\"]],\"false\",\"true\"],null]],[11,\"class\",[28,\"if\",[[24,[\"collapsed\"]],\"collapsed\"],null]],[11,\"href\",[29,[\"#\",[22,\"panelId\"]]]],[11,\"aria-controls\",[29,[\"#\",[22,\"panelId\"]]]],[8],[0,\"\\n                      \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\" \"],[1,[28,\"unless\",[[24,[\"pluralTitle\"]],[28,\"pluralize\",[[24,[\"title\"]]],null],[24,[\"pluralTitle\"]]],null],false],[0,\"\\n                      \"],[7,\"div\",true],[11,\"class\",[29,[\"label label-pill \",[22,\"pillColor\"]]]],[8],[0,\" \"],[1,[24,[\"value\",\"length\"]],false],[0,\" \"],[9],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",\"btn btn-xs btn-info pull-right\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\"]],[8],[0,\"\\n                      \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add\\n                  \"],[9],[0,\"\\n              \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\\n          \"],[7,\"div\",true],[11,\"id\",[22,\"panelId\"]],[11,\"class\",[29,[\"panel-collapse \",[28,\"if\",[[24,[\"collapsed\"]],\"collapse\",\"in\"],null]]]],[8],[0,\"\\n              \"],[7,\"div\",true],[11,\"class\",[29,[\"panel-body \",[28,\"if\",[[24,[\"responsive\"]],\"table-responsive\"],null]]]],[8],[0,\"\\n\"],[0,\"                  \"],[7,\"table\",true],[10,\"class\",\"table table-striped table-hover fadeIn md-table-align-middle\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"columnArray\"]]],null,{\"statements\":[[0,\"                          \"],[7,\"thead\",true],[8],[0,\"\\n                            \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                              \"],[7,\"th\",true],[8],[0,\"#\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[24,[\"columnArray\"]]],null,{\"statements\":[[0,\"                              \"],[7,\"th\",true],[8],[1,[28,\"uc-words\",[[23,3,[]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"                              \"],[7,\"th\",true],[8],[9],[0,\"\\n                            \"],[9],[0,\"\\n                          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"arrayValues\"]]],null,{\"statements\":[[0,\"                              \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                                  \"],[7,\"td\",true],[8],[1,[23,2,[]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                                  \"],[14,7,[[28,\"hash\",null,[[\"item\",\"index\",\"profilePath\"],[[23,1,[]],[23,2,[]],[24,[\"profilePath\"]]]]]]],[0,\"\\n                                  \"],[7,\"td\",true],[8],[0,\"\\n                                      \"],[7,\"div\",true],[10,\"class\",\"md-button-column\"],[8],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"disabled\",\"onConfirm\"],[\"btn btn-xs btn-danger\",[28,\"if\",[[24,[\"simple\"]],[28,\"if\",[[23,1,[\"value\"]],null,\"disabled\"],null]],null],[28,\"action\",[[23,0,[]],\"deleteItem\",[23,1,[]],[23,2,[]]],null]]],{\"statements\":[[0,\"                                            \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"                                      \"],[9],[0,\"\\n                                  \"],[9],[0,\"\\n                              \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"                          \"],[7,\"tr\",true],[8],[0,\"\\n                              \"],[7,\"td\",true],[11,\"colspan\",[28,\"add-em\",[[28,\"if\",[[24,[\"hideIndex\"]],1,2],null],[24,[\"columnArray\",\"length\"]]],null]],[8],[0,\"\\n                                  \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\"]],[8],[0,\"\\n                                      \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add \"],[1,[22,\"title\"],false],[0,\"\\n                                  \"],[9],[0,\"\\n                              \"],[9],[0,\"\\n                          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                      \"],[9],[0,\"\\n                  \"],[9],[0,\"\\n              \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"control/md-alert-table\",null,[[\"title\",\"required\",\"addItem\",\"target\",\"tipMessage\"],[[24,[\"title\"]],[24,[\"required\"]],[28,\"action\",[[23,0,[]],\"addItem\"],null],[24,[\"arrayValues\"]],[24,[\"alertTipMessage\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-array-table/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-associated/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'associationType': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    store: Ember.inject.service(),
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'scope', Ember.getWithDefault(model, 'scope', {}));
        Ember.set(model, 'resourceType', Ember.getWithDefault(model, 'resourceType', []));
        Ember.set(model, 'resourceCitation', Ember.getWithDefault(model, 'resourceCitation', {}));
        Ember.set(model, 'metadataCitation', Ember.getWithDefault(model, 'metadataCitation', {}));
      });
    },
    tagName: 'form',
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default "false"
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    associationType: Ember.computed.alias('model.associationType'),
    linkedRecord: Ember.computed('model.mdRecordId', function () {
      let store = this.store;
      return store.peekAll('record').filterBy('recordId', Ember.get(this, 'model.mdRecordId')).get('firstObject');
    }),
    linkedAssociation: Ember.computed('linkedRecord.json.metadata.associatedResource.[]', function () {
      let ar = this.get('linkedRecord.json.metadata.associatedResource');
      if (!ar) {
        return null;
      }
      return ar.findBy('mdRecordId', this.recordId);
    }),
    linkedAssociationType: Ember.computed('linkedAssociation.associationType', {
      get() {
        return this.get('linkedAssociation.associationType');
      },
      set(key, value) {
        let assoc = this.linkedAssociation;
        let model = this.linkedRecord;
        if (!assoc) {
          Ember.set(model, 'json.metadata.associatedResource', Ember.getWithDefault(model, 'json.metadata.associatedResource', []));
          model.get('json.metadata.associatedResource').pushObject({
            mdRecordId: Ember.get(this, 'recordId'),
            associationType: value
          });
          model.notifyPropertyChange('hasDirtyHash');
          return value;
        }
        Ember.set(assoc, 'associationType', value);
        model.notifyPropertyChange('hasDirtyHash');
        return value;
      }
    }),
    editLinked(record) {
      return record;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-associated/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      this.profilePath = this.profilePath || 'preview';
    },
    store: Ember.inject.service(),
    classNameBindings: ['muted:text-muted'],
    /**
     * Whether to render the text muted.
     *
     * @property muted
     * @type {Boolean}
     * @default "true"
     */
    muted: true,
    citation: Ember.computed('item', 'item.mdRecordId', function () {
      if (!this.get('item.mdRecordId')) {
        return this.get('item.resourceCitation');
      }
      let store = this.store;
      let linked = store.peekAll('record').filterBy('recordId', Ember.get(this, 'item.mdRecordId')).get('firstObject.json.metadata.resourceInfo.citation');
      return linked || this.get('item.resourceCitation');
    }),
    metadataIdentifier: Ember.computed('item.{metadataCitation.identifier,mdRecordId}', function () {
      if (!this.get('item.mdRecordId')) {
        return this.get('item.metadataCitation.identifier.0');
      }
      let store = this.store;
      return store.peekAll('record').filterBy('recordId', Ember.get(this, 'item.mdRecordId')).get('firstObject.json.metadata.metadataInfo.metadataIdentifier');
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-associated/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "PrjMzDSV",
    "block": "{\"symbols\":[\"model\",\"meta\"],\"statements\":[[4,\"with\",[[24,[\"item\"]]],null,{\"statements\":[[0,\"  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal\"],[8],[0,\"\\n    \"],[7,\"dt\",true],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"text-info\"],[8],[0,\"Resource #\"],[1,[22,\"index\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"dd\",true],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-xxl-6\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\",\"profilePath\"],[\"Association Type\",[28,\"concat\",[[24,[\"profilePath\"]],\".associationType\"],null]]],{\"statements\":[[0,\"          \"],[1,[23,1,[\"associationType\"]],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"mdRecordId\"]]],null,{\"statements\":[[0,\"            (\"],[7,\"em\",true],[8],[0,\"linked\"],[9],[0,\")\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-xxl-6\"],[8],[0,\"\\n        \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\",\"profilePath\"],[\"Initiative Type\",[23,1,[\"initiativeType\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".initiativeType\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"object/md-citation/preview/body\",null,[[\"citation\",\"profilePath\"],[[24,[\"citation\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".resourceCitation\"],null]]]],false],[0,\"\\n\\n  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Metadata Identifier\"]],{\"statements\":[[4,\"with\",[[24,[\"metadataIdentifier\"]]],null,{\"statements\":[[0,\"      \"],[1,[23,2,[\"identifier\"]],false],[0,\" \"],[1,[28,\"if\",[[23,2,[\"namespace\"]],[28,\"concat\",[\"(\",[23,2,[\"namespace\"]],\")\"],null]],null],false],[0,\"\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"      \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No metadata identifier assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-associated/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-associated/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "z31kEmpA",
    "block": "{\"symbols\":[\"meta\",\"type\",\"metdata\",\"citation\",\"&default\"],\"statements\":[[1,[28,\"input/md-codelist\",null,[[\"label\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"path\",\"model\",\"placeholder\",\"profilePath\",\"data-spy\"],[\"Association Type\",true,true,false,false,true,true,\"associationType\",\"associationType\",[23,0,[]],\"Choose Type of Association\",[28,\"concat\",[[24,[\"profilePath\"]],\".associationType\"],null],\"Association Type\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-codelist\",null,[[\"label\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"path\",\"model\",\"placeholder\",\"profilePath\"],[\"Initiative Type\",true,true,false,false,true,true,\"initiativeType\",\"initiativeType\",[24,[\"model\"]],\"Choose Type of Initiative\",[28,\"concat\",[[24,[\"profilePath\"]],\".initiativeType\"],null]]]],false],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"model\",\"mdRecordId\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-resource-type-array\",null,[[\"plain\",\"value\",\"required\",\"data-spy\",\"profilePath\"],[false,[24,[\"model\",\"resourceType\"]],true,\"Resource Types\",[28,\"concat\",[[24,[\"profilePath\"]],\".resourceType\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n\\n\"],[4,\"with\",[[24,[\"model\",\"resourceCitation\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"profilePath\",\"simpleIdentifier\"],[[23,4,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".resourceCitation\"],null],true]]],false],[0,\"\\n\"]],\"parameters\":[4]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"profilePath\",\"shadow\",\"collapsible\",\"collapsed\"],[\"Metadata Citation\",[28,\"concat\",[[24,[\"profilePath\"]],\".metadataCitation\"],null],true,true,true]],{\"statements\":[[4,\"with\",[[24,[\"model\",\"metadataCitation\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"profilePath\",\"embedded\",\"simpleIdentifier\"],[[23,3,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".metadataCitation\"],null],true,true]]],false],[0,\"\\n\"]],\"parameters\":[3]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"shadow\",\"block\",\"muted\",\"collapsible\",\"collapsed\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\"],[\"Linked Record\",false,false,false,false,false,\"Edit\",[28,\"concat\",[\"success\",[28,\"unless\",[[24,[\"linkedRecord\"]],\"disabled\"],null]],null],[28,\"action\",[[23,0,[]],[24,[\"editLinked\"]],[24,[\"linkedRecord\"]]],null],\"pencil\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"linkedRecord\"]]],null,{\"statements\":[[4,\"object/md-citation/preview/body\",null,[[\"citation\",\"class\"],[[24,[\"linkedRecord\",\"json\",\"metadata\",\"resourceInfo\",\"citation\"]],\"text-muted\"]],{\"statements\":[[0,\"        \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Resource Type(s)\"]],{\"statements\":[[4,\"each\",[[24,[\"linkedRecord\",\"json\",\"metadata\",\"resourceInfo\",\"resourceType\"]]],null,{\"statements\":[[0,\"                  \"],[1,[23,2,[\"type\"]],false],[0,\":\\n\"],[4,\"if\",[[23,2,[\"name\"]]],null,{\"statements\":[[0,\"                      \"],[1,[23,2,[\"name\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                      \"],[7,\"em\",true],[8],[0,\"Not named\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                  \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"                      \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No types assigned!\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"linkedRecord\",\"json\",\"metadata\",\"metadataInfo\",\"metadataIdentifier\"]]],null,{\"statements\":[[0,\"          \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Metadata Identifier\"]],{\"statements\":[[0,\"                \"],[1,[23,1,[\"identifier\"]],false],[0,\" \"],[1,[28,\"if\",[[23,1,[\"namespace\"]],[28,\"concat\",[\"(\",[23,1,[\"namespace\"]],\")\"],null]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"card card-inverse card-danger\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n          \"],[7,\"h4\",true],[10,\"class\",\"card-title\"],[8],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\" Linked record is missing!\"],[9],[0,\"\\n          \"],[7,\"p\",true],[10,\"class\",\"card-text\"],[8],[0,\"Cannot find the linked record with id \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"mdRecordId\"]],false],[9],[0,\".\"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"recordId\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n        \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\",\"titleClass\"],[\"Linked Association Type\",\"wrapped\"]],{\"statements\":[[0,\"            \"],[1,[28,\"input/md-codelist\",null,[[\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"value\",\"placeholder\",\"profilePath\",\"data-spy\"],[true,true,false,false,true,true,\"associationType\",[24,[\"linkedAssociationType\"]],\"Choose Type of Association\",[28,\"concat\",[[24,[\"profilePath\"]],\".linkedAssociationType\"],null],false]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[14,5],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-associated/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-attribute/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.Template = _exports.Validations = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'codeName': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'dataType': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'allowNull': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'definition': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  const TemplateClass = Ember.Object.extend(Validations, {
    init() {
      this._super(...arguments);
      Ember.set(this, 'allowNull', true);
      Ember.set(this, 'attributeReference', {});
      Ember.set(this, 'alias', []);
      Ember.set(this, 'valueRange', []);
      Ember.set(this, 'timePeriod', []);
    }
  });
  _exports.Template = TemplateClass;
  const theComp = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'allowNull', Ember.getWithDefault(model, 'allowNull', false));
        Ember.set(model, 'reference', Ember.getWithDefault(model, 'reference', {}));
        Ember.set(model, 'alias', Ember.getWithDefault(model, 'alias', []));
        Ember.set(model, 'valueRange', Ember.getWithDefault(model, 'valueRange', []));
        Ember.set(model, 'timePeriod', Ember.getWithDefault(model, 'timePeriod', []));
      });
    },
    /**
     * The string representing the path in the profile object for the domain.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the domain.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    codeName: Ember.computed.alias('model.codeName'),
    dataType: Ember.computed.alias('model.dataType'),
    definition: Ember.computed.alias('model.definition'),
    allowNull: Ember.computed.alias('model.allowNull'),
    domains: Ember.computed.alias('dictionary.domain'),
    domainList: Ember.computed('domains.{@each.domainId,@each.codeName}', function () {
      let domains = Ember.get(this, 'domains') || [];
      return domains.map(domain => {
        if (Ember.get(domain, 'domainId')) {
          return {
            codeId: Ember.get(domain, 'domainId'),
            codeName: Ember.get(domain, 'codeName'),
            tooltip: Ember.get(domain, 'description')
          };
        }
      });
    }),
    rangeTemplate: Ember.Object.extend((0, _emberCpValidations.buildValidations)({
      'minRangeValue': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      })],
      'maxRangeValue': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      })]
    }), {
      init() {
        this._super(...arguments);
      }
    })
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-attribute/preview/component", ["exports", "mdeditor/pods/components/object/md-attribute/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend(_component.Validations, {
    tagName: '',
    model: Ember.computed.alias('item'),
    codeName: Ember.computed.alias('model.codeName'),
    dataType: Ember.computed.alias('model.dataType'),
    definition: Ember.computed.alias('model.definition'),
    allowNull: Ember.computed.alias('model.allowNull')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-attribute/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "HhbI7916",
    "block": "{\"symbols\":[],\"statements\":[[7,\"td\",true],[10,\"class\",\"property\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,0,[]],\"codeName\",\"Descriptive name for the attribute(column).\",[28,\"concat\",[[24,[\"profilePath\"]],\".attribute.codeName\"],null],true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"property\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-codelist\",null,[[\"create\",\"tooltip\",\"icon\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"model\",\"path\",\"placeholder\",\"profilePath\"],[true,true,false,true,true,\"dataType\",[23,0,[]],\"dataType\",\"The datatype for the attribute(column).\",[28,\"concat\",[[24,[\"profilePath\"]],\".attribute.dataType\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"property\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,0,[]],\"definition\",\"A brief definition of the attribute(column).\",[28,\"concat\",[[24,[\"profilePath\"]],\".attribute.definition\"],null],true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"property text-center\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-boolean\",null,[[\"required\",\"value\",\"profilePath\"],[true,[24,[\"model\",\"allowNull\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".attribute.allowNull\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-attribute/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-attribute/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "aAIDbDN5",
    "block": "{\"symbols\":[\"tm\",\"rg\",\"profilePath\",\"val\"],\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"required\"],[\"Attribute Information\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".information\"],null],\"Attribute Information\",true]],{\"statements\":[[4,\"with\",[[28,\"concat\",[[24,[\"profilePath\"]],\".information\"],null]],null,{\"statements\":[[0,\"    \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"label\",\"data-spy\",\"profilePath\",\"class\"],[[23,0,[]],\"codeName\",\"The code used to identify this attribute, e.g.the column name.\",\"Code Name\",\"Code Name\",[28,\"concat\",[[23,3,[]],\".codeName\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"autoresize\",\"placeholder\",\"label\",\"data-spy\",\"embedded\",\"profilePath\"],[[23,0,[\"definition\"]],true,true,\"A brief description of the attribute.\",\"Definition\",\"Definition\",true,[28,\"concat\",[[23,3,[]],\".definition\"],null]]]],false],[0,\"\\n\\n\"],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"create\",\"tooltip\",\"icon\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"model\",\"path\",\"placeholder\",\"label\",\"data-spy\",\"profilePath\",\"class\"],[true,true,false,true,true,\"dataType\",[23,0,[]],\"dataType\",\"The datatype for the attribute(column).\",\"Data Type\",\"Data Type\",[28,\"concat\",[[23,3,[]],\".dataType\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-boolean\",null,[[\"label\",\"required\",\"text\",\"value\",\"profilePath\"],[\"Allow Null?\",true,\"Allow null values\",[24,[\"model\",\"allowNull\"]],[28,\"concat\",[[23,3,[]],\".allowNull\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\",\"data-spy\",\"class\"],[[24,[\"model\",\"commonName\"]],\"Enter a short common(alternate) name for the attribute.\",\"Common Name\",[28,\"concat\",[[23,3,[]],\".commonName\"],null],\"Common Name\",\"md-embedded\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"label\",\"value\",\"mapped\",\"create\",\"tooltip\",\"placeholder\",\"profilePath\",\"data-spy\",\"class\"],[\"Domain\",[24,[\"model\",\"domainId\"]],[24,[\"domainList\"]],false,true,\"Select or enter the domain for this attribute.\",[28,\"concat\",[[23,3,[]],\".domain\"],null],\"Domain\",\"md-embedded\"]]],false],[0,\"\\n\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"required\",\"plain\",\"profilePath\",\"data-spy\",\"class\",\"value\"],[\"Alias\",false,true,[28,\"concat\",[[23,3,[]],\".alias\"],null],\"Alias\",\"md-embedded\",[24,[\"model\",\"alias\"]]]],{\"statements\":[[0,\"      \"],[7,\"td\",true],[8],[0,\"\\n          \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,4,[\"item\",\"value\"]],\"Alternate names used to identify this attribute.\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[4]},null],[0,\"\\n\"],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"units\"]],\"A unit-of-measure for the attribute, e.g. 'meter', 'atmosphere', 'liter'\",\"Units\",[28,\"concat\",[[23,3,[]],\".units\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"type\",\"step\",\"model\",\"valuePath\",\"placeholder\",\"label\",\"profilePath\"],[\"number\",\".1\",[24,[\"model\"]],\"unitsResolution\",\"The smallest unit increment for the attribute value.\",\"Units Resolution\",[28,\"concat\",[[23,3,[]],\".unitsResolution\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-boolean\",null,[[\"label\",\"required\",\"text\",\"value\",\"profilePath\"],[\"Case Sensitive?\",true,\"Is the attribute content case sensitive?\",[24,[\"model\",\"isCaseSensitive\"]],[28,\"concat\",[[23,3,[]],\".caseSensitive\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"type\",\"model\",\"valuePath\",\"placeholder\",\"label\",\"profilePath\"],[\"number\",[24,[\"model\"]],\"fieldWidth\",\"The number of characters allowed in the attribute value.\",\"Field Width\",[28,\"concat\",[[23,3,[]],\".fieldWidth\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"missingValue\"]],\"The code which represents missing data.\",\"Missing Value\",[28,\"concat\",[[23,3,[]],\".missingValue\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"minValue\"]],\"The minimum value permissible for this attribute.\",\"Minimum Value\",[28,\"concat\",[[23,3,[]],\".minValue\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"maxValue\"]],\"The maximum value permissible for this attribute.\",\"Maximum Value\",[28,\"concat\",[[23,3,[]],\".maxValue\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[3]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"object/md-array-table\",null,[[\"columns\",\"value\",\"title\",\"plain\",\"templateClass\",\"profilePath\",\"data-spy\"],[\"Min Value, Max Value\",[24,[\"model\",\"valueRange\"]],\"Value Range\",false,[24,[\"rangeTemplate\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".valueRange\"],null],\"Value Range\"]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,2,[\"item\"]],\"minRangeValue\",\"The least value that the attribute can be assigned.\",[28,\"concat\",[[24,[\"profilePath\"]],\".minValue\"],null],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,2,[\"item\"]],\"maxRangeValue\",\"The greatest value that the attribute can be assigned.\",[28,\"concat\",[[24,[\"profilePath\"]],\".maxValue\"],null],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"data-spy\",\"buttonText\",\"ellipsis\",\"profilePath\",\"attributes\"],[[24,[\"model\",\"timePeriod\"]],\"Time Period\",\"Time Period\",\"Add Time Period\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".timePeriod\"],null],\"startDateTime,endDateTime\"]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-timePeriod\",null,[[\"model\",\"profilePath\"],[[23,1,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".timePeriod\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"profilePath\",\"shadow\",\"collapsible\",\"collapsed\"],[\"Attribute Reference\",[28,\"concat\",[[24,[\"profilePath\"]],\".attributeReference\"],null],true,true,true]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"profilePath\",\"model\",\"simpleIdentifier\"],[[28,\"concat\",[[24,[\"profilePath\"]],\".attributeReference\"],null],[24,[\"model\",\"attributeReference\"]],true]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-attribute/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-bbox/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'north': [(0, _emberCpValidations.validator)('number', {
      allowNone: false,
      gte: -90,
      lte: 90
    })],
    'south': [(0, _emberCpValidations.validator)('number', {
      allowNone: false,
      gte: -90,
      lte: 90
    }), (0, _emberCpValidations.validator)('number', {
      lte: Ember.computed.readOnly('model.north')
    })],
    'east': [(0, _emberCpValidations.validator)('number', {
      allowNone: false,
      gte: -180,
      lte: 180
    })],
    'west': [(0, _emberCpValidations.validator)('number', {
      allowNone: false,
      gte: -180,
      lte: 180
    }), (0, _emberCpValidations.validator)('number', {
      lte: Ember.computed.readOnly('model.east')
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    classNames: ['form'],
    north: Ember.computed.alias('model.northLatitude'),
    south: Ember.computed.alias('model.southLatitude'),
    east: Ember.computed.alias('model.eastLongitude'),
    west: Ember.computed.alias('model.westLongitude')

    // btnText: computed('isTruelyValid', function() {
    //   let text = this.get('validations.isTruelyValid') ? ''
    //   this.set('btnText', )
    // }),
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-bbox/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "4r+KTdNc",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"shadow\"],[false,false,[24,[\"profilePath\"]],false,false]],{\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-lg-6\"],[8],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"type\",\"step\",\"model\",\"valuePath\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"number\",\"0.0001\",[23,0,[]],\"north\",\"North\",\"Enter north latitude.\",[28,\"concat\",[[24,[\"profilePath\"]],\".north\"],null],true]]],false],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"type\",\"step\",\"model\",\"valuePath\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"number\",\"0.0001\",[23,0,[]],\"east\",\"East\",\"Enter east longitude.\",[28,\"concat\",[[24,[\"profilePath\"]],\".east\"],null],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-lg-6\"],[8],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"type\",\"step\",\"model\",\"valuePath\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"number\",\"0.0001\",[23,0,[]],\"south\",\"South\",\"Enter south latitude.\",[28,\"concat\",[[24,[\"profilePath\"]],\".south\"],null],true]]],false],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"type\",\"step\",\"model\",\"valuePath\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"number\",\"0.0001\",[23,0,[]],\"west\",\"West\",\"Enter west longitude.\",[28,\"concat\",[[24,[\"profilePath\"]],\".west\"],null],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[14,1],[0,\"\\n\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-bbox/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-citation-array/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      if (!this.model) {
        this.set('model', Ember.A());
      }
    },
    /**
     * mdEditor class for input and edit of mdJSON 'citation' object
     * arrays.
     * The class manages the maintenance of an array of citation
     * objects using the md-object-table class.
     *
     * @module mdeditor
     * @submodule components-object
     * @class md-citation-array
     * @constructor
     */

    attributeBindings: ['data-spy'],
    /**
     * mdJSON object containing the 'citation' array.
     *
     * @property model
     * @type Object
     * @required
     */

    /**
     * List of mdJSON 'citation' object attributes to display in
     * md-object-table to aid in choosing the citation to edit or
     * delete.
     * The property is passed to md-object-table for configuration.
     *
     * @property attributes
     * @type String
     * @default 'title'
     */
    attributes: 'title',
    /**
     * Name to place on the mdEditor panel header for entry and edit of
     * 'citation' objects.
     * The property is passed to md-object-table for configuration.
     *
     * @property label
     * @type String
     * @default 'Citation'
     */
    label: 'Citation',
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: Ember.Object.extend({
      init() {
        this._super(...arguments);
        //this.set('authority', {});
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-citation-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "5Ft5kJYQ",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"object/md-objectroute-table\",null,[[\"items\",\"header\",\"buttonText\",\"ellipsis\",\"templateClass\",\"editItem\",\"attributes\",\"profilePath\"],[[24,[\"model\"]],[24,[\"label\"]],\"Add Citation\",[24,[\"ellipsis\"]],[24,[\"templateClass\"]],[24,[\"editItem\"]],[24,[\"attributes\"]],[24,[\"profilePath\"]]]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-citation-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-citation/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.formatCitation = void 0;
  const formatCitation = function formatCitation(model) {
    Ember.set(model, 'responsibleParty', Ember.getWithDefault(model, 'responsibleParty', []));
    Ember.set(model, 'date', Ember.getWithDefault(model, 'date', []));
    Ember.set(model, 'alternateTitle', Ember.getWithDefault(model, 'alternateTitle', []));
    Ember.set(model, 'presentationForm', Ember.getWithDefault(model, 'presentationForm', []));
    Ember.set(model, 'onlineResource', Ember.getWithDefault(model, 'onlineResource', []));
    Ember.set(model, 'identifier', Ember.getWithDefault(model, 'identifier', []));
    Ember.set(model, 'otherCitationDetails', Ember.getWithDefault(model, 'otherCitationDetails', []));
    Ember.set(model, 'graphic', Ember.getWithDefault(model, 'graphic', []));
    Ember.set(model, 'series', Ember.getWithDefault(model, 'series', {}));
    return model;
  };
  _exports.formatCitation = formatCitation;
  const theComp = Ember.Component.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'citation' objects.
     *
     * ```handlebars
     * \{{object/md-citation
     *  model=citation
     *  profilePath="path"
     *  simpleIdentifier=false
     *  embedded=false
     * }}
     * ```
     * @module mdeditor
     * @submodule components-object
     * @class md-citation
     * @constructor
     */

    didReceiveAttrs() {
      this._super(...arguments);

      //let model = getWithDefault(this, 'model', {}) || {};

      Ember.run.once(this, function () {
        this.set('model', Ember.getWithDefault(this, 'model', {}));
        formatCitation(this.model);
      });
    },
    tagName: 'form',
    /**
     * The string representing the path in the profile object for the citation.
     *
     * @property profilePath
     * @type {String}
     * @default "false"
     * @required
     */

    /**
     * The object to use as the data model for the citation.
     *
     * @property model
     * @type {Object}
     * @required
     */

    /**
     * Indicates whether the citation is embedded and should prevent recursion.
     *
     * @property embedded
     * @type {Boolean}
     * @default "false"
     */
    embedded: false,
    /**
     * The data-spy title, set to false to hide.
     *
     * @property data-spy
     * @type {String}
     * @default "Citation"
     */
    'data-spy': 'Citation',
    /**
     * Indicates whether the citation identifier Component should be rendered using
     * the inline form: md-identifier-object-table.
     *
     * @property simpleIdentifier
     * @type {Boolean}
     * @default "false"
     */
    simpleIdentifier: false
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-citation/preview/body/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      this.profilePath = this.profilePath || 'preview';
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-citation/preview/body/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "OQBJJ+4w",
    "block": "{\"symbols\":[\"party\",\"contact\",\"index\",\"id\",\"date\",\"title\",\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n      \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\",\"profilePath\"],[\"Title\",[24,[\"citation\",\"title\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.title\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\",\"profilePath\"],[\"Alternate Titles\",[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.alternateTitle\"],null]]],{\"statements\":[[4,\"each\",[[24,[\"citation\",\"alternateTitle\"]]],null,{\"statements\":[[0,\"              \"],[1,[23,6,[]],false],[0,\"\\n              \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[6]},{\"statements\":[[0,\"              \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No alternate titles assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\",\"profilePath\"],[\"Dates\",[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.dates\"],null]]],{\"statements\":[[4,\"each\",[[24,[\"citation\",\"date\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"moment-format\",[[23,5,[\"date\"]],\"MMMM Do YYYY\"],null],false],[0,\"\\n              (\"],[1,[23,5,[\"dateType\"]],false],[0,\")\\n              \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[5]},{\"statements\":[[0,\"              \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No dates assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\",\"profilePath\"],[\"Identifier\",[28,\"concat\",[[24,[\"profilePath\"]],\".identifier\"],null]]],{\"statements\":[[4,\"each\",[[24,[\"citation\",\"identifier\"]]],null,{\"statements\":[[0,\"              \"],[1,[23,4,[\"identifier\"]],false],[0,\" \"],[1,[28,\"if\",[[23,4,[\"namespace\"]],[28,\"concat\",[\"(\",[23,4,[\"namespace\"]],\")\"],null]],null],false],[0,\"\\n              \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[4]},{\"statements\":[[0,\"              \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No identifiers assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\",\"profilePath\"],[\"Responsible Party\",[28,\"concat\",[[24,[\"profilePath\"]],\".responsibleParty\"],null]]],{\"statements\":[[4,\"each\",[[24,[\"citation\",\"responsibleParty\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"html-safe\",[[28,\"if\",[[23,1,[\"role\"]],[23,1,[\"role\"]],\"<em>No Roles assigned.</em>\"],null]],null],false],[0,\"\\n              (\\n\"],[4,\"each\",[[23,1,[\"party\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"if\",[[23,3,[]],\", \"],null],false],[0,\" \"],[1,[28,\"control/md-contact-link\",null,[[\"contactId\"],[[23,2,[\"contactId\"]]]]],false],[0,\"\\n\"]],\"parameters\":[2,3]},{\"statements\":[[0,\"                  \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No Contacts assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"              )\\n              \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"              \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No responsibility assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n  \"],[14,7],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-citation/preview/body/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-citation/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * Title for the card
     *
     * @property title
     * @type {String}
     * @default "Citation"
     * @required
     */
    title: "Citation",
    /**
     * Indicates if object is required.
     *
     * @property required
     * @type {Boolean}
     * @default "false"
     */
    required: false,
    /**
     * Indicates if object text is muted.
     *
     * @property muted
     * @type {Boolean}
     * @default "true"
     */
    muted: true,
    /**
     * Passed in action.
     *
     * @method editCitation
     * @param {String} scrollTo Identifier to scrollTo
     * @required
     * @return {undefined}
     */

    actions: {
      editCitation(scrollTo) {
        this.editCitation(scrollTo);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-citation/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "XWLuYtam",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"required\",\"muted\",\"spotlightEnabled\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\"],[[24,[\"title\"]],true,false,[24,[\"profilePath\"]],[24,[\"required\"]],[24,[\"muted\"]],[24,[\"spotlightEnabled\"]],\"Edit\",\"success\",[28,\"action\",[[23,0,[]],[24,[\"editCitation\"]],[28,\"dasherize\",[[24,[\"title\"]]],null]],null],\"pencil\"]],{\"statements\":[[0,\"\\n\"],[1,[28,\"object/md-citation/preview/body\",null,[[\"citation\",\"profilePath\"],[[24,[\"citation\"]],[24,[\"profilePath\"]]]]],false],[0,\"\\n\\n\"],[14,1],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n  \"],[7,\"button\",false],[12,\"name\",\"button\"],[12,\"class\",\"btn btn-success pull-right\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"action\",[[23,0,[]],[24,[\"editCitation\"]],[28,\"dasherize\",[[24,[\"title\"]]],null]],null]]],[8],[0,\"\\n    \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit Citation\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-citation/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "NVqU95sp",
    "block": "{\"symbols\":[\"val\",\"alt\",\"&default\"],\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"class\",\"shadow\",\"required\"],[\"Basic Information\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Basic Information\"],null],[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null],[28,\"if\",[[24,[\"embedded\"]],false,true],null],true]],{\"statements\":[[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"required\",\"profilePath\",\"data-spy\",\"class\"],[[24,[\"model\",\"title\"]],\"Enter the title for the resource.\",\"Title\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.title\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Title\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.alternateTitle\"],null]]],{\"statements\":[[4,\"object/md-simple-array-table\",null,[[\"data-spy\",\"title\",\"plain\",\"value\"],[false,\"Alternate Title\",true,[24,[\"model\",\"alternateTitle\"]]]],{\"statements\":[[0,\"        \"],[7,\"td\",true],[8],[0,\"\\n            \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,2,[\"item\",\"value\"]],\"Additional titles for the resource.\"]]],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\",\"data-spy\",\"class\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.dates\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Dates\"],null],\"md-embedded\"]],{\"statements\":[[0,\"    \"],[1,[28,\"object/md-date-array\",null,[[\"value\",\"plain\",\"data-spy\",\"profilePath\"],[[24,[\"model\",\"date\"]],true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.dates\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"embedded\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"edition\"]],\"Enter the edition.\",\"Edition\",[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.edition\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"presentationForm\"]],\"Presentation Form\",true,true,false,\"presentationForm\",false,\"Select or enter one or more forms.\",[28,\"concat\",[[24,[\"profilePath\"]],\".basicInformation.presentationForm\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"data-spy\",\"class\",\"collapsible\",\"collapsed\",\"required\",\"value\",\"profilePath\"],[\"Responsible Party\",[28,\"if\",[[24,[\"data-spy\"]],\"Responsible Parties\"],null],[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null],true,false,false,[24,[\"model\",\"responsibleParty\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".responsibleParty\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-online-resource-array\",null,[[\"model\",\"profilePath\",\"class\",\"data-spy\"],[[24,[\"model\",\"onlineResource\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".onlineResource\"],null],[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Online Resource\"],null]]]],false],[0,\"\\n\\n\\n\"],[1,[28,\"object/md-identifier-array\",null,[[\"model\",\"profilePath\",\"data-spy\",\"editItem\",\"class\",\"visibility\"],[[24,[\"model\",\"identifier\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".identifier\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Identifier\"],null],[24,[\"editIdentifier\"]],[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null],[28,\"if\",[[24,[\"simpleIdentifier\"]],false,true],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-identifier-object-table\",null,[[\"model\",\"profilePath\",\"data-spy\",\"visibility\",\"short\",\"class\"],[[24,[\"model\",\"identifier\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".identifierSimple\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Identifier\"],null],[28,\"if\",[[24,[\"simpleIdentifier\"]],true,false],null],[24,[\"shortIdentifier\"]],[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-identifier-object-table\",null,[[\"model\",\"profilePath\",\"data-spy\",\"visibility\",\"short\",\"class\"],[[24,[\"model\",\"identifier\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".identifierShort\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Identifier\"],null],false,true,[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null]]]],false],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"embedded\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"title\",\"profilePath\",\"data-spy\",\"content\"],[true,\"Series\",[28,\"concat\",[[24,[\"profilePath\"]],\".series\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Series\"],null],[24,[\"model\",\"series\"]]]],{\"statements\":[[0,\"    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"series\",\"seriesName\"]],\"Enter the name for the series.\",\"Name\",[28,\"concat\",[[24,[\"profilePath\"]],\".series.name\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"series\",\"seriesIssue\"]],\"Enter the issue for the series.\",\"Issue\",[28,\"concat\",[[24,[\"profilePath\"]],\".series.issue\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"series\",\"issuePage\"]],\"Enter the page(s) for the issue.\",\"Page\",[28,\"concat\",[[24,[\"profilePath\"]],\".series.page\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"required\",\"plain\",\"data-spy\",\"profilePath\",\"value\"],[\"Other Details\",false,false,[28,\"if\",[[24,[\"data-spy\"]],\"Other Details\"],null],[28,\"concat\",[[24,[\"profilePath\"]],\".otherCitationDetails\"],null],[24,[\"model\",\"otherCitationDetails\"]]]],{\"statements\":[[0,\"    \"],[7,\"td\",true],[8],[0,\"\\n        \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\"],[[23,1,[\"item\",\"value\"]],\"Enter additional detail about the citation.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n  \"],[1,[28,\"object/md-graphic-array\",null,[[\"model\",\"data-spy\",\"button-text\",\"label\",\"profilePath\"],[[24,[\"model\",\"graphic\"]],[28,\"if\",[[24,[\"data-spy\"]],\"Graphic\"],null],\"Add Graphic\",\"Graphic\",[28,\"concat\",[[24,[\"profilePath\"]],\".graphic\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[14,3],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-constraint/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'classification': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'type': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'useLimitation', Ember.getWithDefault(model, 'useLimitation', []));
        Ember.set(model, 'graphic', Ember.getWithDefault(model, 'graphic', []));
        Ember.set(model, 'responsibleParty', Ember.getWithDefault(model, 'responsibleParty', []));
        Ember.set(model, 'legal', Ember.getWithDefault(model, 'legal', {
          accessConstraint: [],
          useConstraint: [],
          otherConstraint: []
        }));
        Ember.set(model, 'security', Ember.getWithDefault(model, 'security', {}));
      });
    },
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    type: Ember.computed.alias('model.type'),
    useRequired: Ember.computed.equal('type', 'use'),
    securityRequired: Ember.computed.equal('type', 'security'),
    legalRequired: Ember.computed.equal('type', 'legal'),
    classification: Ember.computed.alias('model.security.classification'),
    // measureUnit: alias('model.measure.unitOfMeasure'),
    // measurePresent: or('measureType','measureUnit','measureValue'),

    typeOptions: Ember.computed(function () {
      return [{
        name: 'use',
        value: 'use'
      }, {
        name: 'legal',
        value: 'legal'
      }, {
        name: 'security',
        value: 'security'
      }];
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-constraint/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "iSFSU/PU",
    "block": "{\"symbols\":[\"val\",\"val\",\"&default\"],\"statements\":[[1,[28,\"input/md-select\",null,[[\"label\",\"showValidations\",\"model\",\"path\",\"valuePath\",\"namePath\",\"objectArray\",\"tooltip\",\"tooltipPath\",\"searchEnabled\",\"placeholder\",\"profilePath\"],[\"Constraint Type\",true,[23,0,[]],\"type\",\"value\",\"name\",[24,[\"typeOptions\"]],true,\"tip\",false,\"The type of constraint.\",[28,\"concat\",[[24,[\"profilePath\"]],\".type\"],null]]]],false],[0,\"\\n\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"data-spy\",\"plain\",\"required\",\"profilePath\",\"value\"],[\"Use Limitations\",false,false,[24,[\"useRequired\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".useLimitation\"],null],[24,[\"model\",\"useLimitation\"]]]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\"],[[23,2,[\"item\",\"value\"]],\"Describe Limitation affecting the fitness for use of the resource or metadata. For example, \\\"not to be used for navigation\\\".\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"required\",\"profilePath\",\"data-spy\",\"shadow\"],[\"Legal\",true,[24,[\"legalRequired\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".legal\"],null],false,true]],{\"statements\":[[0,\"\\n\"],[0,\"\\n  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"profilePath\",\"placeholder\"],[[24,[\"model\",\"legal\",\"accessConstraint\"]],\"Access Constraints\",false,true,false,\"restriction\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".legal.accessConstraint\"],null],\"Access constraints applied to assure the protection of privacy or intellectual property, and any special restrictions or limitations on obtaining the resource.\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"profilePath\",\"placeholder\"],[[24,[\"model\",\"legal\",\"useConstraint\"]],\"Use Constraints\",false,true,false,\"restriction\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".legal.useConstraint\"],null],\"Constraints applied to assure the protection of privacy or intellectual property, and any special restrictions or limitations or warnings on using the resource.\"]]],false],[0,\"\\n\"],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\"],[false]],{\"statements\":[[4,\"object/md-simple-array-table\",null,[[\"title\",\"data-spy\",\"plain\",\"profilePath\",\"value\"],[\"Other Constraint\",false,true,[28,\"concat\",[[24,[\"profilePath\"]],\".legal.otherConstraint\"],null],[24,[\"model\",\"legal\",\"otherConstraint\"]]]],{\"statements\":[[0,\"      \"],[7,\"td\",true],[8],[0,\"\\n        \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"rows\",\"placeholder\"],[[23,1,[\"item\",\"value\"]],3,\"Other restrictions and legal prerequisites for accessing and using the resource.\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"required\",\"profilePath\",\"data-spy\",\"shadow\"],[\"Security\",true,[24,[\"securityRequired\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".security\"],null],false,true]],{\"statements\":[[0,\"  \"],[1,[28,\"input/md-codelist\",null,[[\"label\",\"mdCodeName\",\"showValidations\",\"model\",\"path\",\"placeholder\",\"profilePath\"],[\"Classification\",\"classification\",true,[23,0,[]],\"classification\",\"Name of the handling restrictions on the resource or metadata.\",[28,\"concat\",[[24,[\"profilePath\"]],\".security.classification\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"security\",\"classificationSystem\"]],\"Classification System Name\",\"Enter name of the classification system.\",[28,\"concat\",[[24,[\"profilePath\"]],\".security.classificationSystem\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"security\",\"userNote\"]],\"Explanation of the application of the legal constraints or other restrictions and legal prerequisites for obtaining and using the resource.\",\"Note\",[28,\"concat\",[[24,[\"profilePath\"]],\".security.note\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"security\",\"handlingDescription\"]],\"Enter additional information about the restrictions on handling the resource.\",\"Handling Description\",[28,\"concat\",[[24,[\"profilePath\"]],\".security.handlingDescription\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"value\",\"profilePath\"],[\"Responsible Party\",[24,[\"model\",\"responsibleParty\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".responsibleParty\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-graphic-array\",null,[[\"model\",\"button-text\",\"label\",\"profilePath\"],[[24,[\"model\",\"graphic\"]],\"Add Graphic\",\"Graphic or Logo\",[28,\"concat\",[[24,[\"profilePath\"]],\".graphic\"],null]]]],false],[0,\"\\n\\n\"],[14,3],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-constraint/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-contact-identifier-array/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'identifier': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'namespace': [(0, _emberCpValidations.validator)('presence', {
      presence: true
    })]
  });
  var _default = Ember.Component.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'phone' object.
     * The class manages the maintenance of an array of phone objects.
     *
     * @class md-phone-array
     * @module mdeditor
     * @submodule components-object
     * @constructor
     */

    attributeBindings: ['data-spy'],
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: Ember.Object.extend(Validations, {
      init() {
        this._super(...arguments);
        this.set('service', Ember.A());
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-contact-identifier-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ifgRaDFq",
    "block": "{\"symbols\":[\"contactId\"],\"statements\":[[4,\"object/md-array-table\",null,[[\"columns\",\"title\",\"value\",\"validation\",\"data-spy\",\"templateClass\"],[\"Identifier,Namespace\",\"External Identifier\",[24,[\"value\"]],[24,[\"validation\"]],null,[24,[\"templateClass\"]]]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"placeholder\"],[\"identifier\",[23,1,[\"item\"]],\"External Contact Identifier\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"showValidations\",\"placeholder\",\"profilePath\",\"data-spy\"],[\"namespace\",[23,1,[\"item\"]],true,true,false,\"namespace\",true,\"Select a Namespace\",\"contact.externalIdentifier.namespace\",false]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-contact-identifier-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-date-array/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      if (Ember.isNone(Ember.get(this, 'value'))) {
        Ember.set(this, 'value', []);
      }
    },
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: Ember.Object.extend({
      init() {
        this._super(...arguments);
        this.setProperties({
          date: null,
          dateType: null
        });
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-date-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "O54ZUhpE",
    "block": "{\"symbols\":[\"date\",\"&default\"],\"statements\":[[4,\"object/md-array-table\",null,[[\"columns\",\"required\",\"title\",\"value\",\"plain\",\"validation\",\"profilePath\",\"data-spy\",\"templateClass\"],[\"Date,Date Type,Description\",[24,[\"required\"]],\"Date\",[24,[\"value\"]],[24,[\"plain\"]],[24,[\"validation\"]],[24,[\"profilePath\"]],[24,[\"data-spy\"]],[24,[\"templateClass\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-date\",null,[[\"model\",\"profilePath\"],[[23,1,[\"item\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".dateItem\"],null]]]],false],[0,\"\\n  \"],[14,2],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-date-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-date/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    date: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    dateType: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })
  });
  var _default = Ember.Component.extend(Validations, {
    init() {
      this._super(...arguments);

      // if(isNone(get(this, 'model'))) {
      //   set(this, 'model', {});
      // }
    },

    tagName: '',
    date: Ember.computed.alias('model.date'),
    dateType: Ember.computed.alias('model.dateType')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-date/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "uYjX9o0o",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-datetime\",null,[[\"valuePath\",\"model\",\"showValidations\",\"required\",\"forceDateOutput\",\"profilePath\"],[\"date\",[23,0,[]],true,true,true,[28,\"concat\",[[24,[\"profilePath\"]],\".date\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[8],[0,\"\\n  \"],[1,[28,\"input/md-codelist\",null,[[\"create\",\"required\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"profilePath\",\"path\",\"model\",\"placeholder\"],[true,true,true,false,[24,[\"disabled\"]],true,true,\"dateType\",[28,\"concat\",[[24,[\"profilePath\"]],\".dateType\"],null],\"dateType\",[23,0,[]],\"Choose date type\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[8],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"profilePath\",\"placeholder\"],[[24,[\"model\",\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"Describe the date.\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-date/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-distribution/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'distributor': [(0, _emberCpValidations.validator)('array-required', {
      track: ['distributor'],
      disabled: Ember.computed.notEmpty('model.description'),
      message: 'At least one distributor is required if description is empty.'
    })],
    'description': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      disabled: Ember.computed.notEmpty('model.distributor'),
      message: 'A description is required if a distributor is not entered.'
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      Ember.run.once(this, function () {
        Ember.set(this.model, 'distributor', Ember.getWithDefault(this.model, 'distributor', []));
      });
    },
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    /**
     * The passed down addDistribution method.
     *
     * @method addDistribution
     * @required
     */

    /**
     * The passed down editDistribution method.
     *
     * @method editDistribution
     * @param {Number} index
     * @required
     */

    /**
     * The passed down deleteDistribution method.
     *
     * @method deleteDistribution
     * @param {Number} index
     * @required
     */

    attributeBindings: ['data-spy'],
    tagName: 'section',
    distributor: Ember.computed.alias('model.distributor'),
    description: Ember.computed.alias('model.description'),
    distributorRequired: Ember.computed.not('validations.attrs.distributor.options.array-required.disabled'),
    actions: {
      editDistributor(index) {
        this.editDistributor(index);
      },
      deleteDistribution(index) {
        this.deleteDistribution(index);
      },
      addDistribution() {
        this.addDistribution();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-distribution/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "jBPyiaRt",
    "block": "{\"symbols\":[],\"statements\":[[4,\"layout/md-object-container\",null,[[\"title\",\"index\",\"profilePath\",\"deleteItem\"],[\"Distribution\",[24,[\"index\"]],[24,[\"profilePath\"]],[28,\"action\",[[23,0,[]],\"deleteDistribution\"],null]]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n      \"],[1,[28,\"input/md-textarea\",null,[[\"valuePath\",\"model\",\"rows\",\"maxHeight\",\"showValidations\",\"placeholder\",\"label\",\"profilePath\"],[\"description\",[23,0,[]],2,300,true,\"Describe the distribution of the resource\",\"Description\",[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n      \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"rows\",\"maxHeight\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"liablityStatement\"]],2,300,\"Statement of the liability assumed by the provider of the resource\",\"Liablity Statement\",[28,\"concat\",[[24,[\"profilePath\"]],\".liablityStatement\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"required\",\"tipPath\",\"tipModel\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplateTable\",\"editItem\",\"profilePath\",\"verticalButtons\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"scrollToId\",\"data-spy\",\"routeParams\"],[\"Contacts\",[24,[\"distributor\"]],[24,[\"distributorRequired\"]],\"distributor\",[23,0,[]],\"Distributors\",false,\"Add Distributor\",true,\"object/md-distributor/preview\",[24,[\"editDistributor\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".distributor\"],null],false,false,false,true,[28,\"concat\",[\"md-distributor-\",[24,[\"index\"]]],null],false,[24,[\"index\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-distribution/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-distributor/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'role': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'contacts': (0, _emberCpValidations.validator)('length', {
      min: 1,
      message: 'At least one contact is required.'
    })
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'contact', Ember.getWithDefault(model, 'contact', {
          role: null,
          party: []
        }));
        Ember.set(model, 'orderProcess', Ember.A(Ember.getWithDefault(model, 'orderProcess', [{}])));
        Ember.set(model, 'transferOption', Ember.A(Ember.getWithDefault(model, 'transferOption', [{}])));
      });
    },
    tagName: 'form',
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default "false"
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    role: Ember.computed.alias('model.contact.role'),
    contacts: Ember.computed('model.contact.party', {
      get() {
        let party = Ember.get(this, 'model.contact.party');
        return party ? party.mapBy('contactId') : null;
      },
      set(key, value) {
        let map = value.map(itm => {
          return {
            contactId: itm
          };
        });
        Ember.set(this, 'model.contact.party', map);
        return value;
      }
    }),
    actions: {
      editTransferOption(index) {
        this.editTransferOption(index);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-distributor/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      this.tagName = this.isTable ? 'td' : 'div';
    },
    classNames: ['property']
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-distributor/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "3DPMB8sQ",
    "block": "{\"symbols\":[\"dist\",\"party\",\"contact\",\"index\",\"&default\"],\"statements\":[[4,\"with\",[[24,[\"item\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"wrap\"],[8],[0,\"\\n\"],[4,\"with\",[[23,1,[\"contact\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"html-safe\",[[28,\"if\",[[23,2,[\"role\"]],[23,2,[\"role\"]],\"<em>No Roles assigned.</em>\"],null]],null],false],[0,\"\\n        (\\n\"],[4,\"each\",[[23,2,[\"party\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"if\",[[23,4,[]],\", \"],null],false],[0,\" \"],[1,[28,\"control/md-contact-link\",null,[[\"contactId\"],[[23,3,[\"contactId\"]]]]],false],[0,\"\\n\"]],\"parameters\":[3,4]},{\"statements\":[[0,\"            \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No Contacts assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        )\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"        \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No responsibility assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\"],[0,\"\\n  \"],[14,5],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-distributor/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-distributor/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "HWqDvZGu",
    "block": "{\"symbols\":[\"order\",\"&default\"],\"statements\":[[7,\"div\",true],[10,\"data-spy\",\"Contacts\"],[11,\"id\",[28,\"concat\",[[24,[\"elementId\"]],\"-contacts\"],null]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"contact\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"input/md-select-contacts\",null,[[\"label\",\"placeholder\",\"model\",\"path\",\"icon\",\"tooltip\",\"showValidations\",\"class\",\"profilePath\"],[\"Contacts\",\"Select one or more contacts\",[23,0,[]],\"contacts\",true,true,true,\"required\",[28,\"concat\",[[24,[\"profilePath\"]],\".contacts\"],null]]]],false],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"label\",\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"Role\",\"role\",[23,0,[]],true,true,false,[24,[\"disabled\"]],\"role\",true,\"Select or enter a role\",[28,\"concat\",[[24,[\"profilePath\"]],\".role\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n\"],[0,\"\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"editItem\",\"previewTemplateTable\",\"profilePath\",\"verticalButtons\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"scrollToId\",\"routeParams\",\"data-spy\"],[\"Size(MB),online?,offline?,format?\",[24,[\"model\",\"transferOption\"]],\"Transfer Options\",false,\"Add Transfer Options\",true,[24,[\"editTransferOption\"]],\"object/md-transfer/preview\",[28,\"concat\",[[24,[\"profilePath\"]],\".transferOption\"],null],false,false,false,true,[28,\"concat\",[\"md-transfer-\",[24,[\"distributorId\"]]],null],[24,[\"index\"]],\"Transfer Options\"]]],false],[0,\"\\n\\n\"],[4,\"with\",[[24,[\"model\",\"orderProcess\",\"firstObject\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"plain\",\"collapsible\",\"collapsed\",\"bodyIsRow\",\"profilePath\"],[false,false,\"Order Process\",true,true,false,false,[28,\"concat\",[[24,[\"profilePath\"]],\".orderProcess\"],null]]],{\"statements\":[[0,\"    \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\",\"label\",\"autoresize\",\"profilePath\",\"embedded\",\"data-spy\"],[[23,1,[\"fees\"]],\"Describe the fees and terms for retrieving the resource, including monetary units.\",\"Fees\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".orderProcess.fees\"],null],true,\"Fees\"]]],false],[0,\"\\n    \"],[1,[28,\"input/md-datetime\",null,[[\"date\",\"placeholder\",\"label\",\"profilePath\"],[[23,1,[\"plannedAvailability\"]],\"Date when the resource will be avialable\",\"Planned Availability\",[28,\"concat\",[[24,[\"profilePath\"]],\".orderProcess.plannedAvailability\"],null]]]],false],[0,\"\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"maxheight\",\"placeholder\",\"label\",\"profilePath\"],[[23,1,[\"orderingInstructions\"]],100,\"Describe general instructions for obtaining the resource\",\"Ordering Instructions\",[28,\"concat\",[[24,[\"profilePath\"]],\".orderProcess.orderingInstructions\"],null]]]],false],[0,\"\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"autoresize\",\"placeholder\",\"label\",\"profilePath\"],[[23,1,[\"turnaround\"]],false,\"Describe the typical turnaround time for the filling of an order\",\"Turnaround\",[28,\"concat\",[[24,[\"profilePath\"]],\".orderProcess.turnaround\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null],[14,2],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-distributor/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-documentation/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'resourceType': [(0, _emberCpValidations.validator)('array-required', {
      track: ['type']
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'resourceType', Ember.getWithDefault(model, 'resourceType', []));
        Ember.set(model, 'citation', Ember.A(Ember.getWithDefault(model, 'citation', [{}])));
      });
    },
    tagName: 'form',
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default "false"
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    citation: Ember.computed.alias('model.citation'),
    resourceType: Ember.computed.alias('model.resourceType')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-documentation/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNameBindings: ['muted:text-muted'],
    /**
     * Whether to render the text muted.
     *
     * @property muted
     * @type {Boolean}
     * @default "true"
     */
    muted: true
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-documentation/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "IMO9oRLK",
    "block": "{\"symbols\":[\"model\",\"type\"],\"statements\":[[4,\"with\",[[24,[\"item\"]]],null,{\"statements\":[[0,\"  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal\"],[8],[0,\"\\n    \"],[7,\"dt\",true],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"text-info\"],[8],[0,\"Document #\"],[1,[22,\"index\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"dd\",true],[8],[9],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Resource Type(s)\"]],{\"statements\":[[4,\"each\",[[23,1,[\"resourceType\"]]],null,{\"statements\":[[0,\"            \"],[1,[23,2,[\"type\"]],false],[0,\":\\n\"],[4,\"if\",[[23,2,[\"name\"]]],null,{\"statements\":[[0,\"                \"],[1,[23,2,[\"name\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[7,\"em\",true],[8],[0,\"Not named\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"                \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No types assigned!\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"object/md-citation/preview/body\",null,[[\"citation\"],[[28,\"object-at\",[0,[23,1,[\"citation\"]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-documentation/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-documentation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "RwfRYYps",
    "block": "{\"symbols\":[\"citation\",\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[1,[28,\"object/md-resource-type-array\",null,[[\"plain\",\"value\",\"required\",\"data-spy\",\"profilePath\"],[false,[24,[\"model\",\"resourceType\"]],true,\"Resource Types\",[28,\"concat\",[[24,[\"profilePath\"]],\".resourceType\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\",\"citation\",\"firstObject\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"profilePath\",\"simpleIdentifier\"],[[23,1,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".citation\"],null],true]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[14,2],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-documentation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-domain/component", ["exports", "ember-cp-validations", "uuid/v4"], function (_exports, _emberCpValidations, _v) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'domainId': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'codeName': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'description': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'domainId', Ember.getWithDefault(model, 'domainId', (0, _v.default)()));
        Ember.set(model, 'domainItem', Ember.getWithDefault(model, 'domainItem', []));
        Ember.set(model, 'domainReference', Ember.getWithDefault(model, 'domainReference', {}));
      });
    },
    /**
     * The string representing the path in the profile object for the domain.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the domain.
     *
     * @property model
     * @type {Object}
     * @required
     */

    /**
     * The passed down editDomainItem method.
     *
     * @method editDomainItem
     * @param {Number} index
     * @required
     */

    /**
     * The passed down editCitation method.
     *
     * @method editCitation
     * @param {String} scrollTo
     * @required
     */

    tagName: 'form',
    domainId: Ember.computed.alias('model.domainId'),
    codeName: Ember.computed.alias('model.codeName'),
    description: Ember.computed.alias('model.description'),
    actions: {
      editDomainItem(id) {
        this.editDomainItem(id);
      },
      editCitation(scrollTo) {
        this.editCitation(scrollTo);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-domain/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "SQ3RD2Tc",
    "block": "{\"symbols\":[],\"statements\":[[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"required\"],[\"Domain Information\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".information\"],null],\"Domain Information\",true]],{\"statements\":[[0,\"  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"label\",\"profilePath\",\"data-spy\",\"class\"],[[23,0,[]],\"domainId\",\"Enter the identifier for the domain.\",\"Domain Identifier\",[28,\"concat\",[[24,[\"profilePath\"]],\".information.identifier\"],null],\"Identifier\",\"md-embedded\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"label\",\"data-spy\",\"profilePath\",\"class\"],[[23,0,[]],\"codeName\",\"Enter the name used to refer to the domain in schema definitions.\",\"Code Name\",\"Code Name\",[28,\"concat\",[[24,[\"profilePath\"]],\".information.codeName\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\",\"data-spy\",\"class\"],[[24,[\"model\",\"commonName\"]],\"Enter a short common name for the domain.\",\"Common Name\",[28,\"concat\",[[24,[\"profilePath\"]],\".information.commonName\"],null],\"Common Name\",\"md-embedded\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"autoresize\",\"placeholder\",\"label\",\"data-spy\",\"embedded\",\"profilePath\"],[[24,[\"model\",\"description\"]],true,true,\"A brief description of the domain.\",\"Description\",\"Description\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".information.description\"],null]]]],false],[0,\"\\n\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplateTable\",\"editItem\",\"verticalButtons\",\"profilePath\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"scrollToId\",\"data-spy\"],[\"Domain Item Name,Value,Definition\",[24,[\"model\",\"domainItem\"]],\"Domain Items\",true,\"Add Item\",[24,[\"fallse\"]],\"object/md-domainitem/preview\",[28,\"action\",[[23,0,[]],\"editDomainItem\"],null],false,[24,[\"profilePath\"]],false,false,false,\"md-domainitem\",\"Domain Items\"]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-citation/preview\",null,[[\"title\",\"profilePath\",\"citation\",\"muted\",\"required\",\"editCitation\"],[\"Domain Reference\",[28,\"concat\",[[24,[\"profilePath\"]],\".domainReference\"],null],[24,[\"model\",\"domainReference\"]],true,false,[28,\"action\",[[23,0,[]],\"editCitation\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-domain/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-domainitem/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.Template = _exports.Validations = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'name': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'value': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'definition': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  const TemplateClass = Ember.Object.extend(Validations, {
    init() {
      this._super(...arguments);
      Ember.set(this, 'reference', {});
    }
  });
  _exports.Template = TemplateClass;
  const theComp = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'reference', Ember.getWithDefault(model, 'reference', {}));
      });
    },
    /**
     * The string representing the path in the profile object for the domain.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the domain.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    name: Ember.computed.alias('model.name'),
    value: Ember.computed.alias('model.value'),
    definition: Ember.computed.alias('model.definition')
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-domainitem/preview/component", ["exports", "mdeditor/pods/components/object/md-domainitem/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend(_component.Validations, {
    tagName: '',
    model: Ember.computed.alias('item'),
    name: Ember.computed.alias('model.name'),
    value: Ember.computed.alias('model.value'),
    definition: Ember.computed.alias('model.definition')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-domainitem/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "6Ou3t2DW",
    "block": "{\"symbols\":[],\"statements\":[[7,\"td\",true],[10,\"class\",\"property\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,0,[]],\"name\",\"Descriptive name for the domain value.\",[28,\"concat\",[[24,[\"profilePath\"]],\".domainItem.name\"],null],true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"property\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,0,[]],\"value\",\"Value of the domain item.\",[28,\"concat\",[[24,[\"profilePath\"]],\".domainItem.value\"],null],true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"property\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,0,[]],\"definition\",\"A brief definition for the domain item.\",[28,\"concat\",[[24,[\"profilePath\"]],\".domainItem.definition\"],null],true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-domainitem/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-domainitem/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "oTtoAxTY",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"label\",\"data-spy\",\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"Name\",\"Name\",[23,0,[]],\"name\",\"Descriptive name for the domain value.\",[28,\"concat\",[[24,[\"profilePath\"]],\".name\"],null],true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-input\",null,[[\"label\",\"data-spy\",\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"Value\",\"Value\",[23,0,[]],\"value\",\"Value of the domain item.\",[28,\"concat\",[[24,[\"profilePath\"]],\".value\"],null],true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"label\",\"data-spy\",\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"Definition\",\"Definition\",[23,0,[]],\"definition\",\"A brief definition for the domain item.\",[28,\"concat\",[[24,[\"profilePath\"]],\".definition\"],null],true]]],false],[0,\"\\n\\n\"],[4,\"with\",[[24,[\"model\",\"reference\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"shadow\"],[\"Item Reference\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".reference\"],null],\"Item Reference\",true]],{\"statements\":[[0,\"    \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"profilePath\",\"simpleIdentifier\",\"embedded\"],[[23,1,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".reference\"],null],true,true]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-domainitem/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-entity/component", ["exports", "mdeditor/pods/components/object/md-attribute/component", "ember-cp-validations", "uuid/v4"], function (_exports, _component, _emberCpValidations, _v) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'codeName': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'definition': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    init() {
      this._super(...arguments);
      (true && !(Ember.get(this, 'dictionary')) && Ember.assert("You must supply a dictionary for ".concat(this.toString(), "."), Ember.get(this, 'dictionary')));
    },
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'entityId', Ember.getWithDefault(model, 'entityId', (0, _v.default)()));
        Ember.set(model, 'alias', Ember.getWithDefault(model, 'alias', []));
        Ember.set(model, 'primaryKeyAttributeCodeName', Ember.getWithDefault(model, 'primaryKeyAttributeCodeName', []));
        Ember.set(model, 'index', Ember.getWithDefault(model, 'index', []));
        Ember.set(model, 'attribute', Ember.getWithDefault(model, 'attribute', []));
        Ember.set(model, 'foreignKey', Ember.getWithDefault(model, 'foreignKey', []));
        Ember.set(model, 'entityReference', Ember.getWithDefault(model, 'entityReference', []));
      });
    },
    /**
     * The string representing the path in the profile object for the entity.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The parent dictionary object for this entity used to lookup references.
     *
     * @property dictionary
     * @type {Object}
     * @required
     */

    /**
     * The object to use as the data model for the entity.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    foreignKeyTemplate: Ember.Object.extend((0, _emberCpValidations.buildValidations)({
      'referencedEntityCodeName': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      })],
      'localAttributeCodeName': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      }), (0, _emberCpValidations.validator)('array-required', {
        track: []
      })],
      'referencedAttributeCodeName': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      }), (0, _emberCpValidations.validator)('array-required', {
        track: []
      })]
    }), {
      init() {
        this._super(...arguments);
        this.set('localAttributeCodeName', []);
        this.set('referencedAttributeCodeName', []);
      }
    }),
    indexTemplate: Ember.Object.extend((0, _emberCpValidations.buildValidations)({
      'codeName': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      })],
      'allowDuplicates': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      })],
      'attributeCodeName': [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      }), (0, _emberCpValidations.validator)('array-required', {
        track: []
      })]
    }), {
      init() {
        this._super(...arguments);
        this.set('attributeCodeName', []);
        this.set('allowDuplicates', false);
      }
    }),
    attributeTemplate: _component.Template,
    //entityId: alias('model.entityId'),
    codeName: Ember.computed.alias('model.codeName'),
    description: Ember.computed.alias('model.description'),
    entities: Ember.computed.alias('dictionary.entity'),
    attributes: Ember.computed.alias('model.attribute'),
    attributeList: Ember.computed('attributes.{@each.codeName,[]}', function () {
      let attr = Ember.get(this, 'model.attribute');
      if (attr) {
        return attr.map(attr => {
          return {
            codeId: Ember.get(attr, 'codeName'),
            codeName: Ember.get(attr, 'codeName'),
            tooltip: Ember.get(attr, 'definition')
          };
        });
      }
      return [];
    }),
    entityList: Ember.computed('entities.{@each.entityId,@each.codeName}', function () {
      return Ember.get(this, 'entities').map(attr => {
        if (Ember.get(attr, 'entityId')) {
          return {
            codeId: Ember.get(attr, 'entityId'),
            codeName: Ember.get(attr, 'codeName'),
            tooltip: Ember.get(attr, 'definition')
          };
        }
      });
    }),
    /**
     * The passed down editCitation method.
     *
     * @method editCitation
     * @param {Number} id
     * @required
     */

    /**
     * The passed down editAttribute method.
     *
     * @method editAttribute
     * @param {Number} id
     * @required
     */

    actions: {
      getEntityAttributes(id) {
        let entity = Ember.A(this.get('dictionary.entity')).findBy('entityId', id);
        if (entity) {
          let a = Ember.get(entity, 'attribute').map(attr => {
            return {
              codeId: Ember.get(attr, 'codeName'),
              codeName: Ember.get(attr, 'codeName'),
              tooltip: Ember.get(attr, 'definition')
            };
          });
          return a;
        }
        return [];
      },
      editCitation(id) {
        this.editCitation(id);
      },
      editAttribute(id) {
        this.editAttribute(id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-entity/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "foG86uIJ",
    "block": "{\"symbols\":[\"itm\",\"fk\",\"val\"],\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"required\"],[\"Entity Information\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".information\"],null],\"Entity Information\",true]],{\"statements\":[[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\",\"data-spy\",\"class\"],[[24,[\"model\",\"entityId\"]],\"Enter the identifier for the entity.\",\"Entity Identifier\",[28,\"concat\",[[24,[\"profilePath\"]],\".identifier\"],null],\"Identifier\",\"md-embedded\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"label\",\"data-spy\",\"profilePath\",\"class\"],[[23,0,[]],\"codeName\",\"Enter the name used to refer to the entity in schema definitions or application software.\",\"Code Name\",\"Code Name\",[28,\"concat\",[[24,[\"profilePath\"]],\".codeName\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"autoresize\",\"placeholder\",\"label\",\"data-spy\",\"embedded\",\"profilePath\"],[[24,[\"model\",\"definition\"]],true,true,\"A brief description of the entity.\",\"Definition\",\"Definition\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".definition\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\",\"data-spy\",\"class\"],[[24,[\"model\",\"commonName\"]],\"Enter a short common name for the entity.\",\"Common Name\",[28,\"concat\",[[24,[\"profilePath\"]],\".commonName\"],null],\"Common Name\",\"md-embedded\"]]],false],[0,\"\\n\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"required\",\"plain\",\"profilePath\",\"data-spy\",\"class\",\"value\"],[\"Alias\",false,true,[28,\"concat\",[[24,[\"profilePath\"]],\".alias\"],null],\"Alias\",\"md-embedded\",[24,[\"model\",\"alias\"]]]],{\"statements\":[[0,\"    \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,3,[\"item\",\"value\"]],\"Alternate names used to identify this entity.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplateTable\",\"noteComponents\",\"editItem\",\"verticalButtons\",\"profilePath\",\"hideIndex\",\"condensed\",\"responsive\",\"editOnAdd\",\"scrollToId\",\"data-spy\",\"templateClass\"],[\"Attribute Name,Data Type, Definition, Allow Null?\",[24,[\"model\",\"attribute\"]],\"Attributes\",true,\"Add Attribute\",[24,[\"fallse\"]],\"object/md-attribute/preview\",[28,\"array\",[[28,\"hash\",null,[[\"component\",\"options\"],[\"control/md-indicator/related\",[28,\"hash\",null,[[\"icon\",\"title\",\"note\",\"parent\",\"path\",\"relatedId\",\"route\",\"routeIdPaths\",\"linkText\"],[\"list\",\"Domain\",\"The attribute <em>${model.codeName}</em> has an associated domain: <strong>${related.codeName}</strong>.\",[24,[\"dictionary\"]],\"domain\",\"domainId\",\"dictionary.show.edit.domain.edit\",[28,\"array\",[\"relatedIndex\"],null],\"Go to Domain\"]]]]]]],null],[28,\"action\",[[23,0,[]],\"editAttribute\"],null],false,[24,[\"profilePath\"]],false,false,true,false,\"md-attribute\",\"Attributes\",[24,[\"attributeTemplate\"]]]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\"],[\"Entity Structure\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".structure\"],null],\"Entity Structure\"]],{\"statements\":[[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\",\"class\"],[[24,[\"model\",\"fieldSeparatorCharacter\"]],\"The character which indicates the end of data field contents.\",\"Field Separator Character\",[28,\"concat\",[[24,[\"profilePath\"]],\".structure.fieldSeparatorCharacter\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"type\",\"step\",\"model\",\"valuePath\",\"placeholder\",\"label\",\"profilePath\",\"class\"],[\"number\",1,[24,[\"model\"]],\"numberOfHeaderLines\",\"The number of lines at the beginning of the file.\",\"# Header Lines\",[28,\"concat\",[[24,[\"profilePath\"]],\".structure.numberOfHeaderLines\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\",\"class\"],[[24,[\"model\",\"quoteCharacter\"]],\"Character used to quote fields in the data representation.\",\"Quote Character\",[28,\"concat\",[[24,[\"profilePath\"]],\".structure.quoteCharacter\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\"],[\"Entity Keys\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".keys\"],null],\"Entity Keys\"]],{\"statements\":[[0,\"\\n  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"label\",\"value\",\"mapped\",\"create\",\"tooltip\",\"placeholder\",\"profilePath\",\"data-spy\",\"class\"],[\"Primary Key Attributes\",[24,[\"model\",\"primaryKeyAttributeCodeName\"]],[24,[\"attributeList\"]],true,true,\"The codeNames of the attributes that compose the primary key.\",[28,\"concat\",[[24,[\"profilePath\"]],\".keys.primaryKey\"],null],\"Primary\",\"md-embedded\"]]],false],[0,\"\\n\\n\"],[4,\"object/md-array-table\",null,[[\"columns\",\"value\",\"title\",\"class\",\"plain\",\"responsive\",\"templateClass\",\"profilePath\",\"data-spy\"],[\"Local Attributes,Referenced Entity,Referenced Attributes\",[24,[\"model\",\"foreignKey\"]],\"Foreign Key\",\"md-embedded\",true,true,[24,[\"foreignKeyTemplate\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".keys.foreignKey\"],null],\"Foreign\"]],{\"statements\":[[0,\"    \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist-multi\",null,[[\"model\",\"path\",\"mapped\",\"create\",\"tooltip\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,2,[\"item\"]],\"localAttributeCodeName\",[24,[\"attributeList\"]],true,true,\"Select the local(child) attributes that compose the foreign key.\",[28,\"concat\",[[24,[\"profilePath\"]],\".localAttributes\"],null],true]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"model\",\"mapped\",\"create\",\"path\",\"placeholder\",\"showValidations\"],[[23,2,[\"item\"]],[24,[\"entityList\"]],true,\"referencedEntityCodeName\",\"Select the referenced (or parent) entity.\",true]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist-multi\",null,[[\"model\",\"path\",\"mapped\",\"create\",\"tooltip\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,2,[\"item\"]],\"referencedAttributeCodeName\",[28,\"compute\",[[28,\"action\",[[23,0,[]],\"getEntityAttributes\"],null],[23,2,[\"item\",\"referencedEntityCodeName\"]]],null],true,true,\"Select the referenced(parent) attributes that compose the foreign key.\",[28,\"concat\",[[24,[\"profilePath\"]],\".referencedAttributes\"],null],true]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"object/md-array-table\",null,[[\"columns\",\"value\",\"title\",\"class\",\"responsive\",\"templateClass\",\"profilePath\",\"data-spy\"],[\"Name,Attributes,Duplicates?\",[24,[\"model\",\"index\"]],\"Entity Index\",\"md-embedded\",true,[24,[\"indexTemplate\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".index\"],null],\"Entity Indexes\"]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"showValidations\",\"profilePath\"],[[23,1,[\"item\"]],\"codeName\",\"Name of the index.\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".index.name\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-codelist-multi\",null,[[\"model\",\"path\",\"mapped\",\"create\",\"tooltip\",\"placeholder\",\"profilePath\",\"showValidations\"],[[23,1,[\"item\"]],\"attributeCodeName\",[24,[\"attributeList\"]],true,true,\"Select or enter the attributes that compose the index key.\",[28,\"concat\",[[24,[\"profilePath\"]],\".index.attributes\"],null],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[10,\"class\",\"text-center\"],[8],[0,\"\\n    \"],[1,[28,\"input/md-boolean\",null,[[\"required\",\"value\",\"profilePath\"],[true,[23,1,[\"item\",\"allowDuplicates\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".index.allowDuplicates\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[1,[28,\"object/md-citation-array\",null,[[\"model\",\"profilePath\",\"data-spy\",\"editItem\",\"label\"],[[24,[\"model\",\"entityReference\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".entityReference\"],null],\"Entity Reference\",[28,\"action\",[[23,0,[]],\"editCitation\"],null],\"Entity Reference\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-entity/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-extent/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-extent/spatial/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    isNaN: isNan
  } = Number;
  var _default = Ember.Component.extend({
    didReceiveAttrs() {
      this._super(...arguments);
      let geo = Ember.get(this, 'extent.geographicExtent.0');
      Ember.run.once(function () {
        Ember.set(geo, 'boundingBox', Ember.getWithDefault(geo, 'boundingBox', {}));
      });
    },
    isTrulyNone(val) {
      return Ember.isNone(val) || isNan(val);
    },
    bboxPoly: Ember.computed('bbox', 'bbox.{northLatitude,southLatitude,eastLongitude,westLongitude}', function () {
      let bbox = this.bbox;
      if (!bbox) {
        return null;
      }
      if (this.isTrulyNone(bbox.southLatitude) || this.isTrulyNone(bbox.westLongitude) || this.isTrulyNone(bbox.northLatitude) || this.isTrulyNone(bbox.eastLongitude)) {
        return null;
      }
      return [[bbox.southLatitude, bbox.westLongitude], [bbox.northLatitude, bbox.westLongitude], [bbox.northLatitude, bbox.eastLongitude], [bbox.southLatitude, bbox.eastLongitude]];
    }),
    bboxPolyObserver: Ember.observer('bboxPoly', function () {
      let map = this.map;
      let bbox = this.bboxPoly;
      if (map && bbox) {
        this.setupMap({
          target: map
        });
      }
    }),
    bbox: Ember.computed.alias('extent.geographicExtent.0.boundingBox'),
    geographicExtent: Ember.computed.alias('extent.geographicExtent.0'),
    hasBbox: Ember.computed.or('extent.geographicExtent.0.boundingBox.{northLatitude,southLatitude,eastLongitude,westLongitude}'),
    geographicElement: Ember.computed.alias('extent.geographicExtent.0.geographicElement'),
    showMap: Ember.computed.or('bboxPoly', 'geographicElement'),
    setupMap(m) {
      let map = m.target;
      let geo = this.geographicElement || [];
      let bbox = this.bboxPoly;
      let features;
      features = bbox ? geo.concat([L.rectangle(bbox).toGeoJSON()]) : [].concat(geo);
      let bounds = L.geoJson(features).getBounds();
      map.fitBounds(bounds);
      this.set('map', map);
    },
    deleteFeatures() {
      this.set('geographicElement', []);
    },
    actions: {
      calculateBox() {
        let geo = this.geographicElement;
        if (!(geo && geo.length)) {
          return null;
        }
        let bounds = L.geoJson(geo).getBounds();
        let bbox = this.bbox;
        Ember.setProperties(bbox, {
          northLatitude: bounds.getNorth(),
          southLatitude: bounds.getSouth(),
          eastLongitude: bounds.getEast(),
          westLongitude: bounds.getWest()
        });
      },
      clearBox() {
        Ember.setProperties(this.bbox, {
          northLatitude: null,
          southLatitude: null,
          eastLongitude: null,
          westLongitude: null
        });
      },
      editFeatures(index) {
        this.editFeatures(index);
      },
      deleteFeatures() {
        this.deleteFeatures();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-extent/spatial/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "epTg+0+j",
    "block": "{\"symbols\":[\"l\"],\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"data-spy\",\"shadow\",\"spotlightEnabled\",\"plain\",\"bodyIsRow\",\"class\",\"profilePath\"],[\"Geographic Extent\",true,false,false,false,false,true,true,\"card-lighter\",[24,[\"profilePath\"]]]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-xxxl-6\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"Bounding Box\"],[9],[0,\"\\n\"],[4,\"object/md-bbox\",null,[[\"model\",\"profilePath\"],[[24,[\"bbox\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".bbox\"],null]]],{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-primary\"],[12,\"disabled\",[28,\"if\",[[28,\"is-empty\",[[24,[\"geographicElement\"]]],null],true],null]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"calculateBox\"]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"calculator\"],null],false],[0,\" Calculate\\n          \"],[9],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\",\"disabled\"],[\"btn btn-danger\",[28,\"action\",[[23,0,[]],\"clearBox\"],null],[28,\"unless\",[[24,[\"hasBbox\"]],true],null]]],{\"statements\":[[0,\"            \"],[1,[28,\"fa-icon\",[\"trash\"],null],false],[0,\" Clear\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-xxxl-6 md-extent-description\"],[8],[0,\"\\n        \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"rows\",\"maxHeight\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"geographicExtent\",\"description\"]],5,300,\"Description of geographic extent\",\"Description\",[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null]]]],false],[0,\"\\n        \"],[1,[28,\"input/md-boolean\",null,[[\"label\",\"text\",\"value\",\"profilePath\"],[\"Contains Data\",\"The geographic extent contains some or all of the data\",[24,[\"geographicExtent\",\"containsData\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".containsData\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-sm-6 md-extent-map\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showMap\"]]],null,{\"statements\":[[0,\"      \"],[7,\"p\",true],[10,\"class\",\"btn-toolbar\"],[8],[0,\"\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-md btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"editFeatures\",[24,[\"index\"]]]],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit Features\"],[9],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-danger\",[28,\"action\",[[23,0,[]],\"deleteFeatures\"],null]]],{\"statements\":[[0,\"          \"],[1,[28,\"fa-icon\",[\"trash\"],null],false],[0,\" Clear Features\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"],[4,\"leaflet-map\",null,[[\"lat\",\"lng\",\"zoom\",\"maxZoom\",\"onLoad\"],[0,0,2,18,[28,\"action\",[[23,0,[]],[24,[\"setupMap\"]]],null]]],{\"statements\":[[4,\"layer-group\",null,[[\"name\",\"baselayer\",\"default\"],[\"Terrain\",true,true]],{\"statements\":[[0,\"          \"],[1,[28,\"tile-layer\",null,[[\"url\",\"attribution\"],[\"//stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png\",[24,[\"mapAttribution\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"geographicElement\",\"length\"]]],null,{\"statements\":[[4,\"feature-group\",null,[[\"name\",\"default\"],[\"Features\",true]],{\"statements\":[[4,\"each\",[[24,[\"geographicElement\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"geojson-layer\",null,[[\"geoJSON\"],[[23,1,[]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"bboxPoly\"]]],null,{\"statements\":[[4,\"feature-group\",null,[[\"name\",\"default\"],[\"Bounding Box\",true]],{\"statements\":[[0,\"              \"],[1,[28,\"polygon-layer\",null,[[\"locations\",\"color\",\"fillOpacity\"],[[24,[\"bboxPoly\"]],\"#29abe0\",0]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n        \"],[1,[22,\"layer-control\"],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n        No Features to display.\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-md btn-success md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"editFeatures\",[24,[\"index\"]]]],[8],[0,\"\\n          \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Add Features\"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-extent/spatial/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-extent/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "AP3UYUAX",
    "block": "{\"symbols\":[],\"statements\":[[4,\"layout/md-object-container\",null,[[\"title\",\"index\",\"deleteItem\",\"profilePath\"],[[24,[\"title\"]],[24,[\"index\"]],[24,[\"deleteExtent\"]],[24,[\"profilePath\"]]]],{\"statements\":[[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"rows\",\"maxHeight\",\"placeholder\",\"label\",\"isCollapsible\",\"profilePath\"],[[24,[\"extent\",\"description\"]],3,300,\"Description of extent\",\"Extent Description\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"object/md-extent/spatial\",null,[[\"extent\",\"index\",\"editFeatures\",\"profilePath\"],[[24,[\"extent\"]],[24,[\"index\"]],[24,[\"editFeatures\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".geographic\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-extent/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-funding/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'allocation': [(0, _emberCpValidations.validator)('array-required', {
      track: ['allocation'],
      disabled: Ember.computed('model.timePeriod.{startDateTime,endDateTime}', function () {
        let tp = this.model.timePeriod;
        return Ember.isPresent(tp) && (tp.startDateTime || tp.endDateTime);
      })
    })],
    'timePeriod': {
      disabled: Ember.computed.notEmpty('model.allocation'),
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      }), (0, _emberCpValidations.validator)('inline', {
        dependentKeys: ['model.timePeriod.startDateTime', 'model.timePeriod.endDateTime'],
        validate(value, options, model) {
          return model.get('timePeriod.startDateTime') || model.get('timePeriod.endDateTime') ? true : 'Time Period should have one of Start Date or End Date.';
        }
      })]
    }
  }, {
    message: 'Either an Allocation or valid Time Period is required.'
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'allocation', Ember.getWithDefault(model, 'allocation', []));
        Ember.set(model, 'timePeriod', Ember.getWithDefault(model, 'timePeriod', {}));
      });
    },
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    allocation: Ember.computed.alias('model.allocation'),
    timePeriod: Ember.computed.alias('model.timePeriod')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-funding/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-funding/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "x8l/xgwJ",
    "block": "{\"symbols\":[\"model\",\"alloc\"],\"statements\":[[4,\"with\",[[24,[\"item\"]]],null,{\"statements\":[[0,\"  \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal\"],[8],[0,\"\\n\"],[0,\"    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"Start Date:\"],[9],[0,\"\\n        \"],[1,[28,\"if\",[[23,1,[\"timePeriod\",\"startDateTime\"]],[28,\"moment-format\",[[23,1,[\"timePeriod\",\"startDateTime\"]],\"MM-DD-YYYY\"],null],\"Not defined\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"End Date:\"],[9],[0,\"\\n        \"],[1,[28,\"if\",[[23,1,[\"timePeriod\",\"endDateTime\"]],[28,\"moment-format\",[[23,1,[\"timePeriod\",\"endDateTime\"]],\"MM-DD-YYYY\"],null],\"Not defined\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"h5\",true],[10,\"class\",\"text-info\"],[8],[7,\"strong\",true],[8],[0,\"Allocations\"],[9],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"table-responsive\"],[8],[0,\"\\n    \"],[7,\"table\",true],[10,\"class\",\"table table-condensed table-bordered\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"th\",true],[8],[0,\"Amount\"],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[0,\"Currency\"],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[0,\"Source\"],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[0,\"Recipient\"],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[0,\"Match?\"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"allocation\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"get-dash\",[[23,2,[]],\"amount\"],null],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"get-dash\",[[23,2,[]],\"currency\"],null],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"control/md-contact-title\",null,[[\"contactId\",\"default\"],[[23,2,[\"sourceId\"]],\"--\"]]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"control/md-contact-title\",null,[[\"contactId\",\"default\"],[[23,2,[\"recipientId\"]],\"--\"]]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"get-dash\",[[23,2,[]],\"matching\"],null],false],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"colspan\",\"5\"],[8],[0,\"No allocations found.\"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-funding/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-funding/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "lC4TxWp4",
    "block": "{\"symbols\":[\"editing\"],\"statements\":[[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"data-spy\",\"shadow\",\"buttonText\",\"ellipsis\",\"attributes\",\"profilePath\",\"collapsible\",\"isCollapsed\",\"tipPath\",\"tipModel\",\"required\",\"verticalButtons\"],[[24,[\"model\",\"allocation\"]],\"Allocation\",\"Allocation\",true,\"Add Allocation\",true,\"amount,currency,matching\",[28,\"concat\",[[24,[\"profilePath\"]],\".allocation\"],null],false,false,\"allocation\",[23,0,[]],[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[23,0,[]],\"validations\"],null],\"attrs\"],null],\"allocation\"],null],\"isInvalid\"],null],true]],{\"statements\":[[0,\"\\n  \"],[1,[28,\"object/md-allocation\",null,[[\"model\",\"profilePath\"],[[23,1,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".allocation\"],null]]]],false],[0,\"\\n\\n\"]],\"parameters\":[1]},null],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"timePeriod\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-time-period\",null,[[\"model\",\"required\",\"profilePath\"],[[24,[\"model\",\"timePeriod\"]],[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[23,0,[]],\"validations\"],null],\"attrs\"],null],\"timePeriod\"],null],\"isInvalid\"],null],[28,\"concat\",[[24,[\"profilePath\"]],\".timePeriod\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"input/md-textarea\",null,[[\"maxlength\",\"value\",\"label\",\"data-spy\",\"placeholder\",\"profilePath\"],[500,[24,[\"model\",\"description\"]],\"Description\",\"Description\",\"Description: Less than 500 characters\",[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-funding/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-graphic-array/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'graphic' object arrays. The
     * class manages the maintenance of an array of graphic objects using the
     * md-object-table class.
     *
     * ```handlebars
     * \{{object/md-graphic-array
     *   model=model
     *   data-spy="Graphic"
     *   button-text="Add Graphic"
     *   label="Graphic"
     * }}
     * ```
     *
     * @class md-graphic-array
     * @constructor
     */

    attributeBindings: ['data-spy'],
    /**
     * mdJSON object containing the 'graphic' array.
     *
     * @property model
     * @type Object
     * @required
     */

    /**
     * List of mdJSON 'graphic' object attributes to display in
     * md-object-table to aid in choosing the onlineResource to edit or
     * delete.
     * The property is passed to md-object-table for configuration.
     *
     * @property attributes
     * @type String
     * @default 'name, uri'
     */
    attributes: 'fileName,fileDescription',
    /**
     * Name to place on the mdEditor panel header for entry and edit of
     * 'onlineResource' objects.
     * The property is passed to md-object-table for configuration.
     *
     * @property label
     * @type String
     * @default 'Graphic'
     */
    label: 'Graphic',
    /**
     * Label for the 'add item' button.
     * The property is passed to md-object-table for configuration.
     *
     * @property buttonText
     * @type String
     * @default 'Graphic'
     */
    buttonText: 'Add Graphic',
    previewTemplate: 'object/md-graphic-array/md-graphic-preview',
    templateClass: Ember.Object.extend({
      init() {
        this._super(...arguments);
        this.set('fileConstraint', Ember.A());
        this.set('fileUri', Ember.A());
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-graphic-array/md-graphic-preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "PzaHsj8q",
    "block": "{\"symbols\":[\"image\"],\"statements\":[[7,\"strong\",true],[8],[1,[24,[\"item\",\"fileName\"]],false],[0,\":\"],[9],[0,\"\\n\"],[4,\"each\",[[24,[\"item\",\"fileUri\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"uri\"]]],null,{\"statements\":[[0,\"    \"],[7,\"img\",true],[11,\"src\",[23,1,[\"uri\"]]],[10,\"class\",\"md-logo-preview img-responsive img-thumbnail\"],[10,\"alt\",\"Image Preview\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-graphic-array/md-graphic-preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-graphic-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Uwd1yQG9",
    "block": "{\"symbols\":[\"editing\",\"&default\"],\"statements\":[[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"buttonText\",\"templateClass\",\"previewTemplate\",\"profilePath\",\"attributes\"],[[24,[\"model\"]],[24,[\"label\"]],[24,[\"buttonText\"]],[24,[\"templateClass\"]],[24,[\"previewTemplate\"]],[24,[\"profilePath\"]],[24,[\"attributes\"]]]],{\"statements\":[[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"required\",\"profilePath\"],[[23,1,[\"fileName\"]],\"Name\",\"File Name\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".fileName\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"profilePath\"],[[23,1,[\"fileType\"]],\"File Type\",\"Enter the file format(s) of the logo.\",[28,\"concat\",[[24,[\"profilePath\"]],\".fileType\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"maxlength\",\"value\",\"label\",\"placeholder\",\"profilePath\"],[500,[23,1,[\"fileDescription\"]],\"Description\",\"Description of the file: Less than 500 characters\",[28,\"concat\",[[24,[\"profilePath\"]],\".fileDescription\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"object/md-online-resource-array\",null,[[\"shadow\",\"model\",\"ellipsis\",\"imagePicker\",\"profilePath\"],[false,[23,1,[\"fileUri\"]],true,true,[28,\"concat\",[[24,[\"profilePath\"]],\".onlineResource\"],null]]]],false],[0,\"\\n\\n\"]],\"parameters\":[1]},null],[14,2],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-graphic-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-identifier-array/component", ["exports", "mdeditor/pods/components/object/md-identifier/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      if (!this.model) {
        this.set('model', Ember.A());
      }
    },
    /**
     * mdEditor class for input and edit of mdJSON 'identifier' object
     * arrays.
     * The class manages the maintenance of an array of identifier
     * objects using the md-objectroute-table class.
     *
     * @module mdeditor
     * @submodule components-object
     * @class md-identifier-array
     * @uses md-objectroute-table
     * @constructor
     */

    attributeBindings: ['data-spy'],
    /**
     * mdJSON object containing the 'identifier' array.
     *
     * @property model
     * @type Object
     * @required
     */

    /**
     * List of mdJSON 'identifier' object attributes to display in
     * md-object-table to aid in choosing the identifier to edit or
     * delete.
     * The property is passed to md-object-table for configuration.
     *
     * @property attributes
     * @type String
     * @default 'name, uri'
     */
    attributes: 'identifier,namespace,description',
    /**
     * Name to place on the mdEditor panel header for entry and edit of
     * 'identifier' objects.
     * The property is passed to md-object-table for configuration.
     *
     * @property label
     * @type String
     * @default 'Identifier'
     */
    label: 'Identifier',
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: Ember.Object.extend(_component.Validations, {
      init() {
        this._super(...arguments);
        this.set('authority', {});
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-identifier-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "kfNU4fHB",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"object/md-objectroute-table\",null,[[\"items\",\"header\",\"buttonText\",\"ellipsis\",\"templateClass\",\"editItem\",\"attributes\",\"profilePath\"],[[24,[\"model\"]],[24,[\"label\"]],\"Add Identifier\",[24,[\"ellipsis\"]],[24,[\"templateClass\"]],[24,[\"editItem\"]],[24,[\"attributes\"]],[24,[\"profilePath\"]]]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-identifier-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-identifier-object-table/component", ["exports", "mdeditor/pods/components/object/md-identifier-array/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'identifier' object
     * arrays.
     * The class manages the maintenance of an array of identifier
     * objects using the md-object-table class.
     *
     * @module mdeditor
     * @submodule components-object
     * @class md-identifier-object-table
     * @uses md-object-table
     * @constructor
     */

    /**
     * Label for the panel
     *
     * @property label
     * @type {String}
     * @default undefined
     */

    /**
     * Array of identifiers
     *
     * @property model
     * @type {Array}
     * @default undefined
     */

    /**
     * Attributes displayed in the preview table.
     *
     * @property attributes
     * @type {String}
     * @default 'identifier,namespace'
     */
    attributes: 'identifier,namespace',
    ellipsis: true,
    /**
     * Default profile visibility
     *
     * @property visibility
     * @type {Boolean}
     * @default false
     */
    visibility: false
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-identifier-object-table/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "oosy2lbY",
    "block": "{\"symbols\":[\"editing\"],\"statements\":[[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"buttonText\",\"ellipsis\",\"templateClass\",\"attributes\"],[[24,[\"model\"]],[24,[\"label\"]],\"Add Identifier\",[24,[\"ellipsis\"]],[24,[\"templateClass\"]],[24,[\"attributes\"]]]],{\"statements\":[[0,\"\\n\"],[1,[28,\"object/md-identifier\",null,[[\"model\",\"short\",\"profilePath\"],[[23,1,[]],[24,[\"short\"]],[24,[\"profilePath\"]]]]],false],[0,\"\\n\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-identifier-object-table/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-identifier/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.Validations = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'identifier': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  const theComp = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.getWithDefault(this, 'model', {}) || {};
      Ember.run.once(this, function () {
        Ember.set(model, 'authority', Ember.getWithDefault(model, 'authority', {}));
      });
    },
    classNames: ['md-identifier'],
    attributeBindings: ['data-spy'],
    /**
     * The identifier object to render
     *
     * @property model
     * @type {object}
     * @required
     */

    /**
     * Render short form of the identifier template, i.e. no authority
     *
     * @property short
     * @type {Boolean}
     */

    /**
     * Determines whether to render identifier field with confirmation button
     *
     * @property confirmIdentifier
     * @type {Boolean}
     */

    identifier: Ember.computed.alias('model.identifier'),
    collapsible: false,
    collapse: true,
    isCollapsed: Ember.computed.and('collapsible', 'collapse')
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "vZeCbAzJ",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"component\",[[28,\"if\",[[24,[\"confirmIdentifier\"]],\"input/md-input-confirm\",\"input/md-input\"],null]],[[\"valuePath\",\"model\",\"confirmTip\",\"placeholder\",\"label\",\"required\",\"showValidations\",\"profilePath\",\"data-spy\",\"class\"],[\"identifier\",[23,0,[]],\"Note! Editing the identifier may break links. Be aware.\",\"Enter the identifier for the resource\",\"Identifier\",true,true,[28,\"concat\",[[24,[\"profilePath\"]],\".identifier\"],null],[28,\"if\",[[24,[\"data-spy\"]],\"Identifier\"],null],\"md-embedded\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-codelist\",null,[[\"label\",\"data-spy\",\"class\",\"placeholder\",\"create\",\"required\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"mdCodeName\",\"valuePath\",\"value\",\"profilePath\"],[\"Namespace\",[28,\"if\",[[24,[\"data-spy\"]],\"Namespace\"],null],\"md-embedded\",\"Select or type a namespace for the identifier.\",true,false,true,false,[24,[\"disabled\"]],true,\"namespace\",\"code\",[24,[\"model\",\"namespace\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".namespace\"],null]]]],false],[0,\"\\n\\n\"],[4,\"liquid-unless\",[[24,[\"isCollapsed\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"version\"]],\"Enter the version for the identifier.\",\"Version\",[28,\"concat\",[[24,[\"profilePath\"]],\".version\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\"],[[24,[\"model\",\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"Description\",\"Enter a description of the identifier.\"]]],false],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"short\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"shadow\",\"collapsible\",\"data-spy\",\"content\"],[\"Authority\",true,true,[28,\"if\",[[24,[\"data-spy\"]],\"Authority\"],null],[24,[\"model\",\"authority\"]]]],{\"statements\":[[0,\"      \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"profilePath\",\"embedded\",\"data-spy\",\"simpleIdentifier\"],[[24,[\"model\",\"authority\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".authority\"],null],true,[24,[\"data-spy\"]],true]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"collapsible\"]]],null,{\"statements\":[[0,\"  \"],[7,\"p\",true],[10,\"class\",\"text-right\"],[8],[0,\"\\n    \"],[7,\"a\",false],[12,\"role\",\"button\"],[12,\"class\",\"plain-link\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"toggle\",[\"collapse\",[23,0,[]]],null]]],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[[28,\"if\",[[24,[\"isCollapsed\"]],\"caret-down\",\"caret-up\"],null]],null],false],[0,\" \"],[1,[28,\"if\",[[24,[\"isCollapsed\"]],\"More\",\"Less\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[14,1]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-keyword-citation/component", ["exports", "mdeditor/pods/components/object/md-online-resource/component", "ember-cp-validations"], function (_exports, _component, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'onlineResource': [(0, _emberCpValidations.validator)('format', {
      regex: _component.regex,
      isWarning: true,
      message: 'This field should be a valid, resolvable uri.',
      dependentKeys: ['onlineResource', 'model.thesaurus.onlineResource.0.uri']
    })],
    title: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })
  });
  var _default = Ember.Component.extend(Validations, {
    disabled: Ember.computed('model.thesaurus.identifier.0.identifier', function () {
      return this.get('model.thesaurus.identifier.0.identifier') !== 'custom';
    }),
    title: Ember.computed.alias('model.thesaurus.title'),
    onlineResource: Ember.computed('model.thesaurus.onlineResource.0.uri', {
      get() {
        return this.get('model.thesaurus.onlineResource.0.uri');
      },
      set(key, value) {
        let ol = this.get('model.thesaurus.onlineResource');
        if (!Ember.isArray(ol)) {
          this.set('model.thesaurus.onlineResource', [{}]);
        }
        this.set('model.thesaurus.onlineResource.0.uri', value);
        return value;
      }
    }),
    date: Ember.computed('model.thesaurus.date.0.date', {
      get() {
        return this.get('model.thesaurus.date.0.date');
      },
      set(key, value) {
        let ol = this.get('model.thesaurus.date');
        if (!Ember.isArray(ol)) {
          this.set('model.thesaurus.date', [{}]);
        }
        this.set('model.thesaurus.date.0.date', value);
        return value;
      }
    }),
    dateType: Ember.computed('model.thesaurus.date.0.dateType', {
      get() {
        return this.get('model.thesaurus.date.0.dateType');
      },
      set(key, value) {
        let ol = this.get('model.thesaurus.date');
        if (!Ember.isArray(ol)) {
          this.set('model.thesaurus.date', [{}]);
        }
        this.set('model.thesaurus.date.0.dateType', value);
        return value;
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-keyword-citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "e4/iZuNL",
    "block": "{\"symbols\":[\"thesaurus\",\"&default\"],\"statements\":[[4,\"with\",[[24,[\"model\",\"thesaurus\"]]],null,{\"statements\":[[7,\"form\",true],[10,\"class\",\"md-keyword-citation form-horizontal\"],[8],[0,\"\\n  \"],[7,\"fieldset\",true],[11,\"disabled\",[22,\"disabled\"]],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"col-sm-2 control-label required\"],[8],[0,\"Title\"],[9],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"class\",\"placeholder\",\"valuePath\",\"model\",\"showValidations\",\"required\",\"profilePath\"],[\"col-sm-10\",\"Enter title\",\"title\",[23,0,[]],true,true,[28,\"concat\",[[24,[\"profilePath\"]],\".title\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n        \"],[7,\"label\",true],[10,\"class\",\"col-sm-2 control-label\"],[8],[0,\"Date\"],[9],[0,\"\\n        \"],[1,[28,\"input/md-datetime\",null,[[\"date\",\"class\",\"profilePath\"],[[24,[\"date\"]],\"col-xxl-4 col-md-10 col-sm-4\",[28,\"concat\",[[24,[\"profilePath\"]],\".date\"],null]]]],false],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group clearfix visible-md-block visible-lg-block\"],[8],[9],[0,\"\\n        \"],[7,\"label\",true],[10,\"class\",\"col-sm-2 control-label\"],[8],[0,\"Date Type\"],[9],[0,\"\\n        \"],[1,[28,\"input/md-codelist\",null,[[\"class\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"mdCodeName\",\"value\",\"placeholder\",\"profilePath\"],[\"col-xxl-4 col-md-10 col-sm-4\",false,true,false,[24,[\"disabled\"]],true,\"dateType\",[24,[\"dateType\"]],\"Choose date type\",[28,\"concat\",[[24,[\"profilePath\"]],\".dateType\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"col-sm-2 control-label\"],[8],[0,\"Type\"],[9],[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"class\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"mdCodeName\",\"value\",\"placeholder\",\"profilePath\"],[\"col-xxl-5 col-lg-7 col-sm-10\",true,true,false,[24,[\"disabled\"]],true,\"keywordType\",[24,[\"model\",\"keywordType\"]],\"Choose keyword type\",[28,\"concat\",[[24,[\"profilePath\"]],\".keywordType\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"col-sm-2 control-label\"],[8],[0,\"Edition\"],[9],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"class\",\"placeholder\",\"value\",\"required\",\"profilePath\"],[\"col-sm-10\",\"Enter edition or version\",[23,1,[\"edition\"]],false,[28,\"concat\",[[24,[\"profilePath\"]],\".edition\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"col-sm-2 control-label\"],[8],[0,\"URL\"],[9],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"class\",\"type\",\"valuePath\",\"model\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"col-sm-10\",\"url\",\"onlineResource\",[23,0,[]],true,\"Enter online link\",[28,\"concat\",[[24,[\"profilePath\"]],\".onlineResourceUrl\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[14,2],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-keyword-citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-keyword-list/component", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  /**
   * @module mdeditor
   * @submodule components-object
   */
  var _default = Ember.Component.extend({
    readOnly: Ember.computed('model.thesaurus.identifier.0.identifier', function () {
      return this.get('model.thesaurus.identifier.0.identifier') !== 'custom';
    }),
    actions: {
      addKeyword(model) {
        this.addKeyword(model);
      },
      deleteKeyword(model, object) {
        this.deleteKeyword(model, object);
      },
      hideThesaurus(el) {
        (0, _jquery.default)(el).closest('.md-keywords-container').toggleClass('hide-thesaurus');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-keyword-list/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "K/bTzbsx",
    "block": "{\"symbols\":[\"keyword\",\"keyword\",\"&default\"],\"statements\":[[4,\"unless\",[[24,[\"readOnly\"]]],null,{\"statements\":[[0,\"  \"],[7,\"table\",true],[10,\"class\",\"table table-striped table-hover fadeIn\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[0,\"Keyword\"],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[0,\"Id (Optional)\"],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"keyword\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n            \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"profilePath\"],[[23,2,[\"keyword\"]],\"Keyword\",[28,\"concat\",[[24,[\"profilePath\"]],\".keyword.keyword\"],null]]]],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n            \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"profilePath\"],[[23,2,[\"identifier\"]],\"Unique identifier\",[28,\"concat\",[[24,[\"profilePath\"]],\".keyword.identifier\"],null]]]],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"md-button-column\"],[8],[0,\"\\n              \"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-danger\"],[3,\"action\",[[23,0,[]],\"deleteKeyword\",[24,[\"model\",\"keyword\"]],[23,2,[]]]],[8],[0,\"\\n                \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"  \"],[7,\"tr\",true],[8],[0,\"\\n    \"],[7,\"td\",true],[10,\"colspan\",\"3\"],[8],[0,\"\\n      Add some keywords.\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"td\",true],[10,\"colspan\",\"3\"],[8],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addKeyword\",[24,[\"model\",\"keyword\"]]]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add Keyword\\n          \"],[9],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"hideThesaurus\",[23,0,[\"element\"]]]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"eye\"],null],false],[0,\" Toggle Thesaurus\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"\\n  \"],[7,\"ul\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"keyword\"]]],null,{\"statements\":[[0,\"      \"],[7,\"li\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-danger pull-right\"],[3,\"action\",[[23,0,[]],\"deleteKeyword\",[24,[\"model\",\"keyword\"]],[23,1,[]]]],[8],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete\\n        \"],[9],[0,\"\\n        \"],[1,[23,1,[\"keyword\"]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"    \"],[7,\"li\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"Add some keywords.\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[24,[\"editThesaurus\"]]],null,{\"statements\":[[0,\"    \"],[7,\"li\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n      \"],[7,\"button\",false],[12,\"class\",\"btn btn-block btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[24,[\"editThesaurus\"]],[24,[\"listId\"]]]],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit keywords.\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[14,3],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-keyword-list/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-lineage/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(function () {
        Ember.set(model, 'scope', Ember.getWithDefault(model, 'scope', {}));
        Ember.set(model, 'citation', Ember.getWithDefault(model, 'citation', []));
        Ember.set(model, 'processStep', Ember.getWithDefault(model, 'processStep', []));
        Ember.set(model, 'source', Ember.getWithDefault(model, 'source', []));
      });
    },
    tagName: 'form',
    /**
     * The string representing the path in the profile object for the citation.
     *
     * @property profilePath
     * @type {String}
     * @default "false"
     * @required
     */

    /**
     * The object to use as the data model for the citation.
     *
     * @property model
     * @type {Object}
     * @required
     */

    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property stepTemplateClass
     * @type Ember.Object
     */
    stepTemplateClass: Ember.Object.extend({
      init() {
        this._super(...arguments);
        this.set('timePeriod', {});
      }
    }),
    sourceTemplate: Ember.Object.extend()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-lineage/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    showMore: false,
    limit: 1,
    showLimit: Ember.computed('limit', 'showMore', function () {
      return this.showMore ? 100 : this.limit;
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-lineage/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "n53hMGlO",
    "block": "{\"symbols\":[\"step\",\"i\"],\"statements\":[[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n    \"],[7,\"dt\",true],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"text-info\"],[8],[0,\"Lineage #\"],[1,[22,\"index\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"dd\",true],[8],[9],[0,\"\\n    \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Statement\",[28,\"word-limit\",[[24,[\"item\",\"statement\"]]],[[\"wordLength\"],[20]]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-12\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Process Step\"]],{\"statements\":[[4,\"each\",[[24,[\"item\",\"processStep\"]]],null,{\"statements\":[[4,\"if\",[[28,\"lt\",[[23,2,[]],[24,[\"showLimit\"]]],null]],null,{\"statements\":[[0,\"          \"],[7,\"p\",true],[8],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"text-info\"],[8],[1,[28,\"if\",[[23,1,[\"stepId\"]],[23,1,[\"stepId\"]],[23,2,[]]],null],false],[9],[0,\": \"],[1,[28,\"word-limit\",[[23,1,[\"description\"]]],[[\"limit\",\"wordLength\"],[20,20]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1,2]},{\"statements\":[[0,\"            \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No process steps assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[24,[\"item\",\"processStep\",\"length\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"showMore\"]]],null,{\"statements\":[[0,\"      \"],[7,\"p\",true],[10,\"class\",\"text-right\"],[8],[0,\"\\n        \"],[7,\"a\",false],[12,\"role\",\"button\"],[12,\"class\",\"plain-link\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"toggle\",[\"showMore\",[23,0,[]]],null]]],[8],[0,\" \"],[1,[28,\"fa-icon\",[\"caret-up\"],null],false],[0,\" Less\"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"p\",true],[10,\"class\",\"text-right\"],[8],[0,\"\\n        \"],[7,\"a\",false],[12,\"role\",\"button\"],[12,\"class\",\"plain-link\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"toggle\",[\"showMore\",[23,0,[]]],null]]],[8],[1,[28,\"fa-icon\",[\"caret-down\"],null],false],[0,\" More\"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-lineage/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-lineage/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "0tL0cogP",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\",\"data-spy\",\"required\",\"autoresize\",\"maxrows\"],[[24,[\"model\",\"statement\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".statement\"],null],\"Statement\",\"A general statement of the actions taken to verify, transform, repair, and integrate the resource.\",\"Statement\",true,true,25]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"buttonText\",\"ellipsis\",\"previewTemplateTable\",\"templateClass\",\"editItem\",\"profilePath\",\"verticalButtons\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"scrollToId\",\"data-spy\"],[\"description\",[24,[\"model\",\"processStep\"]],\"Process Step\",\"Add Step\",false,\"object/md-process-step/preview\",[24,[\"stepTemplateClass\"]],[24,[\"editProcessStep\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".processStep\"],null],true,false,false,false,\"md-process-step\",\"Process Step\"]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplateTable\",\"editItem\",\"profilePath\",\"verticalButtons\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"scrollToId\",\"data-spy\"],[\"description\",[24,[\"model\",\"source\"]],\"Source\",true,\"Add Source\",false,\"object/md-source/preview\",[24,[\"editSource\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".source\"],null],true,false,false,false,\"md-source\",\"Source\"]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-citation-array\",null,[[\"model\",\"profilePath\",\"data-spy\",\"editItem\",\"label\"],[[24,[\"model\",\"citation\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".citation\"],null],\"Lineage Citation\",[24,[\"editCitation\"]],\"Citation\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"profilePath\",\"data-spy\"],[[24,[\"model\",\"scope\",\"scopeCode\"]],\"Scope\",true,true,true,\"scope\",false,\"Select type of resource.\",[28,\"concat\",[[24,[\"profilePath\"]],\".scope\"],null],\"Scope\"]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-lineage/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-locale-array/component", ["exports", "mdeditor/pods/components/object/md-locale/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    attributeBindings: ['data-spy'],
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: _component.Template
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-locale-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "c4C5OLYH",
    "block": "{\"symbols\":[\"locale\",\"item\"],\"statements\":[[4,\"object/md-array-table\",null,[[\"columns\",\"title\",\"required\",\"plain\",\"value\",\"validation\",\"data-spy\",\"templateClass\"],[\"Language,Character Set,Country\",[24,[\"title\"]],[24,[\"required\"]],[24,[\"plain\"]],[24,[\"value\"]],[24,[\"validation\"]],false,[24,[\"templateClass\"]]]],{\"statements\":[[4,\"with\",[[23,1,[\"item\"]]],null,{\"statements\":[[0,\"     \"],[7,\"td\",true],[8],[0,\"\\n       \"],[1,[28,\"input/md-codelist\",null,[[\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"showValidations\",\"placeholder\"],[\"language\",[23,2,[]],true,true,false,[24,[\"disabled\"]],\"language\",true,\"Select or enter a language code.\"]]],false],[0,\"\\n     \"],[9],[0,\"\\n     \"],[7,\"td\",true],[8],[0,\"\\n       \"],[1,[28,\"input/md-codelist\",null,[[\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"showValidations\",\"placeholder\"],[\"characterSet\",[23,2,[]],false,true,false,[24,[\"disabled\"]],\"characterSet\",true,\"Select character set.\"]]],false],[0,\"\\n     \"],[9],[0,\"\\n     \"],[7,\"td\",true],[8],[0,\"\\n       \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"placeholder\"],[[23,2,[\"country\"]],false,true,false,[24,[\"disabled\"]],\"countries\",\"Select country code.\"]]],false],[0,\"\\n     \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-locale-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-locale/component", ["exports", "ember-cp-validations", "ember-copy"], function (_exports, _emberCpValidations, _emberCopy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.Validations = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'language': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }),
    'characterSet': (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })
  });
  _exports.Validations = Validations;
  const theComp = Ember.Component.extend(Validations, {
    settings: Ember.inject.service(),
    didReceiveAttrs() {
      this._super(...arguments);
      let model = this.model || {};
      let settings = Ember.get(this, 'settings.data');
      (true && !(!Ember.isNone(model)) && Ember.assert('Model passed to md-locale must be an object', !Ember.isNone(model)));
      if (Object.keys(model).length === 0) {
        Ember.run.once(() => {
          Ember.setProperties(model, {
            language: (0, _emberCopy.copy)(settings.get('language')),
            characterSet: (0, _emberCopy.copy)(settings.get('characterSet')),
            country: (0, _emberCopy.copy)(settings.get('country'))
          });
        });
      }
    },
    language: Ember.computed.alias('model.language'),
    characterSet: Ember.computed.alias('model.characterSet')
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-locale/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "OchVCGXl",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"label\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"language\",[23,0,[]],true,true,false,[24,[\"disabled\"]],\"language\",\"Language\",true,\"Select or enter a language code.\",[28,\"concat\",[[24,[\"profilePath\"]],\".language\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"label\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"characterSet\",[23,0,[]],false,true,false,[24,[\"disabled\"]],\"characterSet\",\"Character Set\",true,\"Select character set.\",[28,\"concat\",[[24,[\"profilePath\"]],\".characterSet\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"label\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"country\"]],false,true,false,[24,[\"disabled\"]],\"countries\",\"Country\",\"Select country code.\",[28,\"concat\",[[24,[\"profilePath\"]],\".country\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-locale/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-maintenance/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.formatMaint = void 0;
  const formatMaint = function formatMaint(model) {
    Ember.setProperties(model, {
      'date': Ember.getWithDefault(model, 'date', []),
      'scope': Ember.getWithDefault(model, 'scope', []),
      'note': Ember.getWithDefault(model, 'note', []),
      'contact': Ember.getWithDefault(model, 'contact', [])
    });
    return model;
  };
  _exports.formatMaint = formatMaint;
  const theComp = Ember.Component.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'maintenance' objects.
     *
     * @class md-maintenance
     * @constructor
     *   myClass = new MyClass()
     */

    tagName: 'form',
    /**
     * The string representing the path in the profile object.
     *
     * @property profilePath
     * @type {String}
     * @default "false"
     * @required
     */

    /**
     * The object to use as the data model.
     *
     * @property model
     * @type {Object}
     * @required
     */

    /**
     * Setup default values for the model.
     *
     * @method didReceiveAttrs
     */
    didReceiveAttrs() {
      this._super(...arguments);
      Ember.run.once(this, function () {
        this.set('model', Ember.getWithDefault(this, 'model', {}));
        formatMaint(this.model);
      });
    },
    scopes: Ember.computed('scope', {
      get() {
        let scope = Ember.get(this, 'model.scope');
        return scope ? scope.mapBy('scopeCode') : [];
      },
      set(key, value) {
        let map = value.map(itm => {
          return {
            scopeCode: itm
          };
        });
        Ember.set(this, 'model.scope', map);
        return value;
      }
    })
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-maintenance/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "+s+wz0An",
    "block": "{\"symbols\":[\"val\",\"&default\"],\"statements\":[[1,[28,\"input/md-codelist\",null,[[\"label\",\"create\",\"required\",\"tooltip\",\"icon\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"value\",\"placeholder\",\"profilePath\"],[\"Frequency\",true,true,true,false,true,true,\"maintenanceFrequency\",[24,[\"model\",\"frequency\"]],\"Choose a value.\",[28,\"concat\",[[24,[\"profilePath\"]],\".frequency\"],null]]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\",\"data-spy\",\"class\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".dates\"],null],\"Dates\",\"md-embedded\"]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-date-array\",null,[[\"value\",\"plain\",\"data-spy\",\"profilePath\"],[[24,[\"model\",\"date\"]],true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".dates\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".contact\"],null]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"data-spy\",\"collapsible\",\"collapsed\",\"required\",\"value\",\"class\",\"plain\",\"profilePath\"],[\"Contact\",\"Contacts\",true,false,false,[24,[\"model\",\"contact\"]],\"md-embedded\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".contact\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".note\"],null]]],{\"statements\":[[4,\"object/md-simple-array-table\",null,[[\"title\",\"required\",\"plain\",\"class\",\"value\"],[\"Notes\",false,true,\"md-embedded\",[24,[\"model\",\"note\"]]]],{\"statements\":[[0,\"    \"],[7,\"td\",true],[8],[0,\"\\n        \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\"],[[23,1,[\"item\",\"value\"]],\"Enter notes regarding the maintenance of the resource.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"profilePath\"],[[24,[\"scopes\"]],\"Scope\",true,true,true,\"scope\",false,\"Select type of resource.\",[28,\"concat\",[[24,[\"profilePath\"]],\".scope\"],null]]]],false],[0,\"\\n\\n\"],[14,2],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-maintenance/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-medium/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(function () {
        Ember.set(model, 'mediumSpecification', Ember.getWithDefault(model, 'mediumSpecification', {}));
        Ember.set(model, 'identifier', Ember.getWithDefault(model, 'identifier', {}));
        Ember.set(model, 'mediumFormat', Ember.getWithDefault(model, 'mediumFormat', []));
      });
    },
    tagName: 'form',
    /**
     * The profile path for the component
     *
     * @property profilePath
     * @type {String}
     */

    title: Ember.computed.alias('model.mediumSpecification.title')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-medium/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "cYn7Y4sA",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"label\",\"value\",\"placeholder\",\"profilePath\"],[\"Medium Title\",[24,[\"model\",\"mediumSpecification\",\"title\"]],\"Name of the medium\",[28,\"concat\",[[24,[\"profilePath\"]],\".mediumTitle\"],null]]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"profilePath\",\"plain\"],[false,false,[28,\"concat\",[[24,[\"profilePath\"]],\".storage\"],null],true]],{\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"label\",true],[10,\"class\",\"text-info col-md-2\"],[8],[0,\"Storage\"],[9],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"type\",\"value\",\"step\",\"label\",\"placeholder\",\"profilePath\",\"class\"],[\"number\",[24,[\"model\",\"density\"]],\"0.01\",\"Density\",\"Density at which the data are recorded.\",[28,\"concat\",[[24,[\"profilePath\"]],\".storage.density\"],null],\"col-md-3\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"profilePath\",\"placeholder\",\"class\"],[[24,[\"model\",\"units\"]],\"Density Units\",[28,\"concat\",[[24,[\"profilePath\"]],\".storage.units\"],null],\"Units of measure for the recording density.\",\"col-md-3\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"type\",\"value\",\"step\",\"label\",\"placeholder\",\"profilePath\",\"class\"],[\"number\",[24,[\"model\",\"numberOfVolumes\"]],\"1\",\"Number Of Volumes\",\"The number of volumes in the media resource.\",[28,\"concat\",[[24,[\"profilePath\"]],\".storage.numberOfVolumes\"],null],\"col-md-3\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"label\",\"value\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"class\",\"profilePath\"],[\"Storage Format\",[24,[\"model\",\"mediumFormat\"]],true,true,false,\"mediumFormat\",false,\"Method used to write to the medium.\",\"col-md-10 col-md-offset-2\",[28,\"concat\",[[24,[\"profilePath\"]],\".storage.format\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"plain\",\"profilePath\"],[false,false,true,[28,\"concat\",[[24,[\"profilePath\"]],\".identifier\"],null]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-identifier\",null,[[\"profilePath\",\"short\",\"model\"],[[28,\"concat\",[[24,[\"profilePath\"]],\".identifier\"],null],true,[24,[\"model\",\"identifier\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"autoresize\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"note\"]],false,\"Describe other limitations or requirements for using the medium.\",\"Note\",[28,\"concat\",[[24,[\"profilePath\"]],\".note\"],null]]]],false],[0,\"\\n\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-medium/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-object-table/component", ["exports", "mdeditor/helpers/uc-words", "mdeditor/mixins/object-template"], function (_exports, _ucWords, _objectTemplate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  //import InViewportMixin from 'ember-in-viewport';
  var _default = Ember.Component.extend(_objectTemplate.default, {
    /**
     * mdEditor class for managing a table of similar mdJSON objects
     * for selection for edit or deletion.
     * The class is configurable for reuse with mdJSON object arrays.
     *
     * ```handlebars
     * \{{#object/md-object-table
     *  items=model
     *  header=label
     *  buttonText=buttonText
     *  templateClass=templateClass
     *  previewTemplate=previewTemplate
     *  ellipsis=ellipsis
     *  attributes=attributes as |editing|
     * }}
     *
     * {{/object/md-object-table}}
     * ```
     *
     * @class md-object-table
     * @submodule components-object
     * @module mdeditor
     * @constructor
     * @uses object-template
     */

    spotlight: Ember.inject.service(),
    didReceiveAttrs() {
      this._super(...arguments);
      this.applyTemplateArray('items');
    },
    attributeBindings: ['data-spy'],
    classNameBindings: ['shadow:box-shadow--4dp'],
    classNames: ['md-object-table'],
    //reset the 'editing' flag
    didUpdateAttrs() {
      this._super(...arguments);
      if (this.editing !== 'adding') this.set('editing', false);
    },
    /**
     * Array of the mdJSON object to display in the object table for
     * selection to edit or delete.
     *
     * @property items
     * @type Array
     * @default Ember.A()
     * @required
     */
    items: Ember.A(),
    /**
     * List of items object attributes to display in
     * md-object-table to aid in choosing the item to edit or
     * delete.
     *
     * @property attributes
     * @type String
     * @required
     */

    /**
     * Name to place on the mdEditor panel header for entry and edit of
     * items objects.
     *
     * @property header
     * @type String
     * @required
     */

    /**
     * The path of template to render in the table preview for each row.
     * Template content will be wrapped in a `<td>` element.
     *
     * @property previewTemplate
     * @type {String}
     * @optional
     * @default undefined
     */

    /**
     * The path of template to render in the table preview for each row.
     * Template content will NOT be wrapped in a `<td>` element. The `property`
     * class should be applied to each `<td>`.`
     *
     * @property previewTemplateTable
     * @type {String}
     * @optional
     * @default undefined
     */

    /**
     * The prefix to use for creating the id for each row element. A dash,'-',
     * followed by the item array index will be appended to the prefix to form the
     * id.
     *
     * @property scrollToId
     * @type {String}
     * @optional
     * @default undefined
     */

    /**
     * The template class to use for new items. This should be a constructor.
     * Objects should be created by extending Ember.Object.
     *  ```javascript
     *  Ember.Object.extend({
     *    init() {
     *      this._super(...arguments);
     *
     *      this.set('foo', A());
     *      this.set('bar', A());
     *    }
     *  })
     *  ```
     *
     * @property templateClass
     * @type {Any}
     * @constructor
     * @default null
     * @required
     */
    templateClass: null,
    /**
     * Determines add button text
     *
     * @property buttonText
     * @type String
     * @default Add
     */
    buttonText: "Add",
    /**
     * Render the row actions vertically.
     *
     * @property verticalButtons
     * @type {Boolean}
     * @default undefined
     */

    /**
     * Inital collapse state for the panel.
     *
     * @property isCollapsed
     * @type {Boolean}
     * @default undefined
     */

    /**
     * Indicates at least one object is required.
     *
     * @property required
     * @type {Boolean}
     * @default undefined
     */

    /**
     * Whether the panel is collapsible.
     *
     * @property collapsible
     * @type {Boolean}
     * @default true
     */
    collapsible: true,
    /**
     * True to truncate the preview table cell text.
     *
     * @property ellipsis
     * @type {Boolean}
     * @default undefined
     */

    /**
     * If true, a box shadow will be rendered around the panel.
     *
     * @property shadow
     * @type {Boolean}
     * @default true
     */
    shadow: true,
    /**
     * If true, an alert will be rendered with an "add" button when no items are
     * present.
     *
     * @property alertIfEmpty
     * @type {Boolean}
     * @default true
     */
    alertIfEmpty: true,
    /**
     * The error message to display, if required = true. Overrides the validation
     * message.
     *
     * @property errorMessage
     * @type {String}
     * @default undefined
     */

    /**
     * The height to offset from top of container when scrolling.
     *
     * @property offset
     * @type {Number}
     * @default 130
     */
    offset: 130,
    /**
     * Uses isCollapsed if defined, otherwise inspects array length.
     *
     * @property collapsed
     * @type {Boolean}
     * @readOnly
     * @category computed
     * @requires isCollapsed
     */
    collapsed: Ember.computed('isCollapsed', 'items.[]', function () {
      let isCollapsed = this.isCollapsed;
      let value = this.items;
      if (isCollapsed !== undefined) {
        return isCollapsed;
      } else if (value && value.length > 0) {
        return false;
      } else {
        return true;
      }
    }),
    /**
     * Render an alert if the items array is empty and alertIfEmpty is true.
     *
     * @property showAlert
     * @type {Boolean}
     * @default "false"
     * @readOnly
     * @category computed
     * @requires items.length,alertIfEmpty
     */
    showAlert: Ember.computed('items.length', 'alertIfEmpty', function () {
      return Ember.get(this, 'items.length') === 0 && Ember.get(this, 'alertIfEmpty');
    }),
    panelId: Ember.computed('items.@each.val', 'editing', function () {
      return 'panel-' + this.elementId;
    }),
    btnSize: Ember.computed('verticalButtons', function () {
      return this.verticalButtons ? 'md' : 'xs';
    }),
    /**
     * Render the footer if the items array length is greater than 5.
     *
     * @property showFooter
     * @type {Boolean}
     * @readOnly
     * @category computed
     * @requires items.length
     */
    showFooter: Ember.computed.gt('items.length', 5),
    attrArray: Ember.computed('attributes', function () {
      let attr = this.attributes;
      return attr ? attr.split(',').map(itm => itm.split(':')[0]) : null;
    }),
    attrTitleArray: Ember.computed('attributes', function () {
      return this.attributes.split(',').map(function (item) {
        let title = item.trim().split('.').get('lastObject').split(':');
        return title.length === 1 ? (0, _ucWords.ucWords)([title[0].dasherize().replace(/-/g, ' ')], {
          force: false
        }) : title[1];
      });
    }),
    editing: false,
    pillColor: Ember.computed('items.[]', function () {
      let count = this.get('items.length') || 0;
      return count > 0 ? 'label-info' : 'label-warning';
    }),
    alertTipMessage: Ember.computed('tipModel', 'tipPath', 'errorMessage', function () {
      if (this.errorMessage) {
        return this.errorMessage;
      }
      return this.tipModel ? this.tipModel.get("validations.attrs.".concat(this.tipPath, ".message")) : null;
    }),
    actions: {
      deleteItem: function deleteItem(items, index) {
        let last = Object.keys(items.get('lastObject'));
        if (Ember.isEmpty(last)) {
          items.replace();
        }
        if (items.length === 0) return;
        items.removeAt(index);
      },
      addItem: function addItem() {
        const Template = this.templateClass;
        const owner = Ember.getOwner(this);
        const spotlight = this.spotlight;
        let itm = Ember.typeOf(Template) === 'class' ? Template.create(owner.ownerInjection()) : Ember.Object.create({});
        let items = this.items;
        this.set('saveItem', itm);
        this.set('editing', 'adding');
        items.pushObject(this.saveItem);
        spotlight.setTarget(this.elementId);
        //this.scrollTo(this.elementId);
      },

      editItem: function editItem(items, index) {
        const spotlight = this.spotlight;
        this.set('saveItem', items.objectAt(index));
        this.set('editing', 'editing');
        spotlight.setTarget(this.elementId);
      },
      cancelEdit: function cancelEdit() {
        const spotlight = this.spotlight;
        this.set('editing', false);
        spotlight.close();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-object-table/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "toKTySRO",
    "block": "{\"symbols\":[\"item\",\"index\",\"note\",\"prop\",\"prop\",\"&default\"],\"statements\":[[4,\"unless\",[[24,[\"showAlert\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[11,\"class\",[29,[\"md-object-table panel panel-default \",[28,\"if\",[[24,[\"editing\"]],\"editing\"],null]]]],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"panel-heading\"],[8],[0,\"\\n      \"],[7,\"h3\",true],[10,\"class\",\"panel-title md-panel-chevron\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"collapsible\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",true],[10,\"role\",\"button\"],[10,\"data-toggle\",\"collapse\"],[11,\"href\",[29,[\"#\",[28,\"unless\",[[24,[\"editing\"]],[24,[\"panelId\"]]],null]]]],[11,\"aria-expanded\",[28,\"if\",[[24,[\"collapsed\"]],\"false\",\"true\"],null]],[11,\"class\",[28,\"if\",[[24,[\"collapsed\"]],\"collapsed\"],null]],[11,\"aria-controls\",[22,\"panelId\"]],[8],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\" \"],[1,[22,\"header\"],false],[0,\"\\n              \"],[7,\"div\",true],[11,\"class\",[29,[\"label label-pill \",[22,\"pillColor\"]]]],[8],[0,\" \"],[1,[24,[\"items\",\"length\"]],false],[0,\" \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[22,\"header\"],false],[0,\"\\n          \"],[7,\"label\",true],[11,\"class\",[29,[\"label label-pill \",[22,\"pillColor\"]]]],[8],[0,\" \"],[1,[24,[\"items\",\"length\"]],false],[0,\" \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n          \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",[29,[\"btn btn-xs btn-info pull-right \",[28,\"if\",[[24,[\"editing\"]],\"hidden\"],null]]]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\",[24,[\"items\"]]]],[8],[0,\"\\n              \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add\\n          \"],[9],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",[29,[\"btn btn-xs btn-info pull-right \",[28,\"unless\",[[24,[\"editing\"]],\"hidden\"],null]]]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancelEdit\"]],[8],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"fa fa-check\"],[8],[9],[0,\" OK\\n          \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[11,\"id\",[22,\"panelId\"]],[11,\"class\",[29,[\"panel-collapse \",[28,\"if\",[[24,[\"collapsed\"]],\"collapse\",\"in\"],null]]]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"editing\"]]],null,{\"statements\":[[4,\"control/md-scroll-into-view\",null,null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"panel-body object-editor\"],[8],[0,\"\\n                \"],[14,6,[[24,[\"saveItem\"]]]],[0,\"\\n                \"],[7,\"hr\",true],[8],[9],[0,\"\\n                \"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancelEdit\"]],[8],[0,\"\\n                    \"],[7,\"span\",true],[10,\"class\",\"fa fa-check\"],[8],[9],[0,\" OK\\n                \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[7,\"div\",true],[11,\"class\",[29,[\"panel-body \",[28,\"if\",[[24,[\"condensed\"]],\"condensed\"],null],\" \",[28,\"if\",[[24,[\"responsive\"]],\"table-responsive\"],null]]]],[8],[0,\"\\n\"],[0,\"            \"],[7,\"table\",true],[11,\"class\",[29,[\"table table-striped table-hover fadeIn \",[28,\"if\",[[24,[\"ellipsis\"]],\"ellipsis\"],null]]]],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"previewTemplate\"]]],null,{\"statements\":[[0,\"                \"],[7,\"thead\",true],[8],[0,\"\\n                  \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"th\",true],[8],[0,\"#\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[24,[\"attrTitleArray\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"th\",true],[8],[1,[23,5,[]],false],[9],[0,\"\\n\"]],\"parameters\":[5]},null],[0,\"                    \"],[7,\"th\",true],[8],[9],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"items\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"tr\",true],[11,\"id\",[28,\"if\",[[24,[\"scrollToId\"]],[28,\"concat\",[[24,[\"scrollToId\"]],\"-\",[23,2,[]]],null],\"\"],null]],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                        \"],[7,\"td\",true],[10,\"class\",\"md-table-index\"],[8],[0,\"\\n                          \"],[1,[23,2,[]],false],[0,\"\\n                        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"previewTemplateTable\"]]],null,{\"statements\":[[0,\"                            \"],[1,[28,\"component\",[[24,[\"previewTemplateTable\"]]],[[\"item\",\"index\",\"profilePath\",\"isTable\"],[[23,1,[]],[23,2,[]],[24,[\"profilePath\"]],true]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"previewTemplate\"]]],null,{\"statements\":[[0,\"                            \"],[7,\"td\",true],[10,\"class\",\"property\"],[8],[1,[28,\"component\",[[24,[\"previewTemplate\"]]],[[\"item\",\"index\",\"profilePath\"],[[23,1,[]],[23,2,[]],[24,[\"profilePath\"]]]]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"each\",[[24,[\"attrArray\"]]],null,{\"statements\":[[4,\"if\",[[28,\"get\",[[23,1,[]],[23,4,[]]],null]],null,{\"statements\":[[0,\"                                \"],[7,\"td\",true],[10,\"class\",\"property\"],[8],[7,\"div\",true],[10,\"class\",\"wrap\"],[8],[1,[28,\"get\",[[23,1,[]],[23,4,[]]],null],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                                \"],[7,\"td\",true],[8],[7,\"em\",true],[8],[0,\"Not Defined\"],[9],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[4]},null],[0,\"                        \"]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"                        \"],[7,\"td\",true],[11,\"class\",[29,[\"md-row-actions \",[28,\"if\",[[24,[\"verticalButtons\"]],\"vertical\"],null],\" \",[22,\"alignButtons\"]]]],[8],[0,\"\\n                          \"],[7,\"div\",true],[10,\"class\",\"btn-toolbar\"],[10,\"role\",\"toolbar\"],[10,\"aria-label\",\"Row Toolbar\"],[8],[0,\"\\n                            \"],[7,\"div\",true],[11,\"class\",[29,[\"btn-group\",[28,\"if\",[[24,[\"verticalButtons\"]],\"-vertical\"],null]]]],[10,\"role\",\"group\"],[10,\"aria-label\",\"Action Buttons\"],[8],[0,\"\\n                              \"],[7,\"button\",false],[12,\"class\",[29,[\"btn btn-\",[22,\"btnSize\"],\" btn-success\"]]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"editItem\",[24,[\"items\"]],[23,2,[]],[28,\"if\",[[24,[\"scrollToId\"]],[28,\"concat\",[[24,[\"scrollToId\"]],\"-\",[23,2,[]]],null],null],null]]],[8],[0,\"\\n                                \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" \"],[1,[28,\"if\",[[24,[\"editBtnText\"]],[24,[\"editBtnText\"]],\"Edit\"],null],false],[0,\"\\n                              \"],[9],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[[28,\"concat\",[\"btn btn-\",[24,[\"btnSize\"]],\" btn-danger\"],null],[28,\"action\",[[23,0,[]],\"deleteItem\",[24,[\"items\"]],[23,2,[]]],null]]],{\"statements\":[[0,\"                                \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"\\n                            \"],[9],[0,\"\\n\\n                            \"],[7,\"div\",true],[11,\"class\",[29,[\"btn-group\",[28,\"if\",[[24,[\"verticalButtons\"]],\"-vertical\"],null]]]],[10,\"role\",\"group\"],[10,\"aria-label\",\"Row Note\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"noteComponents\"]]],null,{\"statements\":[[4,\"if\",[[23,3,[\"component\"]]],null,{\"statements\":[[0,\"                                  \"],[1,[28,\"component\",[[23,3,[\"component\"]]],[[\"model\",\"index\",\"options\"],[[23,1,[]],[23,2,[]],[23,3,[\"options\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[3]},null],[0,\"                            \"],[9],[0,\"\\n                            \"],[7,\"div\",true],[11,\"class\",[29,[\"btn-group\",[28,\"if\",[[24,[\"verticalButtons\"]],\"-vertical\"],null]]]],[10,\"role\",\"group\"],[10,\"aria-label\",\"Row Error\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"validations\",\"isInvalid\"]]],null,{\"statements\":[[0,\"                              \"],[7,\"span\",true],[10,\"class\",\"md-error\"],[8],[0,\"\\n                                \"],[1,[28,\"fa-icon\",[\"exclamation-circle\"],[[\"fixedWidth\"],[true]]],false],[0,\"\\n\"],[4,\"ember-tooltip\",null,[[\"side\",\"tooltipClass\"],[\"right\",\"ember-tooltip md-tooltip danger\"]],{\"statements\":[[0,\"                                This item has errors.\\n\"]],\"parameters\":[]},null],[0,\"                              \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                              \"],[7,\"span\",true],[10,\"class\",\"md-error\"],[8],[0,\"\\n                                \"],[7,\"span\",true],[10,\"class\",\"fa fa-fw\"],[8],[9],[0,\"\\n                              \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                            \"],[9],[0,\"\\n                          \"],[9],[0,\"\\n                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"                    \"],[7,\"tr\",true],[8],[0,\"\\n                        \"],[7,\"td\",true],[11,\"colspan\",[28,\"add-em\",[[24,[\"attrArray\",\"length\"]],[28,\"if\",[[24,[\"hideIndex\"]],1,2],null]],null]],[8],[0,\"\\n                          \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\",[24,[\"items\"]]]],[8],[0,\"\\n                              \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" \"],[1,[22,\"buttonText\"],false],[0,\"\\n                          \"],[9],[0,\"\\n                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                \"],[9],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"showFooter\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"panel-footer text-right\"],[8],[0,\"\\n            \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",[29,[\"btn btn-sm btn-info \",[28,\"if\",[[24,[\"editing\"]],\"hidden\"],null]]]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\",[24,[\"items\"]]]],[8],[0,\"\\n                \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add \"],[1,[22,\"header\"],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"control/md-alert-table\",null,[[\"title\",\"required\",\"addItem\",\"target\",\"tipMessage\"],[[24,[\"header\"]],[24,[\"required\"]],[28,\"action\",[[23,0,[]],\"addItem\"],null],[24,[\"items\"]],[24,[\"alertTipMessage\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"addSubbar\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[[24,[\"addSubbar\"]],[28,\"component\",[\"control/subbar-link\"],[[\"clickText\",\"clickIcon\",\"clickType\",\"click\"],[[24,[\"buttonText\"]],\"plus\",\"success\",[28,\"action\",[[23,0,[]],\"addItem\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-object-table/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-objectroute-table/component", ["exports", "mdeditor/pods/components/object/md-object-table/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * The route used to edit items
     *
     * @property itemRoute
     * @type {String}
     * @required
     */

    /**
     * Comma separated string of addtional route parameters
     *
     * @property routeParams
     * @type {String}
     * @default undefined
     */

    /**
     * Indicates whether to show alert if no items are present
     *
     * @property alertIfEmpty
     * @type {Boolean}
     * @default "true"
     */

    alertIfEmpty: true,
    /**
     * Indicates whether to immediately navigate to the edit route on add
     *
     * @property editOnAdd
     * @type {Boolean}
     * @default "true"
     */
    editOnAdd: true,
    /**
     * Method used to load form for editing item. Should be overidden.
     *
     * @method editItem
     */
    editItem() {
      return this;
    },
    editBtnText: 'More...',
    layoutName: 'components/object/md-object-table',
    actions: {
      addItem: function addItem() {
        const Template = this.templateClass;
        const owner = Ember.getOwner(this);
        let editItem = this.editItem;
        let items = this.items;
        let itm = Ember.typeOf(Template) === 'class' ? Template.create(owner.ownerInjection()) : Ember.Object.create({});
        if (Ember.isBlank(editItem)) {
          (true && !(false) && Ember.assert("You must supply an editItem method to ".concat(this.toString(), ".")));
        }
        items.pushObject(itm);
        if (this.editOnAdd) {
          editItem(items.indexOf(itm), this.routeParams, "".concat(this.scrollToId, "-").concat(this.items.length - 1));
        }
      },
      editItem: function editItem(items, index, scrollTo) {
        this.editItem(index, this.routeParams, scrollTo);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-online-resource-array/component", ["exports", "mdeditor/pods/components/object/md-online-resource/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    didReceiveAttrs() {
      this._super(...arguments);
      if (!this.model) {
        Ember.run.once(this, () => this.set('model', Ember.A()));
      }
    },
    /**
     * mdEditor class for input and edit of mdJSON 'onlineResource' object
     * arrays.
     * The class manages the maintenance of an array of online resource
     * objects using the md-object-table class.
     *
     * @module mdeditor
     * @submodule components-object
     * @class md-online-resource-array
     * @constructor
     */

    attributeBindings: ['data-spy'],
    /**
     * mdJSON object containing the 'onlineResource' array.
     *
     * @property model
     * @type Object
     * @required
     */

    /**
     * Display the image picker and preview
     *
     * @property imagePicker
     * @type {Boolean}
     * @default undefined
     */

    /**
     * Truncate the text
     *
     * @property ellipsis
     * @type {Boolean}
     * @default true
     */
    ellipsis: true,
    /**
     * List of mdJSON 'onlineResource' object attributes to display in
     * md-object-table to aid in choosing the onlineResource to edit or
     * delete.
     * The property is passed to md-object-table for configuration.
     *
     * @property attributes
     * @type String
     * @default 'name, uri'
     */
    attributes: 'name,uri',
    /**
     * Name to place on the mdEditor panel header for entry and edit of
     * 'onlineResource' objects.
     * The property is passed to md-object-table for configuration.
     *
     * @property label
     * @type String
     * @default 'Online Resource'
     */
    label: 'Online Resource',
    /**
     * If true, a box shadow will be rendered around the card.
     *
     * @property shadow
     * @type {Boolean}
     * @default true
     */
    shadow: true,
    /**
     * The template to use for the preview table rows. If not overridden, will use
     * the `md-image-preview` template if `imagePicker = true`.
     *
     * @property previewTemplate
     * @type {String}
     * @readOnly
     * @category computed
     * @requires imagePicker
     */
    previewTemplate: Ember.computed('imagePicker', function () {
      return this.imagePicker ? "object/md-online-resource-array/md-image-preview" : null;
    }),
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: Ember.Object.extend(_component.Validations, {
      init() {
        this._super(...arguments);
        //this.set('uri', null);
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-online-resource-array/md-image-preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "CZxCEduD",
    "block": "{\"symbols\":[],\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"md-preview-image text-center\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"item\",\"uri\"]]],null,{\"statements\":[[0,\"    \"],[7,\"img\",true],[11,\"src\",[24,[\"item\",\"uri\"]]],[10,\"class\",\"img-responsive img-thumbnail\"],[10,\"alt\",\"Image Preview\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    URI Not Defined\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal\"],[8],[0,\"\\n  \"],[7,\"dt\",true],[8],[0,\"Name\"],[9],[0,\"\\n  \"],[7,\"dd\",true],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"wrap\"],[8],[1,[28,\"html-safe\",[[28,\"if\",[[24,[\"item\",\"name\"]],[24,[\"item\",\"name\"]],\"<em>Not Defined</em>\"],null]],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"dt\",true],[8],[0,\"URI\"],[9],[0,\"\\n  \"],[7,\"dd\",true],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"wrap\"],[8],[1,[28,\"html-safe\",[[28,\"if\",[[24,[\"item\",\"uri\"]],[24,[\"item\",\"uri\"]],\"<em>Not Defined</em>\"],null]],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-online-resource-array/md-image-preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-online-resource-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "c7nLfy2Y",
    "block": "{\"symbols\":[\"editing\",\"&default\"],\"statements\":[[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplate\",\"profilePath\",\"templateClass\",\"attributes\"],[[24,[\"model\"]],[24,[\"label\"]],[24,[\"shadow\"]],\"Add Resource\",[24,[\"ellipsis\"]],[24,[\"previewTemplate\"]],[24,[\"profilePath\"]],[24,[\"templateClass\"]],[24,[\"attributes\"]]]],{\"statements\":[[0,\"\\n    \"],[1,[28,\"object/md-online-resource\",null,[[\"imagePicker\",\"model\",\"profilePath\"],[[24,[\"imagePicker\"]],[23,1,[]],[24,[\"profilePath\"]]]]],false],[0,\"\\n\\n\"]],\"parameters\":[1]},null],[14,2],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-online-resource-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-online-resource/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.regex = _exports.Validations = void 0;
  const regex = new RegExp("([A-Za-z][A-Za-z0-9+\\-.]*):(?:(//)(?:((?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*)@)?((?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*))(?::([0-9]*))?((?:/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)|/((?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?)|((?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)|)(?:\\?((?:[A-Za-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*))?(?:\\#((?:[A-Za-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*))?");
  _exports.regex = regex;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'uri': [(0, _emberCpValidations.validator)('format', {
      regex: regex,
      isWarning: true,
      message: 'This field should be a valid, resolvable uri.'
    }), (0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  const theComp = Ember.Component.extend({
    didReceiveAttrs() {
      this._super(...arguments);
      Ember.run.once(this, () => {
        let plain = this.model;
        if (plain && !Ember.get(plain, 'validations')) {
          const Model = Ember.Object.extend(Validations, plain);
          const owner = Ember.getOwner(this);
          let model = Model.create(owner.ownerInjection(), plain);
          this.set('model', model);
        }
      });
    },
    flashMessages: Ember.inject.service(),
    classNames: ['md-online-resource'],
    attributeBindings: ['data-spy'],
    /**
     * Display the image picker and preview
     *
     * @property imagePicker
     * @type {Boolean}
     * @default undefined
     */

    actions: {
      handleFile(file) {
        if (file.size > 50000) {
          Ember.get(this, 'flashMessages').danger("The image exceeded the maximum size of 50KB: ".concat(file.size, " bytes.\n            Please use an online URL to load the image."));
        } else {
          let model = this.model;
          Ember.set(model, 'name', file.name);
          Ember.set(model, 'uri', file.data);
          if (file.size > 25000) {
            Ember.get(this, 'flashMessages').warning("The image exceeded the recommended size of 25KB: ".concat(file.size, " bytes"));
          }
          //reset the input field
          //this.$('.import-file-picker input:file').val('');
        }
      }
    }
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-online-resource/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "+Xw4NviR",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"name\"]],\"Name\",\"Online Resource Name\",[28,\"concat\",[[24,[\"profilePath\"]],\".name\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-input\",null,[[\"type\",\"valuePath\",\"model\",\"profilePath\",\"label\",\"placeholder\"],[\"url\",\"uri\",[24,[\"model\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".url\"],null],\"URI\",\"Online Resource URI\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"imagePicker\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n\"],[4,\"file-picker\",null,[[\"class\",\"fileLoaded\",\"preview\",\"accept\",\"readAs\"],[\"md-file-picker text-center\",\"handleFile\",false,\".jpeg,.jpg,.png,.gif,.svg\",\"readAsDataURL\"]],{\"statements\":[[0,\"        \"],[7,\"button\",true],[10,\"class\",\"btn btn-lg btn-info\"],[10,\"type\",\"button\"],[8],[0,\"\\n          \"],[1,[28,\"fa-icon\",[\"bullseye\"],null],false],[0,\" Click to Select or Drop Image\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"md-preview-image text-center\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"uri\"]]],null,{\"statements\":[[0,\"            \"],[7,\"img\",true],[11,\"src\",[24,[\"model\",\"uri\"]]],[10,\"class\",\"img-responsive img-thumbnail\"],[10,\"alt\",\"Image Preview\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            Enter URI or select file to preview.\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"input/md-input\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\"],[[24,[\"model\",\"protocol\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".protocol\"],null],\"Protocol\",\"Protocol for accessing the Online Resource\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"maxlength\",\"value\",\"label\",\"profilePath\",\"placeholder\"],[500,[24,[\"model\",\"description\"]],\"Description\",[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"Description of the Online Resource: Less than 500 characters\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"mdCodeName\",\"label\",\"placeholder\",\"profilePath\",\"tooltip\",\"allowClear\",\"width\"],[[24,[\"model\",\"function\"]],\"onlineFunction\",\"Function\",\"Select function of the Online Resource\",[28,\"concat\",[[24,[\"profilePath\"]],\".onlineFunction\"],null],true,true,\"70%\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"mdCodeName\",\"label\",\"placeholder\",\"profilePath\",\"tooltip\",\"allowClear\",\"width\",\"create\"],[[24,[\"model\",\"applicationProfile\"]],\"applicationProfile\",\"Application Profile\",\"Name of an application profile for the Online Resource\",[28,\"concat\",[[24,[\"profilePath\"]],\".applicationProfile\"],null],true,true,\"70%\",true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"label\",\"profilePath\",\"placeholder\"],[[24,[\"model\",\"protocolRequest\"]],\"Protocol Request\",[28,\"concat\",[[24,[\"profilePath\"]],\".protocolRequest\"],null],\"Request used to access the resource depending on the protocol, e.g. body of POST(http)_ request.\"]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-online-resource/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-party-array/component", ["exports", "mdeditor/pods/components/object/md-party/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    attributeBindings: ['data-spy'],
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: _component.Template
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-party-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "98SvzGdG",
    "block": "{\"symbols\":[\"party\",\"item\"],\"statements\":[[4,\"object/md-array-table\",null,[[\"columns\",\"title\",\"pluralTitle\",\"required\",\"plain\",\"value\",\"validation\",\"errorMessage\",\"tipPath\",\"tipModel\",\"data-spy\",\"profilePath\",\"templateClass\"],[\"Role,Contacts\",[24,[\"title\"]],[24,[\"pluralTitle\"]],[24,[\"required\"]],[24,[\"plain\"]],[24,[\"value\"]],[24,[\"validation\"]],[24,[\"errorMessage\"]],[24,[\"tipPath\"]],[24,[\"tipModel\"]],false,[24,[\"profilePath\"]],[24,[\"templateClass\"]]]],{\"statements\":[[4,\"with\",[[23,1,[\"item\"]]],null,{\"statements\":[[0,\"     \"],[7,\"td\",true],[8],[0,\"\\n       \"],[1,[28,\"input/md-codelist\",null,[[\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"role\",[23,2,[]],true,true,false,[24,[\"disabled\"]],\"role\",true,\"Select or enter a role\",[28,\"concat\",[[24,[\"profilePath\"]],\".role\"],null]]]],false],[0,\"\\n     \"],[9],[0,\"\\n     \"],[7,\"td\",true],[8],[0,\"\\n       \"],[1,[28,\"input/md-select-contacts\",null,[[\"placeholder\",\"model\",\"path\",\"icon\",\"tooltip\",\"showValidations\",\"profilePath\"],[\"Select one or more contacts\",[23,2,[]],\"_contacts\",true,true,true,[28,\"concat\",[[24,[\"profilePath\"]],\".contacts\"],null]]]],false],[0,\"\\n     \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-party-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-party/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.Template = _exports.Validations = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'role': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    '_contacts': (0, _emberCpValidations.validator)('length', {
      min: 1,
      message: 'At least one contact is required.'
    })
  });
  _exports.Validations = Validations;
  const Template = Ember.Object.extend(Validations, {
    init() {
      this._super(...arguments);
      this.set('party', Ember.A());
      this.set('role', null);
    },
    _contacts: Ember.computed('party', {
      get() {
        let party = Ember.get(this, 'party');
        return party.mapBy('contactId');
      },
      set(key, value) {
        let map = value.map(itm => {
          return {
            contactId: itm
          };
        });
        Ember.set(this, 'party', map);
        return value;
      }
    })
  });
  _exports.Template = Template;
  const theComp = Ember.Component.extend(Validations, {
    _contacts: Ember.computed('model', {
      get() {
        let party = Ember.get(this, 'model.party');
        return party ? party.mapBy('contactId') : [];
      },
      set(key, value) {
        let map = value.map(itm => {
          return {
            contactId: itm
          };
        });
        Ember.set(this, 'model.party', map);
        return value;
      }
    }),
    role: Ember.computed.alias('model.role'),
    didReceiveAttrs() {
      this._super(...arguments);
      let model = this.model;
      Ember.run.once(this, function () {
        Ember.set(model, 'party', Ember.getWithDefault(model, 'party', []));
        Ember.set(model, 'role', Ember.getWithDefault(model, 'role', null));
      });
    },
    attributeBindings: ['data-spy'],
    templateClass: Template
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-party/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "SRKQo0ZF",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"input/md-codelist\",null,[[\"label\",\"path\",\"model\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"Role\",\"role\",[23,0,[]],true,true,false,[24,[\"disabled\"]],\"role\",true,\"Select or enter a role\",[28,\"if\",[[24,[\"profilePath\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".role\"],null]],null]]]],false],[0,\"\\n\"],[1,[28,\"input/md-select-contacts\",null,[[\"label\",\"placeholder\",\"model\",\"path\",\"icon\",\"tooltip\",\"showValidations\",\"profilePath\"],[\"Contacts\",\"Select one or more contacts\",[23,0,[]],\"_contacts\",true,true,true,[28,\"if\",[[24,[\"profilePath\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".contacts\"],null]],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-party/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-phone-array/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'phoneNumber': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    }), (0, _emberCpValidations.validator)('format', {
      type: 'phone',
      isWarning: true,
      message: 'This field should be a valid phone number.'
    })]
  });
  var _default = Ember.Component.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'phone' object.
     * The class manages the maintenance of an array of phone objects.
     *
     * @class md-phone-array
     * @module mdeditor
     * @submodule components-object
     * @constructor
     */

    attributeBindings: ['data-spy'],
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: Ember.Object.extend(Validations, {
      init() {
        this._super(...arguments);
        this.set('service', Ember.A());
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-phone-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "lcFDdMvd",
    "block": "{\"symbols\":[\"phone\"],\"statements\":[[4,\"object/md-array-table\",null,[[\"columns\",\"title\",\"value\",\"validation\",\"data-spy\",\"templateClass\"],[\"Name,Number,Services\",\"Phone\",[24,[\"value\"]],[24,[\"validation\"]],null,[24,[\"templateClass\"]]]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,1,[\"item\",\"phoneName\"]],\"Name or location or phone\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"showValidations\",\"placeholder\"],[\"phoneNumber\",[23,1,[\"item\"]],true,\"Phone number\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-codelist-multi\",null,[[\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"mdCodeName\",\"value\",\"placeholder\"],[true,true,false,[24,[\"disabled\"]],true,\"telephone\",[23,1,[\"item\",\"service\"]],\"Choose phone type\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-phone-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-process-step/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'timePeriod', Ember.getWithDefault(model, 'timePeriod', {}));
      });
    },
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'stepId', Ember.getWithDefault(model, 'stepId', Ember.get(this, 'itemId')));
        Ember.set(model, 'timePeriod', Ember.getWithDefault(model, 'timePeriod', {}));
        Ember.set(model, 'scope', Ember.getWithDefault(model, 'scope', {}));
        Ember.set(model, 'reference', Ember.getWithDefault(model, 'reference', []));
        Ember.set(model, 'processor', Ember.getWithDefault(model, 'processor', []));
        Ember.set(model, 'stepSource', Ember.getWithDefault(model, 'stepSource', []));
        Ember.set(model, 'stepProduct', Ember.getWithDefault(model, 'stepProduct', []));
      });
    },
    tagName: 'form',
    /**
     * The string representing the path in the profile object for the processStep.
     *
     * @property profilePath
     * @type {String}
     * @default "false"
     * @required
     */

    /**
     * The object to use as the data model for the processStep.
     *
     * @property model
     * @type {Object}
     * @required
     */

    sourceTemplate: Ember.Object.extend()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-process-step/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: '',
    model: Ember.computed.alias('item'),
    name: Ember.computed.alias('model.description')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-process-step/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ydPHUvZd",
    "block": "{\"symbols\":[],\"statements\":[[7,\"td\",true],[8],[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"placeholder\",\"maxrows\"],[[24,[\"model\",\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"A brief description about the dataset generated by the processing step.\",7]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-process-step/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-process-step/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "MOoMCLxO",
    "block": "{\"symbols\":[\"source\",\"source\",\"&default\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"value\",\"model\",\"valuePath\",\"label\",\"data-spy\",\"placeholder\",\"required\",\"profilePath\"],[[24,[\"model\",\"stepId\"]],null,null,\"Step ID\",\"Step ID\",\"Enter an identifer for the step.\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".stepId\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"profilePath\",\"label\",\"placeholder\",\"data-spy\",\"showValidations\"],[[24,[\"model\",\"description\"]],true,[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"Description\",\"Description of the process or methodology step.\",\"Step Description\",true]]],false],[0,\"\\n\\n\"],[4,\"object/md-array-table\",null,[[\"columns\",\"value\",\"title\",\"templateClass\",\"profilePath\",\"data-spy\"],[\"Description\",[24,[\"model\",\"stepSource\"]],\"Step Source\",[24,[\"sourceTemplate\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".stepSource\"],null],\"Step Source\"]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"placeholder\"],[[23,2,[\"item\",\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".stepSource.description\"],null],\"Information about the source data used in the process step.\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[4,\"object/md-array-table\",null,[[\"columns\",\"value\",\"title\",\"templateClass\",\"profilePath\",\"data-spy\"],[\"Description\",[24,[\"model\",\"stepProduct\"]],\"Step Product\",[24,[\"sourceTemplate\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".stepProduct\"],null],\"Step Product\"]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"placeholder\"],[[23,1,[\"item\",\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".stepProduct.description\"],null],\"Information about an intermediate data set that (1) is significant in the opinion of the data producer, (2) is generated in the processing step, and (3) is used in later processing steps.\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"data-spy\",\"class\",\"collapsible\",\"collapsed\",\"required\",\"value\",\"profilePath\"],[\"Processors\",\"Processors\",[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null],true,false,false,[24,[\"model\",\"processor\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".processor\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-citation-array\",null,[[\"model\",\"profilePath\",\"data-spy\",\"editItem\",\"label\"],[[24,[\"model\",\"reference\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".stepReference\"],null],\"Step Reference\",[24,[\"editCitation\"]],\"Step Reference\"]]],false],[0,\"\\n\\n\"],[1,[28,\"object/md-time-period\",null,[[\"model\",\"profilePath\",\"data-spy\",\"label\"],[[24,[\"model\",\"timePeriod\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".timePeriod\"],null],\"Time Period\",\"Time Period\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"profilePath\",\"data-spy\"],[[24,[\"model\",\"scope\",\"scopeCode\"]],\"Scope\",true,true,true,\"scope\",false,\"Select type of resource.\",[28,\"concat\",[[24,[\"profilePath\"]],\".scope\"],null],\"Scope\"]]],false],[0,\"\\n\"],[14,3],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-process-step/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/custom/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: 'form',
    definitions: Ember.inject.service('profile'),
    schemas: Ember.inject.service(),
    notSelected: Ember.computed.setDiff('schemas.schemas', 'record.schemas'),
    selected: Ember.computed.alias('record.schemas'),
    // profileOptions: alias('profile.profiles'),
    actions: {
      setValue(selected) {
        this.record.set('profileId', selected ? selected.codeId : null);
      },
      selectItem(item) {
        // item.set('_animate', true);
        // item.set('_selected', true);
        Ember.run.later(this, function () {
          this.selected.pushObject(item);
          this.record.save();
        }, 250);
      },
      deselectItem(item) {
        // item.set('_selected', false);
        Ember.run.later(this, function () {
          this.selected.removeObject(item);
          this.record.save();
        }, 250);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/custom/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "D9oO7V7H",
    "block": "{\"symbols\":[\"schema\",\"schema\",\"&default\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"label\",\"placeholder\",\"showValidations\"],[[24,[\"record\"]],\"title\",\"Title\",\"Enter a short title for the profile.\",true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"model\",\"valuePath\",\"label\",\"placeholder\",\"showValidations\"],[[24,[\"record\"]],\"description\",\"Description\",\"Enter a description of the profile.\",true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-select\",null,[[\"model\",\"path\",\"label\",\"valuePath\",\"namePath\",\"placeholder\",\"objectArray\",\"searchEnabled\",\"showValidations\",\"allowClear\",\"setValue\"],[[24,[\"record\"]],\"profileId\",\"Profile Definition\",\"identifier\",\"title\",\"Select the profile definition.\",[24,[\"definitions\",\"profiles\"]],true,true,true,[28,\"action\",[[23,0,[]],\"setValue\"],null]]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"card md-card\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-header\"],[8],[0,\"\\n        \"],[7,\"h4\",true],[10,\"class\",\"card-title\"],[8],[0,\"\\n          Select Schemas\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-block no-padding\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"list-group no-margin md-itis-taxalist\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"notSelected\"]]],null,{\"statements\":[[4,\"liquid-unless\",[[28,\"contains\",[[23,2,[]],[24,[\"selected\"]]],null]],[[\"class\",\"enableGrowth\",\"shrinkDelay\"],[[28,\"concat\",[\"list-group-item \",[28,\"if\",[[23,2,[]],\"md-itis-unselected\"],null]],null],true,500]],{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"media list-group-item\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-body\"],[8],[0,\"\\n                  \"],[7,\"h4\",true],[10,\"class\",\"media-heading\"],[8],[0,\"\\n                    \"],[1,[23,2,[\"title\"]],false],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"p\",true],[8],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Type:\"],[9],[0,\" \"],[1,[23,2,[\"formattedType\"]],false],[9],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Description:\"],[9],[0,\" \"],[1,[23,2,[\"description\"]],false],[9],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Global?:\"],[9],[0,\" \"],[1,[23,2,[\"formattedGlobal\"]],false],[9],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-right media-middle\"],[8],[0,\"\\n                  \"],[7,\"button\",false],[12,\"class\",\"btn btn-success btn-lg btn-block\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"selectItem\",[23,2,[]]]],[8],[0,\"Add\"],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[2]},{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n                \"],[7,\"p\",true],[10,\"class\",\"list-group-item-text\"],[8],[0,\"\\n                  No schemas avialable.\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[0,\"  \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"card md-card hd-success card-inverse card-outline-success\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-header\"],[8],[0,\"\\n        \"],[7,\"h4\",true],[10,\"class\",\"card-title\"],[8],[0,\"\\n          Schemas Selected\\n\"],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"card-block no-padding\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"list-group no-margin md-itis-selectedlist\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"selected\"]]],null,{\"statements\":[[4,\"liquid-if\",[[28,\"contains\",[[23,1,[]],[24,[\"selected\"]]],null]],[[\"class\",\"enableGrowth\",\"shrinkDelay\"],[\"list-group-item md-itis-selected\",true,500]],{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"media\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-body\"],[8],[0,\"\\n                  \"],[7,\"h4\",true],[10,\"class\",\"media-heading\"],[8],[0,\"\\n                    \"],[1,[23,1,[\"title\"]],false],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"p\",true],[8],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Type:\"],[9],[0,\" \"],[1,[23,1,[\"formattedType\"]],false],[9],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Description:\"],[9],[0,\" \"],[1,[23,1,[\"description\"]],false],[9],[0,\"\\n                    \"],[7,\"div\",true],[8],[7,\"strong\",true],[8],[0,\"Global?:\"],[9],[0,\" \"],[1,[23,1,[\"formattedGlobal\"]],false],[9],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"media-left media-middle\"],[8],[0,\"\\n                  \"],[7,\"button\",false],[12,\"class\",\"btn btn-danger btn-lg btn-block\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"deselectItem\",[23,1,[]]]],[8],[0,\"Remove\"],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n              \"],[7,\"p\",true],[10,\"class\",\"list-group-item-text\"],[8],[0,\"\\n                Select schemas from the list.\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\"],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[14,3],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-profile/custom/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/form/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: 'form'
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/form/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "VTb1F6b3",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"label\",\"placeholder\",\"showValidations\"],[[24,[\"record\"]],\"uri\",\"URL\",\"Enter URL of the profile.\",true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"showValidations\"],[[24,[\"record\",\"alias\"]],\"Alias\",\"Enter an alternative title.\",true]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n  \"],[7,\"label\",true],[10,\"class\",\"\"],[8],[0,\"Version\"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n    \"],[7,\"span\",true],[8],[1,[28,\"if\",[[24,[\"record\",\"localVersion\"]],[24,[\"record\",\"localVersion\"]],\"--\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"record\",\"hasUpdate\"]]],null,{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"label label-pill label-info\"],[8],[0,\"Update Available (\"],[1,[24,[\"record\",\"remoteVersion\"]],false],[0,\")\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"hr\",true],[8],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-profile/preview\",null,[[\"record\"],[[24,[\"record\"]]]]],false],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-profile/form/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNameBindings: ['textMuted'],
    textMuted: true,
    config: Ember.computed.or('record.config', 'record')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "+VwtXnyP",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"\"],[8],[0,\"Title\"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[1,[24,[\"config\",\"title\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"\"],[8],[0,\"Description\"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[1,[24,[\"config\",\"description\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"\"],[8],[0,\"Identifier\"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[1,[24,[\"config\",\"identifier\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"\"],[8],[0,\"Namespace\"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[1,[24,[\"config\",\"namespace\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-profile/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-profile/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "EZHrmgYQ",
    "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"record\"]],\"validations\"],null],\"attrs\"],null],\"config\"],null],\"isInvalid\"],null]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"alert alert-danger\"],[10,\"role\",\"alert\"],[8],[1,[28,\"fa-icon\",[\"exclamation\"],null],false],[0,\"\\n    \"],[1,[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"record\"]],\"validations\"],null],\"attrs\"],null],\"config\"],null],\"message\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"object/md-profile/form\",null,[[\"record\"],[[24,[\"record\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-profile/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/attrgroup/attribute/component", ["exports", "mdeditor/helpers/uc-words", "mdjson-schemas/resources/js/attribute", "ember-cp-validations"], function (_exports, _ucWords, _attribute, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'attrIdentifier': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  const params = {
    sequenceIdentifier: 'string',
    sequenceIdentifierType: 'string',
    minValue: 'number',
    maxValue: 'number',
    units: 'string',
    scaleFactor: 'number',
    offset: 'number',
    meanValue: 'number',
    numberOfValues: 'number',
    standardDeviation: 'number',
    bitsPerValue: 'number',
    boundMin: 'number',
    boundMax: 'number',
    boundUnits: 'number',
    peakResponse: 'number',
    toneGradations: 'number',
    nominalSpatialResolution: 'number'
  };
  var _default = Ember.Component.extend(Validations, {
    /**
     * mdEditor class for input and edit of mdJson 'coverageDescription.attributeGroup.attribute' object
     * The class manages the maintenance of an array of 'attribute' ojbects.
     *
     * ```handlebars
     * \{{object/md-raster/attrgroup/attribute
     *    model=model.attribute
     *    profilePath="path"
     * }}
     * ```
     *
     * @module mdeditor
     * @submodule components-object-md-raster-attrgroup
     * @constructor
     * @class md-raster-attrgroup-attribute
     */

    init() {
      this.params = Object.keys(params).map(p => {
        return {
          property: p,
          label: (0, _ucWords.ucWords)([Ember.String.decamelize(p).replace(/_/g, ' ')], {
            force: false
          }),
          type: params[p],
          description: Ember.get(_attribute.default, "properties.".concat(p, ".description"))
        };
      });
      this._super(...arguments);
    },
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.getWithDefault(this, 'model', []) || [];
      Ember.run.once(this, function () {
        Ember.set(model, 'attributeIdentifier', Ember.getWithDefault(model, 'attributeIdentifier', []));
        Ember.set(model, 'bandBoundaryDefinition', Ember.getWithDefault(model, 'bandBoundaryDefinition', []));
        Ember.set(model, 'transferFunctionType', Ember.getWithDefault(model, 'transferFunctionType', []));
        Ember.set(model, 'transmittedPolarization', Ember.getWithDefault(model, 'transmittedPolarization', []));
        Ember.set(model, 'detectedPolarization', Ember.getWithDefault(model, 'detectedPolarization', []));
      });
    },
    tagName: 'form',
    /**
     * 'attrIdentifier' is the alias for 'attributeIdentifier.identifier' used in the validations for the
     * 'attributeIdentifier' object.
     *
     * @property attrIdentifier
     * @type String
     * @requires alias
     * @default "alias('model.attributeIdentifier.identifier')"
     */
    attrIdentifier: Ember.computed.alias('model.attributeIdentifier.identifier'),
    /**
     * 'attrDesc' is the alias for 'attributeDescription' used in the validations for the
     * 'attribute' object.
     *
     * @property attrDesc
     * @type String
     * @requires alias
     * @default "alias('model.attributeDescription')"
     */
    attrDesc: Ember.computed.alias('model.attriuteDescription')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/attrgroup/attribute/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: '',
    item: Ember.computed.alias('model'),
    attrDesc: Ember.computed.alias('model.attrbuteDescription')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/attrgroup/attribute/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "iyZDbmss",
    "block": "{\"symbols\":[],\"statements\":[[7,\"td\",true],[10,\"class\",\"property\"],[8],[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\",\"data-spy\",\"profilePath\"],[[24,[\"item\",\"attributeDescription\"]],\"Description of the attribute\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".attributeDescription\"],null]]]],false],[0,\"\\n\"],[9]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-raster/attrgroup/attribute/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/attrgroup/attribute/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "iBCe2jZ0",
    "block": "{\"symbols\":[\"param\"],\"statements\":[[4,\"layout/md-card\",null,[[\"shadow\"],[true]],{\"statements\":[[0,\"  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"label\",\"infotip\",\"data-spy\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"attributeDescription\"]],\"Attribute Description\",false,\"Attribute Description\",\"Description of the attribute\",[28,\"concat\",[[24,[\"profilePath\"]],\".attributeDescription\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"object/md-identifier-object-table\",null,[[\"label\",\"shadow\",\"model\",\"valuePath\",\"data-spy\",\"class\",\"visibility\",\"profilePath\"],[\"Attribute Identifier\",false,[24,[\"model\",\"attributeIdentifier\"]],\"attrIdentifier\",\"Attribute Identifier\",[28,\"if\",[[24,[\"embedded\"]],\"md-embedded\"],null],true,[28,\"concat\",[[24,[\"profilePath\"]],\".attributeIdentifier\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\"],[true]],{\"statements\":[[0,\"  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"create\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"data-spy\",\"label\",\"profilePath\"],[[24,[\"model\",\"bandBoundaryDefinition\"]],true,false,\"bandDefinition\",false,\"Designation of criterion for defining maxiumum and minimum wavelenghts for a spectral band\",\"Band Boundary Definition\",\"Band Boundary Definition\",[28,\"concat\",[[24,[\"profilePath\"]],\".bandBoundaryDefinition\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"create\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"data-spy\",\"label\",\"profilePath\"],[[24,[\"model\",\"transferFunctionType\"]],true,false,\"transferFunctionTypeCode\",false,\"Transform function to be used when scaling a physical value for a given element.\",\"Transfer Function Type\",\"Transfer Function Type\",[28,\"concat\",[[24,[\"profilePath\"]],\".transferFunctionType\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"create\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"label\",\"placeholder\",\"data-spy\",\"profilePath\"],[[24,[\"model\",\"transmittedPolarization\"]],true,false,\"polarisationOrientationCode\",false,\"Transmitted Polarization\",\"Polarization of the radiation transmitted.\",\"Transmitted Polarization\",[28,\"concat\",[[24,[\"profilePath\"]],\".transmittedPolarization\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"create\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"label\",\"placeholder\",\"data-spy\",\"profilePath\"],[[24,[\"model\",\"detectedPolarization\"]],true,false,\"polarisationOrientationCode\",false,\"Detected Polarization\",\"Polarization of the radiation transmitted.\",\"Detected Polarization\",[28,\"concat\",[[24,[\"profilePath\"]],\".detectedPolarization\"],null]]]],false],[0,\"\\n\\n\"],[4,\"layout/md-wrap\",null,[[\"shadow\",\"class\"],[true,\"md-flex-col-475 mt-4\"]],{\"statements\":[[4,\"each\",[[24,[\"params\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"label\",\"infotip\",\"data-spy\",\"type\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\"]],[23,1,[\"property\"]],[23,1,[\"label\"]],true,[28,\"if\",[[24,[\"model\"]],[23,1,[\"label\"]]],null],[23,1,[\"type\"]],\"col-lg-6 col-xxxl-4\",[23,1,[\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".params.\",[23,1,[\"property\"]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-raster/attrgroup/attribute/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/attrgroup/component", ["exports", "mdeditor/pods/components/object/md-array-table/component", "ember-cp-validations"], function (_exports, _component, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.Validations = _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'attrCntType': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  var _default = _component.default.extend(Validations, {
    /**
     * mdEditor class for input and edit of mdJSON 'coverageDescription.attributeGroup' object.
     * The class manages the maintenance of an array of attributeGroup objects.
     *
     * ```handlebars
     * \{{object/md-raster/attrgroup
     *    model=model.attributeGroup
     *    profilePath="path"
     * }}
     * ```
     *
     * @module mdeditor
     * @submodule components-object-md-raster
     * @constructor
     * @class md-raster-attrgroup
     * @uses md-array-table
     */

    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      if (model) {
        Ember.run.once(this, function () {
          Ember.set(model, 'attributeContentType', Ember.getWithDefault(model, 'attributeContentType', []));
          Ember.set(model, 'attribute', Ember.getWithDefault(model, 'attribute', []));
        });
      }
    },
    /**
     * attrCntType is the alias for 'attributeContentType' used in the validations for the
     * 'attributeGroup' object.
     *
     * @property attrCntType
     * @type String
     * @requires alias
     * @default "alias('model.attrbuteContenType')"
     */
    attrCntType: Ember.computed.alias('model.attributeContentType'),
    tagName: 'form',
    actions: {
      /**
       * 'editAttribute' is an crud action for the 'attributeGroup' object that transitions users to
       * the 'attribute' route for editing.
       * @method editAttribute
       * @param {Number} index
       */
      editAttribute(index) {
        this.editAttribute(index);
      },
      /**
       * 'deleteAttribute' is an crud action for the 'attributeGroup' object that deletes 'attribute' objects.
       * @method deleteAttribute
       * @param {Number} index
       */
      deleteAttrGroup(index) {
        this.deleteAttrGroup(index);
      },
      /**
       * 'addAttrGroup' is an crud action for the 'attributeGroup' object that adds 'attribute' objects.
       * @method addAttrGroup
       */
      addAttrGroup() {
        this.addAttrGroup();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/attrgroup/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Kyo+397f",
    "block": "{\"symbols\":[\"item\",\"index\",\"prop\"],\"statements\":[[4,\"unless\",[[24,[\"showAlert\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[11,\"class\",[29,[\"panel panel-default \",[28,\"if\",[[24,[\"shadow\"]],\"box-shadow--4dp\"],null]]]],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"panel-heading\"],[8],[0,\"\\n      \"],[7,\"h3\",true],[10,\"class\",\"panel-title md-panel-chevron\"],[8],[0,\"\\n        \"],[7,\"a\",true],[10,\"data-toggle\",\"collapse\"],[11,\"aria-expanded\",[28,\"if\",[[24,[\"collapsed\"]],\"false\",\"true\"],null]],[11,\"class\",[28,\"if\",[[24,[\"collapsed\"]],\"collapsed\"],null]],[11,\"href\",[29,[\"#\",[22,\"panelId\"]]]],[11,\"aria-controls\",[29,[\"#\",[22,\"panelId\"]]]],[8],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\" \"],[1,[28,\"unless\",[[24,[\"pluralTitle\"]],[28,\"pluralize\",[[24,[\"title\"]]],null],[24,[\"pluralTitle\"]]],null],false],[0,\"\\n            \"],[7,\"div\",true],[11,\"class\",[29,[\"label label-pill \",[22,\"pillColor\"]]]],[8],[0,\" \"],[1,[24,[\"value\",\"length\"]],false],[0,\" \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",\"btn btn-xs btn-info pull-right\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\"]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[11,\"id\",[22,\"panelId\"]],[11,\"class\",[29,[\"panel-collapse \",[28,\"if\",[[24,[\"collapsed\"]],\"collapse\",\"in\"],null]]]],[8],[0,\"\\n      \"],[7,\"div\",true],[11,\"class\",[29,[\"panel-body \",[28,\"if\",[[24,[\"responsive\"]],\"table-responsive\"],null]]]],[8],[0,\"\\n\"],[0,\"        \"],[7,\"table\",true],[10,\"class\",\"table table-striped table-hover fadeIn md-table-align-middle\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"columnArray\"]]],null,{\"statements\":[[0,\"              \"],[7,\"thead\",true],[8],[0,\"\\n                \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                  \"],[7,\"th\",true],[8],[0,\"#\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[24,[\"columnArray\"]]],null,{\"statements\":[[0,\"                  \"],[7,\"th\",true],[8],[1,[28,\"uc-words\",[[23,3,[]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"                  \"],[7,\"th\",true],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"arrayValues\"]]],null,{\"statements\":[[0,\"              \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"hideIndex\"]]],null,{\"statements\":[[0,\"                \"],[7,\"td\",true],[8],[1,[23,2,[]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"layout/md-object-container\",null,[[\"title\",\"index\",\"profilePath\",\"deleteItem\"],[\"Attribute Group\",[23,2,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".attributeGroup\"],null],[24,[\"deleteAttrGroup\"]]]],{\"statements\":[[0,\"                  \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"showValidations\",\"required\",\"create\",\"tooltip\",\"icon\",\"data-spy\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"label\",\"profilePath\"],[[23,1,[\"attributeContentType\"]],true,true,true,true,false,false,\"coverageContentType\",false,\"Specific type of information represented in the cell\",\"Attribute Content Type\",[28,\"concat\",[[24,[\"profilePath\"]],\".atttributeContentType\"],null]]]],false],[0,\"\\n                  \"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplateTable\",\"editItem\",\"profilePath\",\"verticalButtons\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"data-spy\",\"routeParams\",\"scrollToId\"],[\"attributeDescription\",[23,1,[\"attribute\"]],\"Attribute\",false,\"Add Attribute\",false,\"object/md-raster/attrgroup/attribute/preview\",[24,[\"editAttribute\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".attribute\"],null],true,false,false,true,false,[23,2,[]],[28,\"concat\",[\"md-raster-attrgroup-attribute-\",[23,2,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"              \"],[7,\"tr\",true],[8],[0,\"\\n                \"],[7,\"td\",true],[11,\"colspan\",[28,\"add-em\",[[28,\"if\",[[24,[\"hideIndex\"]],1,2],null],[24,[\"columnArray\",\"length\"]]],null]],[8],[0,\"\\n                  \"],[7,\"button\",false],[12,\"id\",[29,[[22,\"panelId\"],\"-btn\"]]],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addItem\"]],[8],[0,\"\\n                    \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add \"],[1,[22,\"title\"],false],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"control/md-alert-table\",null,[[\"title\",\"required\",\"addItem\",\"target\",\"tipMessage\"],[[24,[\"title\"]],[24,[\"required\"]],[28,\"action\",[[23,0,[]],\"addItem\"],null],[24,[\"arrayValues\"]],[24,[\"alertTipMessage\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-raster/attrgroup/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.Validations = _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'name': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'description': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'identifier': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  var _default = Ember.Component.extend(Validations, {
    /**
      * mdEditor class for input and edit of mdJSON 'coverageDescription' object.
      * The class manages the maintenance of an array of raster(coverageDescription) objects.
      *
      ```handlebars
      * \{{object/md-raster
      *     model=coverageDescription
      *     profilePath="path"
      * }}
      * ```
      * @module mdeditor
      * @submodule components-object
      * @class md-raster
      * @constructor
    */

    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      if (model) {
        Ember.run.once(this, function () {
          Ember.set(model, 'attributeGroup', Ember.getWithDefault(model, 'attributeGroup', []));
          Ember.set(model, 'imageDescription', Ember.getWithDefault(model, 'imageDescription', {}));
          Ember.set(model, 'processingLevelCode', Ember.getWithDefault(model, 'processingLevelCode', {}));
        });
      }
    },
    tagName: 'form',
    /**
    * 'name' is the alias for 'coverageName' used in the validations for the
    * 'raster' object.
    *
    * @property name
    * @type String
    * @requires alias
    * @default "alias('model.coverageName')"
    */
    name: Ember.computed.alias('model.coverageName'),
    /**
     * 'description' is the alias for 'coverageDescripiton' used in the validations for the
     * 'raster' object.
     *
     * @property description
     * @type String
     * @requires alias
     * @default "alias('model.coverageDescription')"
     */
    description: Ember.computed.alias('model.coverageDescription'),
    /**
     * 'identifier' is the alias for 'processLevelCode.identifier' used in the validations
     * for the 'coverageDescription.processLevelCode' object.
     *
     * @property identifier
     * @type String
     * @requires alias
     * @default "alias('model.processLevelCode.identifier')"
     */
    identifier: Ember.computed.alias('model.processLevelCode.identifier')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/image-desc/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // import ImageDescription from 'mdjson-schemas/resources/js/imageDescription';

  const Validations = (0, _emberCpValidations.buildValidations)({
    'imgQualCodeIdentifier': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });

  // const params = {
  //   illuminationElevationAngle: 'number',
  //   illuminationAzimuthAngle: 'number',
  //   imagingCondition: 'string',
  //   cloudCoverPercent: 'number',
  //   compressionQuantity: 'number',
  //   triangulationIndicator: 'boolean',
  //   radiometricCalibrationAvailable: 'boolean',
  //   cameraCalibrationAvailable: 'boolean',
  //   filmDistortionAvailable: 'boolean',
  //   lensDistortionAvailable: 'boolean'
  // }
  var _default = Ember.Component.extend(Validations, {
    //Todo: work on fix for this with Josh
    // init() {
    //   this.params = Object.keys(params).map(p => {
    //     return {
    //       property: p,
    //       label: ucWords([decamelize(p).replace(/_/g,' ')], { force: false }),
    //       type: params[p],
    //       description: get(ImageDescription, `properties.${p}.description`)
    //     }
    //   });

    //   this._super(...arguments);
    // },

    didReceiveAttrs() {
      this._super(...arguments);

      // let model = getWithDefault(this, 'model', {}) || {};
      let model = Ember.get(this, 'model');
      if (model) {
        Ember.run.once(this, function () {
          Ember.set(model, 'imageQualityCode', Ember.getWithDefault(model, 'imageQualityCode', {}));
        });
      }
    },
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    imgQualCodeIdentifier: Ember.computed.alias('model.imageQualityCode.identifier')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/image-desc/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "/2rFoHTW",
    "block": "{\"symbols\":[],\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"title\",\"collapsed\",\"shadow\",\"required\",\"profilePath\",\"class\"],[true,\"Image Quality Code\",false,false,[28,\"get\",[[28,\"get\",[[23,0,[]],\"validations\"],null],\"isInvalid\"],null],[28,\"concat\",[[24,[\"profilePath\"]],\".imageQualityCode\"],null],\"md-embedded\"]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-identifier\",null,[[\"model\",\"profilePath\",\"collapsed\",\"collapsible\",\"data-spy\"],[[24,[\"model\",\"imageQualityCode\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".imageQualityCode\"],null],true,true,false]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-wrap\",null,[[\"class\"],[\"md-flex-col-275\"]],{\"statements\":[[0,\"  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"illuminationElevationAngle\"]],\"number\",\"Illumination Elevation Angle\",true,\"Illumination Elevation Angle\",\"md-embedded col-lg-6 col-xxxl-4\",\"Illumination elevation measured in degrees clockwise from the target plane at intersection of the optical line of sight\\n    with the Earth’s surface. For images from a scanning device, refer to the centre pixel of the image.\",[28,\"concat\",[[24,[\"profilePath\"]],\".illuminationElevationAngle\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"illuminationAzimuthAngle\"]],\"number\",\"Illumination Azimuth Angle\",true,\"Illumination Azimuth Angle\",\"md-embedded col-lg-6 col-xxxl-4\",\"Illumination azimuth measured in degrees clockwise from true north at the time the image is taken. For images from a\\n    scanning device, refer to the centre pixel of the image.\",[28,\"concat\",[[24,[\"profilePath\"]],\".illuminationAzimuthAngle\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"imagingCondition\"]],\"Imaging Condition\",true,\"Imaging condition\",\"md-embedded col-lg-6 col-xxxl-4\",\"Code which indicates conditions which may affect the image.\",[28,\"concat\",[[24,[\"profilePath\"]],\".imagingCondition\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"cloudCoverPercent\"]],\"number\",\"Cloud Cover Percent \",true,\"Cloud Cover Percent\",\"md-embedded col-lg-6 col-xxxl-4\",\"Area of the dataset obscured by clouds, expressed as a percentage of the spatial extent.\",[28,\"concat\",[[24,[\"profilePath\"]],\".cloudCoverPercent\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"compressionQuantity\"]],\"number\",\"Compression Quantity\",true,\"Compression Quantity\",\"md-embedded col-lg-6 col-xxxl-4\",\"Count of the number of lossy compression cycles performed on the image.\",[28,\"concat\",[[24,[\"profilePath\"]],\".compressionQuantity\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"triangulationIndicator\"]],\"boolean\",\"Triangulation Indicator\",true,\"Triangulation Indicator\",\"md-embedded col-lg-6 col-xxxl-4\",\"Indication of whether or not triangulation has been performed upon the image.\",[28,\"concat\",[[24,[\"profilePath\"]],\".triangulationIndicator\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"radiometricCalibrationAvailable\"]],\"boolean\",\"Radiometric Calibration Available\",true,\"Radiometric Calibration Available\",\"md-embedded col-lg-6 col-xxxl-4\",\"Indication of whether or not the radiometric calibration information for generating the radiometrically calibrated standard data product is available.\",[28,\"concat\",[[24,[\"profilePath\"]],\".radiometricCalibrationAvailable\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"cameraCalibrationAvailable\"]],\"boolean\",\"Camera Calibration Available\",true,\"Camera Calibration Available\",\"md-embedded col-lg-6 col-xxxl-4\",\"Indication of whether or not constants are available which allow for camera calibration corrections.\",[28,\"concat\",[[24,[\"profilePath\"]],\".cameraCalibrationAvailable\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"filmDistortionAvailable\"]],\"boolean\",\"Film Distortion Available\",true,\"Film Distortion Available\",\"md-embedded col-lg-6 col-xxxl-4\",\"Indication of whether or not Calibration Reseau information is available.\",[28,\"concat\",[[24,[\"profilePath\"]],\".filmDistortionAvailable\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"type\",\"label\",\"infotip\",\"data-spy\",\"class\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"lensDistortionAvailable\"]],\"boolean\",\"Lens Distortion Available\",true,\"Lens Distortion Available\",\"md-embedded col-lg-6 col-xxxl-4\",\"Indication of whether or not lens aberration correction information is available.\",[28,\"concat\",[[24,[\"profilePath\"]],\".lensDistortionAvailable\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-raster/image-desc/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/preview/component", ["exports", "mdeditor/pods/components/object/md-raster/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend(_component.Validations, {
    /**
     * mdEditor class for input and edit of mdJSON 'coverageDescription' object.
     * The class manages the maintenance of an array of raster objects.
     *
     * @class md-raster-preview
     * @module mdeditor
     * @submodule components-object-md-raster
     * @constructor
     */

    tagName: 'form',
    /**
     * 'name is the alias for 'coverageName' used in the validations for the
     * 'raster/preview' object.
     *
     * @property name
     * @type String
     * @requires alias
     * @default "alias('model.coverageName')"
     */
    name: Ember.computed.alias('model.coverageName'),
    /**
     * 'description' is the alias for 'coverageDescription' used in the validations for the
     * 'raster/preview' object.
     *
     * @property description
     * @type String
     * @requires alias
     * @default "alias('model.coverageDescription')"
     */
    description: Ember.computed.alias('model.coverageDescription')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "867Pf/OE",
    "block": "{\"symbols\":[],\"statements\":[[7,\"form\",true],[10,\"class\",\"form-horizontal\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"col-lg-3\"],[8],[0,\"Raster Name\"],[9],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"class\",\"placeholder\",\"profilePath\",\"showValidations\",\"value\"],[\"col-lg-9\",\"The name(title) of the raster.\",[28,\"concat\",[[24,[\"profilePath\"]],\".coverageName\"],null],true,[24,[\"model\",\"coverageName\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"class\",\"col-lg-3\"],[8],[0,\"Raster Description\"],[9],[0,\"\\n    \"],[1,[28,\"input/md-textarea\",null,[[\"class\",\"placeholder\",\"profilePath\",\"showValidations\",\"value\"],[\"col-lg-9\",\"A description of the raster.\",[28,\"concat\",[[24,[\"profilePath\"]],\".coverageDescription\"],null],true,[24,[\"model\",\"coverageDescription\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-raster/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-raster/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "sWt/JPxI",
    "block": "{\"symbols\":[],\"statements\":[[4,\"layout/md-card\",null,null,{\"statements\":[[0,\"  \"],[1,[28,\"input/md-input\",null,[[\"label\",\"data-spy\",\"value\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"Name\",\"Name\",[24,[\"model\",\"coverageName\"]],\"The name(title) of the raster.\",[28,\"concat\",[[24,[\"profilePath\"]],\".coverageName\"],null],true]]],false],[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"label\",\"data-spy\",\"value\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"Description\",\"Description\",[24,[\"model\",\"coverageDescription\"]],\"A description of the raster\",[28,\"concat\",[[24,[\"profilePath\"]],\".coverageDescription\"],null],true]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"object/md-raster/attrgroup\",null,[[\"hideIndex\",\"value\",\"title\",\"editAttribute\",\"deleteAttrGroup\",\"data-spy\",\"addAttrGroup\",\"collapsible\",\"collapsed\",\"profilePath\"],[true,[24,[\"model\",\"attributeGroup\"]],\"Attribute Groups\",[24,[\"editAttribute\"]],[24,[\"deleteAttrGroup\"]],false,[24,[\"addAttrGroup\"]],true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".attributeGroup\"],null]]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"collapsible\",\"title\",\"collapsed\",\"shadow\",\"profilePath\"],[true,\"Processing Level Code\",false,true,[28,\"concat\",[[24,[\"profilePath\"]],\".processingLevelCode\"],null]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-identifier\",null,[[\"model\",\"profilePath\",\"collapsed\",\"collapsible\",\"data-spy\"],[[24,[\"model\",\"processingLevelCode\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".processingLevelCode\"],null],true,true,false]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"collapsible\",\"title\",\"collapsed\",\"shadow\",\"profilePath\"],[true,\"Image Description\",false,true,[28,\"concat\",[[24,[\"profilePath\"]],\".imageDescription\"],null]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-raster/image-desc\",null,[[\"model\",\"profilePath\",\"data-spy\",\"collapsed\",\"collapsible\"],[[24,[\"model\",\"imageDescription\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".imageDescription\"],null],false,true,true]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-raster/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-repository-array/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    settings: Ember.inject.service(),
    repositoryTemplate: Ember.Object.extend({
      init() {
        this._super(...arguments);
        this.set('citation', {});
      }
    }),
    actions: {
      lookupTitle(value) {
        let defs = this.get('settings.data.repositoryDefaults');
        let titles = defs.filterBy('repository', value.repository);
        if (Ember.get(titles, 'length')) {
          Ember.set(value, 'citation.title', Ember.get(titles.objectAt(0), 'title'));
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-repository-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "KxNV9Kso",
    "block": "{\"symbols\":[\"meta\",\"&default\"],\"statements\":[[4,\"object/md-array-table\",null,[[\"columns\",\"value\",\"plain\",\"data-spy\",\"title\",\"profile\",\"templateClass\"],[\"Repository, Collection Title\",[24,[\"value\"]],[24,[\"plain\"]],[24,[\"data-spy\"]],\"Metadata Repository\",[24,[\"profile\"]],[24,[\"repositoryTemplate\"]]]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"profilePath\",\"change\"],[[23,1,[\"item\",\"repository\"]],true,true,false,\"metadataRepository\",true,\"Select or enter a repository.\",[28,\"concat\",[[24,[\"profilePath\"]],\".repository\"],null],[28,\"action\",[[23,0,[]],\"lookupTitle\",[23,1,[\"item\"]]],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"type\",\"value\",\"profilePath\",\"placeholder\"],[\"text\",[23,1,[\"item\",\"citation\",\"title\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".collectionTitle\"],null],\"Text string used to identify a set of resources in the repository.\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[14,2],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-repository-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-resource-type-array/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'type': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend({
    /**
     * mdEditor class for input and edit of mdJSON 'phone' object.
     * The class manages the maintenance of an array of phone objects.
     *
     * @class md-phone-array
     * @module mdeditor
     * @submodule components-object
     * @constructor
     */

    attributeBindings: ['data-spy'],
    /**
     * See [md-array-table](md-array-table.html#property_templateClass).
     *
     * @property templateClass
     * @type Ember.Object
     */
    templateClass: Ember.Object.extend(Validations, {
      init() {
        this._super(...arguments);
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-resource-type-array/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "bQff8qEx",
    "block": "{\"symbols\":[\"type\",\"item\"],\"statements\":[[4,\"object/md-array-table\",null,[[\"columns\",\"title\",\"data-spy\",\"value\",\"validation\",\"plain\",\"required\",\"errorMessage\",\"tipPath\",\"tipModel\",\"profilePath\",\"templateClass\"],[\"Type, Name\",\"Resource Type\",false,[24,[\"value\"]],[24,[\"validation\"]],[24,[\"plain\"]],[24,[\"required\"]],[24,[\"errorMessage\"]],[24,[\"tipPath\"]],[24,[\"tipModel\"]],[24,[\"profilePath\"]],[24,[\"templateClass\"]]]],{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"with\",[[23,1,[\"item\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"input/md-codelist\",null,[[\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"mdCodeName\",\"showValidations\",\"profilePath\",\"model\",\"path\",\"placeholder\"],[true,true,true,[24,[\"disabled\"]],true,\"scope\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".resourceType\"],null],[23,2,[]],\"type\",\"Choose type of resource\"]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[0,\"\\n    \"],[1,[28,\"input/md-input\",null,[[\"value\",\"profilePath\",\"placeholder\"],[[23,1,[\"item\",\"name\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".name\"],null],\"Name of resource\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-resource-type-array/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-schema/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    classNames: ['md-schema']
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-schema/form/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const typeOptions = [{
    name: 'Metadata',
    value: 'record'
    //tip: 'tooltip'
  }, {
    name: 'Contact',
    value: 'contact'
    //tip: 'tooltip'
  }, {
    name: 'Dictionary',
    value: 'dictionary'
    //tip: 'tooltip'
  }];
  var _default = Ember.Component.extend({
    typeOptions: typeOptions
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-schema/form/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Ob5Shllc",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"label\",\"placeholder\",\"showValidations\"],[[24,[\"record\"]],\"title\",\"Title\",\"Enter title for schema.\",true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"label\",\"placeholder\",\"showValidations\"],[[24,[\"record\"]],\"uri\",\"URL\",\"Enter URL of root schema.\",true]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"form-group flex\"],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[0,\"Version\"],[9],[0,\"\\n  \"],[7,\"span\",true],[8],[1,[28,\"if\",[[24,[\"record\",\"localVersion\"]],[24,[\"record\",\"localVersion\"]],\"--\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"record\",\"hasUpdate\"]]],null,{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"label label-pill label-info\"],[8],[0,\"Update Available (\"],[1,[24,[\"record\",\"remoteVersion\"]],false],[0,\")\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"model\",\"valuePath\",\"label\",\"placeholder\",\"showValidations\"],[[24,[\"record\"]],\"description\",\"Description\",\"Enter a description of the schema.\",true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-select\",null,[[\"model\",\"path\",\"label\",\"valuePath\",\"namePath\",\"placeholder\",\"objectArray\",\"searchEnabled\",\"showValidations\"],[[24,[\"record\"]],\"schemaType\",\"Type\",\"value\",\"name\",\"Select the record type for schema.\",[24,[\"typeOptions\"]],false,true]]],false],[0,\"\\n\\n\"],[4,\"liquid-unless\",[[24,[\"record\",\"isNew\"]]],[[\"use\"],[\"toDown\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"form-group from-group-inlne\"],[8],[0,\"\\n      \"],[7,\"label\",true],[8],[0,\"Apply Globally?\"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"form-control\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"inline-block\"],[8],[0,\"\\n              \"],[1,[28,\"input/md-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"record\",\"isGlobal\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"record\",\"isGlobal\"]]],null]],null],true,\"Yes\",\"No\",\"medium\",\"form\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n      \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-schema/form/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-schema/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "dlU2cpPZ",
    "block": "{\"symbols\":[\"s\"],\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"shadow\",\"block\"],[false,false,true,false]],{\"statements\":[[0,\"\\n\"],[7,\"form\",true],[8],[0,\"\\n  \"],[7,\"ul\",true],[10,\"class\",\"nav nav-tabs\"],[10,\"role\",\"tablist\"],[8],[0,\"\\n    \"],[7,\"li\",true],[10,\"role\",\"presentation\"],[10,\"class\",\"active\"],[8],[7,\"a\",true],[11,\"href\",[28,\"concat\",[\"#\",[24,[\"elementId\"]],\"-form\"],null]],[10,\"aria-controls\",\"form\"],[10,\"role\",\"tab\"],[10,\"data-toggle\",\"tab\"],[8],[0,\"Info\"],[9],[9],[0,\"\\n    \"],[7,\"li\",true],[10,\"role\",\"presentation\"],[8],[0,\"\\n      \"],[7,\"a\",true],[11,\"href\",[28,\"concat\",[\"#\",[24,[\"elementId\"]],\"-schema\"],null]],[10,\"aria-controls\",\"schemas\"],[10,\"role\",\"tab\"],[10,\"data-toggle\",\"tab\"],[8],[0,\"\\n        Schemas\\n        \"],[7,\"div\",true],[11,\"class\",[28,\"concat\",[\"inline-block label label-pill label-\",[28,\"unless\",[[24,[\"record\",\"customSchemas\",\"length\"]],\"warning\",\"info\"],null]],null]],[8],[0,\"\\n          \"],[1,[24,[\"record\",\"customSchemas\",\"length\"]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"tab-content\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"role\",\"tabpanel\"],[10,\"class\",\"tab-pane fade in active\"],[11,\"id\",[28,\"concat\",[[24,[\"elementId\"]],\"-form\"],null]],[8],[0,\"\\n        \"],[1,[28,\"object/md-schema/form\",null,[[\"record\"],[[24,[\"record\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"role\",\"tabpanel\"],[10,\"class\",\"tab-pane fade\"],[11,\"id\",[28,\"concat\",[[24,[\"elementId\"]],\"-schema\"],null]],[8],[0,\"\\n        \"],[7,\"ul\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"record\",\"customSchemas\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[10,\"class\",\"list-group-item\"],[8],[1,[23,1,[\"id\"]],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-schema/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-simple-array-table/component", ["exports", "mdeditor/pods/components/object/md-array-table/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _component.default.extend({
    /**
     * mdEditor component for input and edit of arrays of scalars. The
     * component is rendered as an editable table.
     *
     * ```handlebars
     * {{#object/md-simple-array-table
     *   title="Simple"
     *   required=false
     *   plain=true
     *   value=model as |val|
     * }}
     *   <td>
     *       {{input/md-input value=val.item.value
     *       placeholder="Enter value"}}
     *   </td>
     * {{/object/md-simple-array-table}}
     * ```
     * @class md-simple-array-table
     * @module mdeditor
     * @submodule components-object
     * @extends md-array-table
     * @constructor
     */

    layoutName: 'components/object/md-array-table',
    simple: true,
    /**
     * Convert the input 'primitive' array to an 'ember' array of objects
     *
     * @property arrayValues
     * @type {Array}
     * @category computed
     * @requires value.[]
     */
    arrayValues: Ember.computed('value.[]', {
      get() {
        let items = this.value;
        if (items === undefined) {
          items = [];
          //items[0] = '';
        }

        return items.reduce(function (acc, value) {
          acc.pushObject({
            value: value
          });
          return acc;
        }, []);
      },
      set(key, value) {
        let newValue = value.filterBy('value').mapBy('value');
        this.set('value', newValue);
        return value;
      }
    }),
    /**
     * Set the value when arrayValues is updated
     *
     * @property valuesObserver
     * @type {Observer}
     * @category computed
     * @requires arrayValues.@each.value
     */
    valuesObserver: Ember.observer('arrayValues.@each.value', function () {
      this.set('arrayValues', this.arrayValues);
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-source/component", ["exports", "ember-cp-validations", "uuid/v4"], function (_exports, _emberCpValidations, _v) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'description': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'sourceId', Ember.getWithDefault(model, 'sourceId', (0, _v.default)()));
        Ember.set(model, 'sourceCitation', Ember.getWithDefault(model, 'sourceCitation', {}));
        Ember.set(model, 'metadataCitation', Ember.getWithDefault(model, 'metadataCitation', []));
        Ember.set(model, 'spatialResolution', Ember.getWithDefault(model, 'spatialResolution', {}));
        Ember.set(model, 'referenceSystem', Ember.getWithDefault(model, 'referenceSystem', {}));
        Ember.set(model, 'referenceSystem.referenceSystemIdentifier', Ember.getWithDefault(model, 'referenceSystem.referenceSystemIdentifier', {}));
        Ember.set(model, 'sourceProcessStep', Ember.getWithDefault(model, 'sourceProcessStep', []));
        Ember.set(model, 'scope', Ember.getWithDefault(model, 'scope', {}));
      });
    },
    /**
     * The string representing the path in the profile object for the domain.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the domain.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    domainId: Ember.computed.alias('model.domainId'),
    codeName: Ember.computed.alias('model.codeName'),
    description: Ember.computed.alias('model.description')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-source/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // import {
  //   Validations
  // } from '../component';
  var _default = Ember.Component.extend( /*Validations,*/{
    tagName: '',
    model: Ember.computed.alias('item'),
    name: Ember.computed.alias('model.description')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-source/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "eZI6Q591",
    "block": "{\"symbols\":[],\"statements\":[[7,\"td\",true],[8],[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"placeholder\",\"maxrows\"],[[24,[\"model\",\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"A brief description about the source dataset used in creating the data.\",7]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-source/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-source/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "CjRwiZQv",
    "block": "{\"symbols\":[\"editing\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"value\",\"model\",\"valuePath\",\"label\",\"data-spy\",\"placeholder\",\"required\",\"profilePath\"],[[24,[\"model\",\"sourceId\"]],null,null,\"Source ID\",\"Source ID\",\"Enter unique identifer for the source.\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".sourceId\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"profilePath\",\"label\",\"placeholder\",\"data-spy\",\"showValidations\"],[[24,[\"model\",\"description\"]],true,[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"Description\",\"Description of the source.\",\"Source Description\",true]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"profilePath\",\"data-spy\"],[[24,[\"model\",\"scope\",\"scopeCode\"]],\"Scope\",true,true,true,\"scope\",false,\"Select type of resource.\",[28,\"concat\",[[24,[\"profilePath\"]],\".scope\"],null],\"Scope\"]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"profilePath\",\"data-spy\",\"shadow\",\"content\"],[\"Source Citation\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".sourceCitation\"],null],\"Source Citation\",true,[24,[\"model\",\"sourceCitation\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"simpleIdentifier\",\"profilePath\",\"embedded\",\"data-spy\"],[[24,[\"model\",\"sourceCitation\"]],true,[28,\"concat\",[[24,[\"profilePath\"]],\".sourceCitation\"],null],true,false]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"data-spy\",\"buttonText\",\"previewTemplate\",\"profilePath\",\"attributes\"],[[24,[\"model\",\"metadataCitation\"]],\"Metadata Citation\",\"Metadata Citation\",\"Add Citation\",\"\",[28,\"concat\",[[24,[\"profilePath\"]],\".metadataCitation\"],null],\"title\"]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"simpleIdentifier\",\"data-spy\",\"embedded\",\"profilePath\"],[[23,1,[]],true,false,true,[28,\"concat\",[[24,[\"profilePath\"]],\".metadataCitation\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"profilePath\",\"data-spy\",\"shadow\",\"content\"],[\"Spatial Reference System\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".referenceSystem\"],null],\"Spatial Reference System\",true,[24,[\"model\",\"referenceSystem\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-srs\",null,[[\"model\",\"profilePath\"],[[24,[\"model\",\"referenceSystem\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".referenceSystem\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"data-spy\",\"profilePath\",\"content\"],[\"Spatial Resolution\",true,\"Spatial Resolution\",[28,\"concat\",[[24,[\"profilePath\"]],\".spatialResolution\"],null],[24,[\"model\",\"spatialResolution\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-spatial-resolution\",null,[[\"model\",\"profilePath\"],[[24,[\"model\",\"spatialResolution\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".spatialResolution\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-source/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-spatial-info/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'spatialReferenceSystem', Ember.getWithDefault(model, 'spatialReferenceSystem', []));
        Ember.set(model, 'spatialRepresentationType', Ember.getWithDefault(model, 'spatialRepresentationType', []));
        Ember.set(model, 'spatialResolution', Ember.getWithDefault(model, 'spatialResolution', []));
        Ember.set(model, 'coverageDescription', Ember.getWithDefault(model, 'coverageDescription', []));
      });
    },
    router: Ember.inject.service(),
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    actions: {
      editRaster(id) {
        this.router.transitionTo('record.show.edit.spatial.raster', this.parentModel, id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-spatial-info/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ycX57kTq",
    "block": "{\"symbols\":[\"editing\",\"editing\",\"&default\"],\"statements\":[[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"label\",\"profilePath\"],[[24,[\"model\",\"spatialRepresentationType\"]],true,true,false,\"spatialRepresentation\",false,\"Select method used to represent geographic information\",\"Spatial Representation Type\",[28,\"concat\",[[24,[\"profilePath\"]],\".spatialRepresentationType\"],null]]]],false],[0,\"\\n\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"buttonText\",\"ellipsis\",\"profilePath\",\"attributes\"],[[24,[\"model\",\"spatialReferenceSystem\"]],\"Spatial Reference System\",\"Add Reference System\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".spatialReferenceSystem\"],null],\"referenceSystemType,referenceSystemIdentifier.identifier\"]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-srs\",null,[[\"model\",\"profilePath\"],[[23,2,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".spatialReferenceSystem\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"buttonText\",\"ellipsis\",\"profilePath\",\"attributes\"],[[24,[\"model\",\"spatialResolution\"]],\"Spatial Resolution\",\"Add Spatial Resolution\",true,[28,\"concat\",[[24,[\"profilePath\"]],\".spatialResolution\"],null],\"scaleFactor,levelOfDetail,measure.type\"]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-spatial-resolution\",null,[[\"model\",\"profilePath\"],[[23,1,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".spatialResolution\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplate\",\"editItem\",\"verticalButtons\",\"profilePath\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"data-spy\",\"addSubbar\"],[\" \",[24,[\"model\",\"coverageDescription\"]],\"Raster Description\",true,\"Add Raster Description\",false,\"object/md-raster/preview\",[28,\"action\",[[23,0,[]],\"editRaster\"],null],true,[28,\"concat\",[[24,[\"profilePath\"]],\".coverageDescription\"],null],false,false,false,\"Raster Descriptions\",\"md-subbar-extra\"]]],false],[0,\"\\n\"],[14,3]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-spatial-info/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-spatial-resolution/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'scaleFactor': {
      disabled: Ember.computed.alias('model.scaleDisabled'),
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        ignoreBlank: true
      }), (0, _emberCpValidations.validator)('number', {
        integer: true,
        allowBlank: true,
        positive: true,
        gt: 0
      })]
    },
    'levelOfDetail': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      disabled: Ember.computed.alias('model.levelDisabled')
    })],
    'measure': [(0, _emberCpValidations.validator)('dependent', {
      on: ['measureType', 'measureValue', 'measureUnit']
    })],
    'measureType': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'measureUnit': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'measureValue': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      if (model) {
        Ember.run.once(this, function () {
          Ember.set(model, 'measure', Ember.getWithDefault(model, 'measure', {}));
        });
      }
    },
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    classNames: ['form'],
    scaleFactor: Ember.computed.alias('model.scaleFactor'),
    scaleDisabled: Ember.computed('model.levelOfDetail', 'measurePresent', function () {
      return !Ember.isEmpty(this.get('model.levelOfDetail')) || this.measurePresent;
    }),
    levelOfDetail: Ember.computed.alias('model.levelOfDetail'),
    levelDisabled: Ember.computed('model.scaleFactor', 'measurePresent', function () {
      let scaleFactor = this.get('model.scaleFactor');
      return !Ember.isEmpty(scaleFactor) && !Number.isNaN(scaleFactor) || this.measurePresent;
    }),
    measure: Ember.computed.alias('model.measure'),
    measureDisabled: Ember.computed('model.{scaleFactor,levelOfDetail}', function () {
      let scaleFactor = this.get('model.scaleFactor');
      return !Ember.isEmpty(scaleFactor) && !Number.isNaN(scaleFactor) || !Ember.isEmpty(this.get('model.levelOfDetail'));
    }),
    measureType: Ember.computed.alias('model.measure.type'),
    measureValue: Ember.computed.alias('model.measure.value'),
    measureUnit: Ember.computed.alias('model.measure.unitOfMeasure'),
    measurePresent: Ember.computed.or('measureType', 'measureUnit', 'measureValue'),
    typeOptions: Ember.computed(function () {
      return [{
        name: 'distance',
        value: 'distance'
      }, {
        name: 'length',
        value: 'length'
      }, {
        name: 'angle',
        value: 'angle'
      }, {
        name: 'measure',
        value: 'measure'
      }, {
        name: 'scale',
        value: 'scale'
      }];
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-spatial-resolution/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "lAcKve4N",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"input/md-input\",null,[[\"type\",\"model\",\"valuePath\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\",\"disabled\",\"class\"],[\"number\",[23,0,[]],\"scaleFactor\",\"Scale Factor\",\"Enter the geographic(map) scale for the resource.\",[28,\"concat\",[[24,[\"profilePath\"]],\".scaleFactor\"],null],true,[24,[\"scaleDisabled\"]],[28,\"if\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"scaleFactor\"],null],\"isInvalid\"],null],\"required\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"autoresize\",\"label\",\"placeholder\",\"showValidations\",\"disabled\",\"profilePath\",\"class\"],[[23,0,[]],\"levelOfDetail\",true,\"Level Of Detail\",\"Enter description of the spatial resolution of the resource.\",true,[24,[\"levelDisabled\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".levelOfDetail\"],null],[28,\"if\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"levelOfDetail\"],null],\"isInvalid\"],null],\"required\"],null]]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"data-spy\",\"shadow\",\"profilePath\",\"class\"],[false,false,false,false,[28,\"concat\",[[24,[\"profilePath\"]],\".measure\"],null],[28,\"if\",[[24,[\"measureDisabled\"]],\"text-muted\"],null]]],{\"statements\":[[0,\"  \"],[7,\"label\",true],[11,\"class\",[29,[\"text-info \",[28,\"if\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"measure\"],null],\"isInvalid\"],null],\"required\"],null]]]],[8],[0,\"Measure\"],[9],[0,\"\\n  \"],[1,[28,\"input/md-select\",null,[[\"label\",\"showValidations\",\"model\",\"path\",\"valuePath\",\"namePath\",\"objectArray\",\"tooltip\",\"tooltipPath\",\"searchEnabled\",\"disabled\",\"placeholder\",\"profilePath\"],[\"Measure Type\",true,[23,0,[]],\"measureType\",\"value\",\"name\",[24,[\"typeOptions\"]],true,\"tip\",false,[24,[\"measureDisabled\"]],\"The type of measurement.\",[28,\"concat\",[[24,[\"profilePath\"]],\".measure.type\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"type\",\"step\",\"model\",\"valuePath\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\",\"disabled\"],[\"number\",\"0.0001\",[23,0,[]],\"measureValue\",\"Value\",\"Enter the number of units in the measurement.\",[28,\"concat\",[[24,[\"profilePath\"]],\".measure.value\"],null],true,[24,[\"measureDisabled\"]]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"label\",\"placeholder\",\"showValidations\",\"disabled\",\"profilePath\"],[[23,0,[]],\"measureUnit\",\"Units\",\"Type of units to associated with the value.\",true,[24,[\"measureDisabled\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".measure.units\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-spatial-resolution/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-srs/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'refType': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      disabled: Ember.computed.notEmpty('model.model.referenceSystemIdentifier.identifier')
    })],
    'refSystem': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true,
      disabled: Ember.computed.notEmpty('model.model.referenceSystemType')
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      if (model) {
        Ember.run.once(this, function () {
          Ember.set(model, 'referenceSystemIdentifier', Ember.getWithDefault(model, 'referenceSystemIdentifier', {}));
        });
      }
    },
    /**
     * The string representing the path in the profile object for the resource.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the resource.
     *
     * @property model
     * @type {Object}
     * @required
     */

    classNames: ['form'],
    refSystem: Ember.computed.alias('model.referenceSystemIdentifier.identifier'),
    refType: Ember.computed.alias('model.referenceSystemType')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-srs/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "oS0GP0UB",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[28,\"input/md-codelist\",null,[[\"create\",\"label\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"path\",\"model\",\"placeholder\",\"profilePath\",\"class\"],[true,\"Reference System Type\",true,false,false,true,true,\"referenceSystemType\",\"refType\",[23,0,[]],\"Select type of reference system used.\",[28,\"concat\",[[24,[\"profilePath\"]],\".referenceSystemType\"],null],[28,\"if\",[[28,\"get\",[[28,\"get\",[[23,0,[]],\"validations\"],null],\"isInvalid\"],null],\"required\"],null]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"referenceSystemIdentifier\"]]],null,{\"statements\":[[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"data-spy\",\"shadow\",\"profilePath\"],[false,false,false,false,[28,\"concat\",[[24,[\"profilePath\"]],\".referenceSystemIdentifier\"],null]]],{\"statements\":[[0,\"  \"],[7,\"label\",true],[11,\"class\",[28,\"concat\",[\"text-info\",[28,\"if\",[[28,\"get\",[[28,\"get\",[[23,0,[]],\"validations\"],null],\"isInvalid\"],null],\" required\"],null]],null]],[8],[0,\"Reference System Identifier\"],[9],[0,\"\\n\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"model\",\"profilePath\",\"data-spy\"],[[24,[\"model\",\"referenceSystemIdentifier\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".referenceSystemIdentifier\"],null],false]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[14,1],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-srs/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/classification/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    tagName: 'ul',
    classNames: ['list-group', 'md-classification'],
    dragging: null,
    preview: false
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/classification/taxon/component", ["exports", "ember-cp-validations", "scroll-into-view-if-needed"], function (_exports, _emberCpValidations, _scrollIntoViewIfNeeded) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'taxonomicName': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'taxonomicLevel': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    init() {
      this._super(...arguments);
      this.collapse = this.preview && !this.parentItem;
    },
    didReceiveAttrs() {
      this._super(...arguments);
      Ember.run.once(this, function () {
        this.set('model.commonName', Ember.getWithDefault(this, 'model.commonName', []));
        this.set('model.subClassification', Ember.getWithDefault(this, 'model.subClassification', []));
      });
    },
    didInsertElement() {
      this._super(...arguments);
      if (this.model._edit) {
        this.startEditing();
        this.set('model._edit', false);
      }
    },
    spotlight: Ember.inject.service(),
    tagName: 'li',
    classNames: ['list-group-item', 'md-taxon'],
    classNameBindings: ['collapse'],
    isEditing: false,
    preview: false,
    level: Ember.computed('parent.level', function () {
      let parent = this.parentItem;
      return parent ? parent.get('level') + 1 : 0;
    }),
    padding: Ember.computed('level', function () {
      let pad = this.level + 0;
      return Ember.String.htmlSafe('padding-left: ' + pad + 'rem;');
    }),
    collapsible: Ember.computed('model.subClassification.[]', function () {
      return this.get('model.subClassification.length');
    }),
    taxonomicLevel: Ember.computed.alias('model.taxonomicLevel'),
    taxonomicName: Ember.computed.alias('model.taxonomicName'),
    taxonomicSystemId: Ember.computed.alias('model.taxonomicSystemId'),
    startEditing() {
      let id = 'body-' + this.elementId;
      let editor = 'editor-' + this.elementId;
      this.set('isEditing', true);

      // this.spotlight.setTarget('editor-' + this.elementId, this.stopEditing,this);
      this.spotlight.setTarget(id, this.stopEditing, this);
      (0, _scrollIntoViewIfNeeded.default)(document.getElementById(editor), {
        behavior: 'smooth'
        //scrollMode: 'if-needed',
      });
    },

    stopEditing() {
      this.set('isEditing', false);
    },
    deleteTaxa(taxa) {
      let parent = this.top || this.get('parentItem.model.subClassification');
      parent.removeObject(taxa);
    },
    addChild() {
      this.get('model.subClassification').pushObject({
        commonName: [],
        subClassification: [],
        _edit: true
      });
    },
    actions: {
      toggleCollapse(event) {
        event.stopPropagation();
        this.toggleProperty('collapse');
      },
      deleteTaxa(taxa) {
        this.deleteTaxa(taxa);
      },
      toggleEditing() {
        if (this.isEditing) {
          this.spotlight.close();
          this.set('isEditing', false);
          return;
        }
        this.startEditing();
      },
      addChild() {
        this.addChild();
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/classification/taxon/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "jtYPAoCm",
    "block": "{\"symbols\":[\"val\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"md-taxon-body\"],[11,\"id\",[28,\"concat\",[\"body-\",[24,[\"elementId\"]]],null]],[8],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"md-taxon-text\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"collapsible\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"inline-block icon\"],[10,\"role\",\"button\"],[11,\"onClick\",[28,\"action\",[[23,0,[]],\"toggleCollapse\"],null]],[11,\"style\",[22,\"padding\"]],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[[28,\"if\",[[24,[\"collapse\"]],\"folder\",\"folder-open\"],null]],[[\"fixedWidth\"],[true]]],false],[0,\"\\n      \"],[7,\"strong\",true],[10,\"class\",\"text-success\"],[8],[1,[22,\"taxonomicLevel\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"inline-block\"],[11,\"style\",[22,\"padding\"]],[8],[0,\"\\n      \"],[7,\"i\",true],[10,\"class\",\"fa-fw inline-block\"],[8],[9],[0,\"\\n      \"],[7,\"strong\",true],[10,\"class\",\"text-info\"],[8],[1,[22,\"taxonomicLevel\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[7,\"div\",true],[10,\"class\",\"inline-block text-truncate\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"spacer\"],[8],[9],[0,\"\\n     \"],[7,\"em\",true],[8],[1,[28,\"if\",[[24,[\"taxonomicName\"]],[24,[\"taxonomicName\"]],\"Not Defined\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"taxonomicSystemId\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"isITIS\"]]],null,{\"statements\":[[0,\"          (\"],[7,\"a\",true],[11,\"href\",[29,[\"https://www.itis.gov/servlet/SingleRpt/SingleRpt?search_topic=TSN&search_value=\",[22,\"taxonomicSystemId\"]]]],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[7,\"small\",true],[10,\"class\",\"text-muted\"],[8],[1,[22,\"taxonomicSystemId\"],false],[9],[9],[0,\")\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          (\"],[7,\"small\",true],[8],[1,[22,\"taxonomicSystemId\"],false],[9],[0,\")\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"commonName\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"spacer\"],[8],[9],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"text-warning\"],[8],[1,[28,\"join\",[\", \",[24,[\"model\",\"commonName\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"preview\"]]],null,{\"statements\":[[4,\"unless\",[[24,[\"isEditing\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"md-taxon-btn\"],[8],[0,\"\\n      \"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-success\"],[3,\"action\",[[23,0,[]],\"toggleEditing\",[24,[\"elementId\"]]]],[8],[0,\"\\n\"],[0,\"        \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit\\n      \"],[9],[0,\"\\n\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-xs btn-danger\",[28,\"action\",[[23,0,[]],\"deleteTaxa\",[24,[\"model\"]]],null]]],{\"statements\":[[0,\"        \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"\\n      \"],[1,[28,\"control/md-button\",null,[[\"class\",\"icon\",\"text\",\"responsive\",\"click\"],[\"btn-xs btn-info\",\"plus\",\"Add Child\",false,[28,\"action\",[[23,0,[]],\"addChild\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"div\",true],[11,\"id\",[28,\"concat\",[\"editor-\",[24,[\"elementId\"]]],null]],[8],[0,\"\\n\\n\"],[4,\"liquid-if\",[[24,[\"isEditing\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"md-taxon-form\"],[8],[0,\"\\n      \"],[7,\"form\",false],[12,\"class\",\"card form\"],[3,\"action\",[[23,0,[]],\"toggleEditing\"],[[\"on\"],[\"submit\"]]],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"card-block row form-inline\"],[8],[0,\"\\n          \"],[1,[28,\"input/md-input\",null,[[\"class\",\"label\",\"model\",\"valuePath\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"col-lg-4\",\"Taxonomic Level\",[23,0,[]],\"taxonomicLevel\",true,\"Enter the rank of the taxon\",[28,\"concat\",[[24,[\"profilePath\"]],\".taxonomicLevel\"],null]]]],false],[0,\"\\n          \"],[1,[28,\"input/md-input\",null,[[\"class\",\"label\",\"model\",\"valuePath\",\"showValidations\",\"placeholder\",\"profilePath\"],[\"col-lg-4\",\"Taxonomic Name\",[23,0,[]],\"taxonomicName\",true,\"Enter the name of the taxon\",[28,\"concat\",[[24,[\"profilePath\"]],\".taxonomicName\"],null]]]],false],[0,\"\\n          \"],[1,[28,\"input/md-input\",null,[[\"class\",\"label\",\"value\",\"placeholder\",\"profilePath\"],[\"col-lg-4\",\"Taxonomic ID\",[23,0,[\"taxonomicSystemId\"]],\"Enter the id assigned to the taxon\",[28,\"concat\",[[24,[\"profilePath\"]],\".taxonomicSystemId\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"required\",\"plain\",\"profilePath\",\"value\"],[\"Common Name\",false,true,[28,\"concat\",[[24,[\"profilePath\"]],\".commonName\"],null],[24,[\"model\",\"commonName\"]]]],{\"statements\":[[0,\"            \"],[7,\"td\",true],[8],[0,\"\\n              \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,1,[\"item\",\"value\"]],\"Enter value\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n\\n        \"],[7,\"footer\",true],[10,\"class\",\"card-footer text-right\"],[8],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"type\",\"submit\"],[3,\"action\",[[23,0,[]],\"toggleEditing\",[24,[\"elementId\"]]]],[8],[0,\"\\n\"],[0,\"            \"],[1,[28,\"fa-icon\",[\"check\"],null],false],[0,\" OK\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"with\",[[24,[\"collapsible\"]]],null,{\"statements\":[[4,\"liquid-unless\",[[24,[\"collapse\"]]],[[\"class\"],[\"list-group-item\"]],{\"statements\":[[0,\"      \"],[1,[28,\"object/md-taxonomy/classification\",null,[[\"model\",\"parentItem\",\"dragging\",\"preview\",\"profilePath\"],[[24,[\"model\",\"subClassification\"]],[23,0,[]],[24,[\"dragging\"]],[24,[\"preview\"]],[24,[\"profilePath\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-taxonomy/classification/taxon/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/classification/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "MnpI7PsS",
    "block": "{\"symbols\":[\"class\",\"index\"],\"statements\":[[4,\"each\",[[28,\"sort-by\",[\"order\",[24,[\"model\"]]],null]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-taxonomy/classification/taxon\",null,[[\"model\",\"parentItem\",\"top\",\"index\",\"dragging\",\"preview\",\"profilePath\"],[[23,1,[]],[24,[\"parentItem\"]],[28,\"unless\",[[24,[\"parentItem\"]],[24,[\"model\"]]],null],[23,2,[]],[24,[\"dragging\"]],[24,[\"preview\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".taxon\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"alert alert-info no-margin\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[0,\"No \"],[7,\"span\",true],[10,\"class\",\"required\"],[8],[0,\"Classification\"],[9],[0,\" found.\"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-taxonomy/classification/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/component", ["exports", "ember-cp-validations", "mdeditor/pods/components/object/md-taxonomy/collection/voucher/component"], function (_exports, _emberCpValidations, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.Template = _exports.Validations = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'title': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'taxonomicSystem': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    // 'identificationProcedure': [
    //   validator('presence', {
    //     presence: true,
    //     ignoreBlank: true
    //   })
    // ],
    'taxonomicClassification': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  const TemplateClass = Ember.Object.extend(Validations, {
    init() {
      this._super(...arguments);
      Ember.set(this, 'taxonomicSystem', []);
      Ember.set(this, 'identificationReference', []);
      Ember.set(this, 'observer', []);
      Ember.set(this, 'voucher', []);
      Ember.set(this, 'taxonomicClassification', []);
    }
  });
  _exports.Template = TemplateClass;
  const theComp = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'taxonomicClassification', Ember.getWithDefault(model, 'taxonomicClassification', []));
        Ember.set(model, 'taxonomicSystem', Ember.getWithDefault(model, 'taxonomicSystem', []));
        Ember.set(model, 'identificationReference', Ember.getWithDefault(model, 'identificationReference', []));
        Ember.set(model, 'observer', Ember.getWithDefault(model, 'observer', []));
        Ember.set(model, 'voucher', Ember.getWithDefault(model, 'voucher', []));
      });
    },
    voucherTemplate: _component.Template,
    /**
     * The string representing the path in the profile object for the collection.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the collection.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    taxonomicSystem: Ember.computed.alias('model.taxonomicSystem'),
    title: Ember.computed.alias('model.taxonomicSystem.firstObject.citation.title'),
    identificationProcedure: Ember.computed.alias('model.identificationProcedure'),
    taxonomicClassification: Ember.computed.alias('model.taxonomicClassification'),
    systemTemplate: Ember.Object.extend({
      init() {
        this._super(...arguments);
        this.set('citation', {});
      }
    })
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/system/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'citation': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'citation', Ember.getWithDefault(model, 'citation', {}));
      });
    },
    /**
     * The string representing the path in the profile object for the domain.
     *
     * @property profilePath
     * @type {String}
     * @default 'false'
     * @required
     */

    /**
     * The object to use as the data model for the domain.
     *
     * @property model
     * @type {Object}
     * @required
     */

    tagName: 'form',
    citation: Ember.computed.alias('model.citation')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/system/preview/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'title': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    tagName: '',
    model: Ember.computed.alias('item'),
    modifications: Ember.computed.alias('model.modifications'),
    title: Ember.computed.alias('model.citation.title')
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/system/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "V37Y4ibD",
    "block": "{\"symbols\":[],\"statements\":[[7,\"td\",true],[8],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"model\",\"valuePath\",\"placeholder\",\"profilePath\",\"showValidations\",\"required\"],[[23,0,[]],\"title\",\"Descriptive name for the collection taxonomic system.\",[28,\"concat\",[[24,[\"profilePath\"]],\".citation.title\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"td\",true],[8],[0,\"\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"placeholder\",\"maxrows\",\"rows\"],[[24,[\"model\",\"modifications\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".modifications\"],null],\"A brief description about the source dataset used in creating the data.\",3,2]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-taxonomy/collection/system/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/system/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ZY5vcspp",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"rows\",\"profilePath\",\"label\",\"placeholder\",\"data-spy\",\"showValidations\"],[[24,[\"model\",\"modifications\"]],false,3,[28,\"concat\",[[24,[\"profilePath\"]],\".modifications\"],null],\"Modifications\",\"Description of any modifications or exceptions made to the classification system used.\",\"Modifications\",true]]],false],[0,\"\\n\\n\"],[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"simpleIdentifier\",\"profilePath\",\"embedded\",\"data-spy\"],[[24,[\"model\",\"citation\"]],true,[28,\"concat\",[[24,[\"profilePath\"]],\".citation\"],null],false,true]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-taxonomy/collection/system/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "TFxnlgMF",
    "block": "{\"symbols\":[\"editing\"],\"statements\":[[0,\"\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"attributes\",\"items\",\"header\",\"shadow\",\"required\",\"buttonText\",\"ellipsis\",\"previewTemplateTable\",\"editItem\",\"profilePath\",\"verticalButtons\",\"hideIndex\",\"condensed\",\"editOnAdd\",\"templateClass\",\"scrollToId\",\"data-spy\"],[\"citation.title,modifications\",[24,[\"model\",\"taxonomicSystem\"]],\"Taxonomic System\",true,true,\"Add system\",true,\"object/md-taxonomy/collection/system/preview\",[24,[\"editSystem\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".taxonomicSystem\"],null],true,false,false,false,[24,[\"systemTemplate\"]],\"md-system\",\"System\"]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"required\",\"shadow\",\"maximizable\",\"spotlightEnabled\",\"block\"],[\"Classification\",true,false,[28,\"concat\",[[24,[\"profilePath\"]],\".classification\"],null],\"Classification\",true,true,true,false,[28,\"if\",[[24,[\"model\",\"taxonomicClassification\",\"length\"]],false,true],null]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-taxonomy/classification\",null,[[\"model\",\"profilePath\"],[[24,[\"model\",\"taxonomicClassification\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".classification\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"plain\",\"required\",\"value\",\"profilePath\",\"data-spy\"],[\"Observer\",false,false,[24,[\"model\",\"observer\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".observer\"],null],\"Observer\"]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"autoresize\",\"placeholder\",\"label\",\"data-spy\",\"embedded\",\"profilePath\"],[[24,[\"model\",\"generalScope\"]],false,true,\"Description of the range of taxa addressed in the data set or collection. For example, \\\"all vascular plants were identified to family or species.\\\"\",\"General Scope\",\"General Scope\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".generalScope\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"autoresize\",\"placeholder\",\"label\",\"data-spy\",\"embedded\",\"profilePath\"],[[23,0,[\"identificationProcedure\"]],false,true,\"Description of the methods used for taxonomic identification. Could include specimen processing, comparison with museum materials, keys, chemical or genetic analyses, etc.\",\"Identification Procedure\",\"Procedure\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".identificationProcedure\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"autoresize\",\"placeholder\",\"label\",\"data-spy\",\"embedded\",\"profilePath\"],[[24,[\"model\",\"identificationCompleteness\"]],false,true,\"Information concerning the proportions and treatment of unidentified materials; estimates of the importance, and identities of misidentifications, uncertain determinations, synonyms or other incorrect usages; taxa not well treated or requiring further work; and expertise of field workers.\",\"Identification Completeness\",\"Completeness\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".identificationCompleteness\"],null]]]],false],[0,\"\\n\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"data-spy\",\"profilePath\",\"buttonText\",\"ellipsis\",\"attributes\",\"collapsible\",\"templateClass\"],[[24,[\"model\",\"voucher\"]],\"Voucher\",\"Voucher\",[28,\"concat\",[[24,[\"profilePath\"]],\".voucher\"],null],\"Add Voucher\",true,\"specimen\",true,[24,[\"voucherTemplate\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-taxonomy/collection/voucher\",null,[[\"model\",\"profilePath\"],[[23,1,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".voucher\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-taxonomy/collection/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/voucher/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.Template = _exports.Validations = void 0;
  const Validations = (0, _emberCpValidations.buildValidations)({
    'specimen': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })],
    'repository': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      ignoreBlank: true
    })]
  });
  _exports.Validations = Validations;
  const Template = Ember.Object.extend(Validations, {
    init() {
      this._super(...arguments);
      this.set('repository', {});
      this.set('specimen', null);
    }
  });
  _exports.Template = Template;
  const theComp = Ember.Component.extend(Validations, {
    classNames: ['form'],
    specimen: Ember.computed.alias('model.specimen'),
    repository: Ember.computed.alias('model.repository'),
    didReceiveAttrs() {
      this._super(...arguments);
      let model = this.model;
      Ember.run.once(this, function () {
        Ember.set(model, 'repository', Ember.getWithDefault(model, 'repository', {}));
        Ember.set(model, 'specimen', Ember.getWithDefault(model, 'specimen', null));
      });
    },
    //attributeBindings: ['data-spy'],
    templateClass: Template
  });
  _exports.default = theComp;
});
;define("mdeditor/pods/components/object/md-taxonomy/collection/voucher/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "yFbEPcPN",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"rows\",\"profilePath\",\"label\",\"placeholder\",\"data-spy\",\"showValidations\"],[[24,[\"specimen\"]],true,3,[28,\"concat\",[[24,[\"profilePath\"]],\".specimen\"],null],\"Specimen\",\"Description of the type of specimen collected (e.g. 'herbarium specimens', 'blood samples', 'photographs', 'individuals', or 'batches').\",\"Specimen\",true]]],false],[0,\"\\n\\n\"],[7,\"label\",true],[10,\"class\",\"required\"],[8],[0,\"Repository\"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"required\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"shadow\",\"spotlightEnabled\"],[true,false,false,[28,\"concat\",[[24,[\"profilePath\"]],\".repository\"],null],\"Repository\",false,false]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-party\",null,[[\"model\",\"profilePath\"],[[24,[\"repository\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".repository\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-taxonomy/collection/voucher/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    router: Ember.inject.service(),
    title: Ember.computed('model.taxonomicSystem.0.citation.title', function () {
      let title = this.get('model.taxonomicSystem.0.citation.title');
      let index = this.index;
      return "Collection #".concat(index) + (title ? ": ".concat(title) : '');
    }),
    actions: {
      editCollection(id) {
        this.set('scrollTo', "collection-".concat(id));
        this.router.transitionTo('record.show.edit.taxonomy.collection.index', id);
      },
      deleteCollection(id) {
        let taxa = this.get('record.json.metadata.resourceInfo.taxonomy');
        taxa.removeAt(id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-taxonomy/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "kXE8ebGU",
    "block": "{\"symbols\":[],\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"shadow\",\"spotlightEnabled\"],[[24,[\"title\"]],true,false,\"record.taxonomy\",[28,\"concat\",[\"Collection \",[24,[\"index\"]]],null],true,false]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"card-buttons\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-md btn-success btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"editCollection\",[24,[\"index\"]]]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit Collection\"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-md btn-danger btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"deleteCollection\",[24,[\"index\"]]]],[8],[0,\"\\n              \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete Collection\"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"shadow\",\"maximizable\",\"spotlightEnabled\",\"block\",\"profilePath\"],[true,false,false,false,false,false,\"record.taxonomy.classificationPreview\"]],{\"statements\":[[0,\"      \"],[1,[28,\"object/md-taxonomy/classification\",null,[[\"model\",\"preview\",\"profilePath\"],[[24,[\"model\",\"taxonomicClassification\"]],true,\"record.taxonomy.classificationPreview\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-taxonomy/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-time-period/component", ["exports", "ember-cp-validations"], function (_exports, _emberCpValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const timeUnit = [{
    name: 'year',
    value: 'year'
  }, {
    name: 'month',
    value: 'month'
  }, {
    name: 'day',
    value: 'day'
  }, {
    name: 'hour',
    value: 'hour'
  }, {
    name: 'minute',
    value: 'minute'
  }, {
    name: 'second',
    value: 'second'
  }];
  const durationUnit = ['years', 'months', 'days', 'hours', 'minutes', 'seconds'];
  const Validations = (0, _emberCpValidations.buildValidations)({
    'intervalAmount': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      //disabled: computed.notEmpty('model.endDateTime'),
      ignoreBlank: true
    })],
    'startDateTime': [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      disabled: Ember.computed.notEmpty('model.endDateTime'),
      ignoreBlank: true
    })],
    'endDateTime': [(0, _emberCpValidations.validator)('date', {
      onOrAfter: Ember.computed.alias('model.startDateTime'),
      isWarning: true
    }), (0, _emberCpValidations.validator)('presence', {
      presence: true,
      disabled: Ember.computed.notEmpty('model.startDateTime'),
      ignoreBlank: true
    })]
  });
  var _default = Ember.Component.extend(Validations, {
    init() {
      this._super(...arguments);
      this.timeUnit = timeUnit;
      this.durationUnit = durationUnit;
    },
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(this, function () {
        Ember.set(model, 'periodName', Ember.getWithDefault(model, 'periodName', []));
        Ember.set(model, 'timeInterval', Ember.getWithDefault(model, 'timeInterval', {}));
        Ember.set(model, 'duration', Ember.getWithDefault(model, 'duration', {}));
        // set(model, 'presentationForm', getWithDefault(model,
        //   'presentationForm', []));
        // set(model, 'onlineResource', getWithDefault(model,
        //   'onlineResource', []));
        Ember.set(model, 'identifier', Ember.getWithDefault(model, 'identifier', {}));
        // set(model, 'graphic', getWithDefault(model, 'graphic', []));
      });
    },

    tagName: 'form',
    /**
     * The profile path for the component
     *
     * @property profilePath
     * @type {String}
     */

    startDateTime: Ember.computed('model.startDateTime', {
      get() {
        return Ember.get(this, 'model.startDateTime');
      },
      set(key, value) {
        Ember.run.once(this, function () {
          Ember.set(this, 'model.startDateTime', value);
          return value;
        });
      }
    }),
    endDateTime: Ember.computed('model.endDateTime', {
      get() {
        return Ember.get(this, 'model.endDateTime');
      },
      set(key, value) {
        Ember.run.once(this, function () {
          Ember.set(this, 'model.endDateTime', value);
          return value;
        });
      }
    }),
    intervalAmount: Ember.computed.alias('model.timeInterval.interval'),
    identifier: Ember.computed.alias('model.identifier.identifier'),
    timeUnit: timeUnit,
    durationUnit: durationUnit
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-time-period/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "DMpJl4oZ",
    "block": "{\"symbols\":[\"unit\",\"val\",\"&default\"],\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"data-spy\",\"required\",\"shadow\",\"content\"],[\"Time Period\",true,[24,[\"collapsed\"]],\"Time Period\",[24,[\"required\"]],true,[24,[\"model\"]]]],{\"statements\":[[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\",\"muted\",\"plain\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".dateRange\"],null],false,true]],{\"statements\":[[0,\"    \"],[1,[28,\"input/md-date-range\",null,[[\"startDateTime\",\"endDateTime\",\"profilePath\"],[[24,[\"startDateTime\"]],[24,[\"endDateTime\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".dateRange\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"required\",\"profilePath\"],[[24,[\"identifier\"]],\"Identifier\",\"Enter a unique identifier for the time period.\",false,[28,\"concat\",[[24,[\"profilePath\"]],\".identifier\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\"],[[24,[\"model\",\"description\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".description\"],null],\"Description\",\"A brief description providing relevant information about the time period.\"]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\",\"muted\",\"plain\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".periodName\"],null],false,true]],{\"statements\":[[0,\"\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"data-spy\",\"plain\",\"value\"],[\"Time Period Name\",false,true,[24,[\"model\",\"periodName\"]]]],{\"statements\":[[0,\"      \"],[7,\"td\",true],[8],[0,\"\\n        \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,2,[\"item\",\"value\"]],\"Enter Name\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\",\"muted\",\"plain\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".interval\"],null],false,true]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"form-inline\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"text-info\"],[8],[0,\"Interval\"],[9],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"type\",\"model\",\"valuePath\",\"step\",\"label\",\"placeholder\",\"profilePath\",\"showValidations\"],[\"number\",[23,0,[]],\"intervalAmount\",\"0.01\",\"Interval Amount\",\"Enter amount of time for the interval.\",[28,\"concat\",[[24,[\"profilePath\"]],\".interval.intervalAmount\"],null],true]]],false],[0,\"\\n      \"],[1,[28,\"input/md-select\",null,[[\"create\",\"objectArray\",\"valuePath\",\"namePath\",\"label\",\"required\",\"tooltip\",\"icon\",\"allowClear\",\"value\",\"profilePath\",\"placeholder\"],[false,[24,[\"timeUnit\"]],\"value\",\"name\",\"Time Unit\",true,false,false,true,[24,[\"model\",\"timeInterval\",\"units\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".interval.units\"],null],\"Choose unit of time\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\",\"muted\",\"plain\",\"bodyIsRow\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".duration\"],null],false,true,true]],{\"statements\":[[0,\"    \"],[7,\"label\",true],[10,\"class\",\"text-info col-sm-2\"],[8],[0,\"Duration\"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-sm-10\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"durationUnit\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"input/md-input\",null,[[\"class\",\"valuePath\",\"model\",\"type\",\"label\",\"placeholder\",\"profilePath\"],[\"col-sm-6 col-md-4 col-lg-2\",[28,\"concat\",[\"duration.\",[23,1,[]]],null],[24,[\"model\"]],\"number\",[28,\"uc-words\",[[23,1,[]]],null],[28,\"concat\",[\"Enter \",[23,1,[]]],null],[28,\"concat\",[[24,[\"profilePath\"]],\".duration.\",[23,1,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[14,3],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-time-period/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-transfer/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // const Validations = buildValidations({
  //   // 'intervalAmount': [
  //   //   validator('presence', {
  //   //     presence: true,
  //   //     //disabled: computed.notEmpty('model.endDateTime'),
  //   //     ignoreBlank: true
  //   //   })
  //   // ],
  //   // 'startDateTime': [
  //   //   validator('presence', {
  //   //     presence: true,
  //   //     disabled: computed.notEmpty('model.endDateTime'),
  //   //     ignoreBlank: true
  //   //   })
  //   // ],
  //   // 'endDateTime': [
  //   //   validator('date', {
  //   //     onOrAfter: computed.alias('model.startDateTime'),
  //   //     isWarning: true
  //   //   }),
  //   //   validator('presence', {
  //   //     presence: true,
  //   //     disabled: computed.notEmpty('model.startDateTime'),
  //   //     ignoreBlank: true
  //   //   })
  //   // ]
  // });
  var _default = Ember.Component.extend({
    didReceiveAttrs() {
      this._super(...arguments);
      let model = Ember.get(this, 'model');
      Ember.run.once(function () {
        Ember.set(model, 'onlineOption', Ember.getWithDefault(model, 'onlineOption', []));
        Ember.set(model, 'offlineOption', Ember.getWithDefault(model, 'offlineOption', []));
        Ember.set(model, 'transferFrequency', Ember.getWithDefault(model, 'transferFrequency', {}));
        Ember.set(model, 'distributionFormat', Ember.getWithDefault(model, 'distributionFormat', []));
        // set(model, 'presentationForm', getWithDefault(model,
        //   'presentationForm', []));
        // set(model, 'onlineResource', getWithDefault(model,
        //   'onlineResource', []));
        // set(model, 'identifier', getWithDefault(model, 'identifier', []));
        // set(model, 'graphic', getWithDefault(model, 'graphic', []));
      });
    },

    tagName: 'form',
    /**
     * The profile path for the component
     *
     * @property profilePath
     * @type {String}
     */

    // startDateTime: computed('model.startDateTime', {
    //   get(){
    //     return get(this, 'model.startDateTime');
    //   },
    //   set(key, value) {
    //     once(this,function() {
    //       set(this, 'model.startDateTime', value);
    //       return value;
    //     });
    //   }
    // }),
    // endDateTime: computed('model.endDateTime', {
    //   get(){
    //     return get(this, 'model.endDateTime');
    //   },
    //   set(key, value) {
    //     once(this,function() {
    //       set(this, 'model.endDateTime', value);
    //       return value;
    //     });
    //   }
    // }),
    formatUri: Ember.computed.alias('model.distributionFormat.firstObject.formatSpecification.title'),
    timeUnit: Ember.computed(function () {
      return [{
        name: 'year',
        value: 'year'
      }, {
        name: 'month',
        value: 'month'
      }, {
        name: 'day',
        value: 'day'
      }, {
        name: 'hour',
        value: 'hour'
      }, {
        name: 'minute',
        value: 'minute'
      }, {
        name: 'second',
        value: 'second'
      }];
    }),
    formatTemplate: Ember.Object.extend( /*Validations, */{
      init() {
        this._super(...arguments);
        this.set('formatSpecification', {});
        this.set('formatSpecification.onlineResource', [{}]);
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-transfer/preview/component", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({
    init() {
      this.tagName = this.isTable ? '' : 'div';
      this._super(...arguments);
    },
    classNames: ['property'],
    isTable: true
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-transfer/preview/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "wCMOusKT",
    "block": "{\"symbols\":[\"t\",\"&default\"],\"statements\":[[4,\"with\",[[24,[\"item\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"isTable\"]]],null,{\"statements\":[[0,\"    \"],[7,\"td\",true],[8],[1,[23,1,[\"transferSize\"]],false],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[1,[28,\"if\",[[23,1,[\"onlineOption\",\"length\"]],[28,\"concat\",[\"yes(\",[23,1,[\"onlineOption\",\"length\"]],\")\"],null],\"no\"],null],false],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[1,[28,\"if\",[[23,1,[\"offlineOption\",\"length\"]],[28,\"concat\",[\"yes(\",[23,1,[\"offlineOption\",\"length\"]],\")\"],null],\"no\"],null],false],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[1,[28,\"if\",[[23,1,[\"distributionFormat\",\"length\"]],[28,\"concat\",[\"yes(\",[23,1,[\"distributionFormat\",\"length\"]],\")\"],null],\"no\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[14,2,[[23,1,[]]]],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-transfer/preview/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/components/object/md-transfer/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "nmlvpNPQ",
    "block": "{\"symbols\":[\"unit\",\"format\",\"editing\",\"&default\"],\"statements\":[[0,\"  \"],[1,[28,\"input/md-input\",null,[[\"type\",\"valuePath\",\"model\",\"step\",\"label\",\"placeholder\",\"profilePath\"],[\"number\",\"transferSize\",[24,[\"model\"]],\"0.01\",\"Transfer Size (MB)\",\"Estimated size of a unit in the specified transfer format, expressed in megabytes.\",[28,\"concat\",[[24,[\"profilePath\"]],\".transferSize\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"label\",\"placeholder\",\"profilePath\"],[[24,[\"model\",\"unitsOfDistribution\"]],\"Distribution units\",\"Description of the tiles, layers, geographic areas, etc., in which data are available.\",[28,\"concat\",[[24,[\"profilePath\"]],\".distributionUnit\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"object/md-online-resource-array\",null,[[\"model\",\"label\",\"profilePath\",\"data-spy\",\"class\",\"shadow\"],[[24,[\"model\",\"onlineOption\"]],\"Online Option\",[28,\"concat\",[[24,[\"profilePath\"]],\".onlineOption\"],null],\"Online\",\"md-embedded\",false]]],false],[0,\"\\n\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"class\",\"data-spy\",\"buttonText\",\"templateClass\",\"ellipsis\",\"shadow\",\"profilePath\",\"attributes\"],[[24,[\"model\",\"offlineOption\"]],\"Offline Option\",\"md-embedded\",\"Offline\",\"Add Offline Option\",[24,[\"templateClass\"]],false,false,[28,\"concat\",[[24,[\"profilePath\"]],\".offlineOption\"],null],\"mediumSpecification.title\"]],{\"statements\":[[0,\"    \"],[1,[28,\"object/md-medium\",null,[[\"model\",\"profilePath\"],[[23,3,[]],[28,\"concat\",[[24,[\"profilePath\"]],\".offlineOption\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"\\n\"],[4,\"object/md-array-table\",null,[[\"columns\",\"plain\",\"responsive\",\"shadow\",\"title\",\"class\",\"value\",\"validation\",\"templateClass\",\"profilePath\"],[\"Format Name,Version,Compression Method,URL\",false,true,false,\"Distribution Format\",\"md-embedded\",[24,[\"model\",\"distributionFormat\"]],[24,[\"formatValidation\"]],[24,[\"formatTemplate\"]],[28,\"concat\",[[24,[\"profilePath\"]],\".distributionFormat\"],null]]],{\"statements\":[[0,\"\\n    \"],[7,\"td\",true],[8],[0,\"\\n        \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"profilePath\"],[[23,2,[\"item\",\"formatSpecification\",\"title\"]],\"Name of the format\",[28,\"concat\",[[24,[\"profilePath\"]],\".distributionFormat.name\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[0,\"\\n        \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"profilePath\"],[[23,2,[\"item\",\"formatSpecification\",\"edition\"]],\"Format version\",[28,\"concat\",[[24,[\"profilePath\"]],\".distributionFormat.version\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[0,\"\\n        \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"profilePath\"],[[23,2,[\"item\",\"compressionMethod\"]],\"Compression Method\",[28,\"concat\",[[24,[\"profilePath\"]],\".distributionFormat.compressionMethod\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"profilePath\"],[[23,2,[\"item\",\"formatSpecification\",\"onlineResource\",\"firstObject\",\"uri\"]],\"On-line information about the format\",[28,\"concat\",[[24,[\"profilePath\"]],\".distributionFormat.url\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"profilePath\",\"class\",\"data-spy\",\"muted\",\"plain\",\"bodyIsRow\"],[false,[28,\"concat\",[[24,[\"profilePath\"]],\".transferFrequency\"],null],\"md-embedded\",\"Transfer Frequency\",false,true,true]],{\"statements\":[[0,\"    \"],[7,\"label\",true],[10,\"class\",\"text-info col-sm-2\"],[8],[0,\"Transfer Frequency\"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-sm-10\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"each\",[[28,\"array\",[\"years\",\"months\",\"days\",\"hours\",\"minutes\",\"seconds\"],null]],null,{\"statements\":[[0,\"          \"],[1,[28,\"input/md-input\",null,[[\"class\",\"valuePath\",\"model\",\"type\",\"label\",\"placeholder\",\"profilePath\"],[\"col-sm-6 col-md-4 col-lg-2\",[28,\"concat\",[\"transferFrequency.\",[23,1,[]]],null],[24,[\"model\"]],\"number\",[28,\"uc-words\",[[23,1,[]]],null],[28,\"concat\",[\"Enter \",[23,1,[]]],null],[28,\"concat\",[[24,[\"profilePath\"]],\".transferFrequency.\",[23,1,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[14,4],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/components/object/md-transfer/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/new/id/route", ["exports", "ember-data"], function (_exports, _emberData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    NotFoundError
  } = _emberData.default;
  var _default = Ember.Route.extend({
    /**
     * The route model
     *
     * @method model
     * @param {Object} params
     * @chainable
     * @return {Object}
     */
    model: function model(params) {
      let record = this.store.peekRecord('contact', params.contact_id);
      if (record) {
        return record;
      }
      return this.store.findRecord('contact', params.contact_id);
    },
    /**
     * The breadcrumb title string.
     *
     * @property breadCrumb
     * @type {String}
     * @default null
     */
    breadCrumb: null,
    /**
     * Called when route is deactivated.
     * The model is destroyed if still "new".
     *
     * @method deactivate
     */
    deactivate: function deactivate() {
      // We grab the model loaded in this route
      let model = this.currentRouteModel();

      // If we are leaving the Route we verify if the model is in
      // 'isDeleted' state, which means it wasn't saved to the metadata.
      if (model && model.isDeleted) {
        // We call DS#unloadRecord() which removes it from the store
        this.store.unloadRecord(model);
      }
    },
    setupController: function setupController(controller, model) {
      // Call _super for default behavior
      this._super(controller, model);

      // // setup tests for required attributes
      // controller.noId = Ember.computed('model.json.contactId', function () {
      //   return model.get('json.contactId') ? false : true;
      // });
      // controller.noName = Ember.computed('model.json.individualName',
      //   'model.json.organizationName',
      //   function () {
      //     let haveIndividual = model.get('json.individualName') ? true :
      //       false;
      //     let haveOrganization = model.get('json.organizationName') ?
      //       true : false;
      //     return !(haveIndividual || haveOrganization);
      //   });
      // controller.allowSave = Ember.computed('noId', 'noName', function () {
      //   return(this.get('noName') || this.get('noId'));
      // });
    },

    // serialize: function (model) {
    //   // If we got here without an ID (and therefore without a model)
    //   // Ensure that we leave the route param in the URL blank (not 'undefined')
    //   if(!model) {
    //     return {
    //       contact_id: ''
    //     };
    //   }
    //
    //   // Otherwise, let Ember handle it as usual
    //   return this._super.apply(this, arguments);
    // },

    actions: {
      willTransition: function willTransition(transition) {
        if (transition.targetName === 'contact.new.index') {
          transition.abort();
          return true;
        }

        // We grab the model loaded in this route
        var model = this.currentRouteModel();
        // If we are leaving the Route we verify if the model is in
        // 'isNew' state, which means it wasn't saved to the backend.
        if (model && model.get('isNew')) {
          //let contexts = transition.intent.contexts;
          // We call DS#destroyRecord() which removes it from the store
          model.destroyRecord().then(() => transition.retry());
          //transition.abort();

          // if (contexts && contexts.length > 0) {
          //   //grab any models ids and apply them to transition
          //   let ids = contexts.mapBy('id');
          //   this.replaceWith(transition.targetName, ...ids);
          //   return true;
          // }
          //
          // this.replaceWith(transition.targetName);
          return true;
        }
      },
      saveContact() {
        this.currentRouteModel().save().then(model => {
          this.replaceWith('contact.show.edit', model);
        });
      },
      cancelContact() {
        this.replaceWith('contacts');
        return false;
      },
      error(error) {
        if (error instanceof NotFoundError) {
          this.flashMessages.warning('No contact found! Re-directing to new contact...');
          // redirect to new
          this.replaceWith('contact.new');
        } else {
          // otherwise let the error bubble
          return true;
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/new/id/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "z+3uFl8+",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row page-header\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-6 col-md-offset-3\"],[8],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"Create New Contact\"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"form\",false],[12,\"class\",\"form-horizontal col-md-6 col-md-offset-3\"],[3,\"action\",[[23,0,[]],\"saveContact\"],[[\"on\"],[\"submit\"]]],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"label\",true],[10,\"class\",\"col-sm-3 control-label\"],[8],[0,\"Contact Type\"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"col-sm-9 col-sm-offset-\"],[8],[0,\"\\n              \"],[1,[28,\"input/md-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"model\",\"json\",\"isOrganization\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"json\",\"isOrganization\"]]],null]],null],true,\"Organization\",\"Individual\",\"large\",\"form\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"label\",true],[11,\"class\",[29,[\"col-sm-3 control-label\\n              \",[28,\"if\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"json.contactId\"],null],\"options.presence.presence\"],null],\"required\"],null]]]],[8],[0,\"Contact ID\"],[9],[0,\"\\n\\n            \"],[7,\"div\",true],[10,\"class\",\"col-sm-9\"],[8],[0,\"\\n                \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"placeholder\"],[\"json.contactId\",[24,[\"model\"]],\"Enter an ID for this contact\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"label\",true],[11,\"class\",[29,[\"col-sm-3 control-label\\n            \",[28,\"unless\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"json.name\"],null],\"options.presence.disabled\"],null],\"required\"],null]]]],[8],[0,\"Name\"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"col-sm-9\"],[8],[0,\"\\n                \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"placeholder\"],[\"json.name\",[24,[\"model\"]],\"Enter a name for this contact\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"json\",\"isOrganization\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"label\",true],[11,\"class\",[29,[\"col-sm-3 control-label\\n            \",[28,\"unless\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"json.positionName\"],null],\"options.presence.disabled\"],null],\"required\"],null]]]],[8],[0,\"Position Name\"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"col-sm-9\"],[8],[0,\"\\n                \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"placeholder\"],[\"json.positionName\",[24,[\"model\"]],\"Enter a name for this position\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"col-sm-offset-4 col-sm-8\"],[8],[0,\"\\n                 \"],[7,\"span\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n                      \"],[7,\"button\",true],[10,\"class\",\"btn btn-success md-form-save\"],[11,\"disabled\",[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"isInvalid\"],null]],[10,\"type\",\"submit\"],[8],[0,\"Save\"],[9],[0,\"\\n                      \"],[7,\"button\",false],[12,\"class\",\"btn btn-warning \"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancelContact\"]],[8],[0,\"Cancel\"],[9],[0,\"\\n                 \"],[9],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/contact/new/id/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/new/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    redirect() {
      let rec = this.store.createRecord('contact');
      this.replaceWith('contact.new.id', rec.id);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/new/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "9P6ohrJD",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/contact/new/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/new/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'New',
        linkable: false
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Contact',
        linkable: false
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/show/edit/route", ["exports", "mdeditor/mixins/hash-poll"], function (_exports, _hashPoll) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_hashPoll.default, {});
  _exports.default = _default;
});
;define("mdeditor/pods/contact/show/edit/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "cibyMOp5",
    "block": "{\"symbols\":[\"hour\",\"email\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-sm-9 col-md-offset-1\"],[8],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"Editing Contact: \"],[1,[24,[\"model\",\"json\",\"name\"]],false],[0,\" \"],[7,\"small\",true],[8],[1,[24,[\"model\",\"json\",\"contactId\"]],false],[9],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"text-danger\"],[8],[0,\"\\n\"],[0,\"            \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"form\",true],[8],[0,\"\\n            \"],[1,[28,\"input/md-input-confirm\",null,[[\"valuePath\",\"model\",\"data-spy\",\"confirmTip\",\"placeholder\",\"label\"],[\"json.contactId\",[24,[\"model\"]],\"Contact ID\",\"Note! Editing the Contact ID may break links. Be aware.\",\"User assigned Contact ID\",\"Contact ID\"]]],false],[0,\"\\n\\n            \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"placeholder\",\"label\"],[\"json.name\",[24,[\"model\"]],[28,\"concat\",[[24,[\"model\",\"type\"]],\" Name\"],null],[28,\"concat\",[[24,[\"model\",\"type\"]],\" Name\"],null]]]],false],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"model\",\"json\",\"isOrganization\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"placeholder\",\"label\"],[\"json.positionName\",[24,[\"model\"]],\"Position Name\",\"Position Name\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n            \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"placeholder\"],[[24,[\"model\",\"json\",\"contactType\"]],\"Contact Type\",false,true,false,\"entityType\",\"Select a contact type\"]]],false],[0,\"\\n\\n            \"],[1,[28,\"input/md-select-contacts\",null,[[\"label\",\"placeholder\",\"value\",\"contactType\",\"icon\",\"tooltip\",\"defaultIcon\",\"filterId\"],[\"Member Of Organization\",\"Pick organization(s) this contact belongs to\",[24,[\"model\",\"json\",\"memberOfOrganization\"]],\"organizations\",true,false,\"organizations\",[24,[\"model\",\"json\",\"contactId\"]]]]],false],[0,\"\\n\\n            \"],[1,[28,\"object/md-contact-identifier-array\",null,[[\"value\",\"data-spy\"],[[24,[\"model\",\"json\",\"externalIdentifier\"]],\"ExternalIdentifiers\"]]],false],[0,\"\\n\\n            \"],[1,[28,\"object/md-phone-array\",null,[[\"value\",\"data-spy\"],[[24,[\"model\",\"json\",\"phone\"]],\"Phone\"]]],false],[0,\"\\n\\n\"],[4,\"object/md-simple-array-table\",null,[[\"data-spy\",\"title\",\"required\",\"value\"],[\"E-mail\",\"E-mail Address\",false,[24,[\"model\",\"json\",\"electronicMailAddress\"]]]],{\"statements\":[[0,\"              \"],[7,\"td\",true],[8],[0,\"\\n                  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,2,[\"item\",\"value\"]],\"Enter valid e-mail address\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n            \"],[1,[28,\"object/md-address\",null,[[\"model\",\"data-spy\"],[[24,[\"model\",\"json\",\"address\"]],\"Address\"]]],false],[0,\"\\n\\n            \"],[1,[28,\"object/md-online-resource-array\",null,[[\"model\",\"profilePath\",\"data-spy\"],[[24,[\"model\",\"json\",\"onlineResource\"]],\"contact\",\"Online Resource\"]]],false],[0,\"\\n\\n            \"],[1,[28,\"object/md-graphic-array\",null,[[\"model\",\"data-spy\",\"button-text\",\"label\",\"profilePath\"],[[24,[\"model\",\"json\",\"logoGraphic\"]],\"Logo\",\"Add Logo\",\"Logo\",\"contact\"]]],false],[0,\"\\n\\n\"],[4,\"object/md-simple-array-table\",null,[[\"data-spy\",\"title\",\"value\"],[\"Availability\",\"Available Time\",[24,[\"model\",\"json\",\"hoursOfService\"]]]],{\"statements\":[[0,\"              \"],[7,\"td\",true],[8],[0,\"\\n                  \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,1,[\"item\",\"value\"]],\"Describe time when contact is avaiable\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n            \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"data-spy\",\"placeholder\",\"label\"],[[24,[\"model\",\"json\",\"contactInstruction\"]],\"Instructions\",\"Supplemental Contact Instructions\",\"Contact Instructions\"]]],false],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-2 no-nav\"],[8],[0,\"\\n          \"],[1,[28,\"control/md-crud-buttons\",null,[[\"model\",\"doSave\",\"doCancel\",\"doDelete\",\"doCopy\"],[[24,[\"model\"]],[28,\"route-action\",[\"saveContact\"],null],[28,\"route-action\",[\"cancelContact\"],null],[28,\"route-action\",[\"destroyContact\"],null],[28,\"route-action\",[\"copyContact\"],null]]]],false],[0,\"\\n          \"],[1,[22,\"control/md-scroll-spy\"],false],[0,\"\\n\\n      \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/contact/show/edit/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/show/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/contact/show/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "gKK74dxa",
    "block": "{\"symbols\":[\"ei\",\"ol\",\"address\",\"hours\",\"email\",\"ph\",\"orgId\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row md-no-spotlight\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-sm-9 col-md-offset-1\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"defaultLogo\"]]],null,{\"statements\":[[0,\"        \"],[7,\"img\",true],[11,\"src\",[24,[\"model\",\"defaultLogo\"]]],[10,\"class\",\"img-responsive inline-block md-logo-preview\"],[10,\"alt\",\"Responsive image\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"fa-icon\",[[24,[\"model\",\"icon\"]]],[[\"class\"],[\"text-muted\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n      Viewing \"],[1,[24,[\"model\",\"type\"]],false],[0,\" Contact: \"],[1,[24,[\"model\",\"title\"]],false],[0,\"\\n\"],[0,\"          \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\"],[false,true,\"Basic Information\",true]],{\"statements\":[[0,\"        \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-6\"],[8],[0,\"\\n          \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Contact Id\",[24,[\"model\",\"contactId\"]]]]],false],[0,\"\\n          \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Contact Name\",[24,[\"model\",\"name\"]]]]],false],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"model\",\"json\",\"isOrganization\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Position\",[24,[\"model\",\"json\",\"positionName\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n          \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Contact Type\",[24,[\"model\",\"json\",\"contactType\"]]]]],false],[0,\"\\n          \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Contact Instructions\",[24,[\"model\",\"json\",\"contactInstructions\"]]]]],false],[0,\"\\n\\n        \"],[9],[0,\"\\n        \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-lg-6\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Organizations\"]],{\"statements\":[[4,\"each\",[[24,[\"model\",\"json\",\"memberOfOrganization\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"control/md-contact-link\",null,[[\"contactId\"],[[23,7,[]]]]],false],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[7]},{\"statements\":[[0,\"                \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No organizations assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-6 col-xxl-4\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"class\"],[false,true,\"Phone\",\"card-table\"]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"table-responsive\"],[8],[0,\"\\n        \"],[7,\"table\",true],[10,\"class\",\"table\"],[8],[0,\"\\n          \"],[7,\"thead\",true],[8],[0,\"\\n            \"],[7,\"tr\",true],[8],[0,\"\\n              \"],[7,\"th\",true],[8],[0,\"Name\"],[9],[0,\"\\n              \"],[7,\"th\",true],[8],[0,\"Number\"],[9],[0,\"\\n              \"],[7,\"th\",true],[8],[0,\"Type\"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"phone\"]]],null,{\"statements\":[[0,\"              \"],[7,\"tr\",true],[8],[0,\"\\n                \"],[7,\"td\",true],[8],[1,[28,\"get-dash\",[[23,6,[]],\"phoneName\"],null],false],[9],[0,\"\\n                \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,6,[\"phoneNumber\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"a\",true],[11,\"href\",[29,[\"tel:\",[23,6,[\"phoneNumber\"]]]]],[8],[1,[23,6,[\"phoneNumber\"]],false],[0,\"\\n                      \"],[1,[28,\"ember-tooltip\",null,[[\"text\"],[\"Click to call.\"]]],false],[0,\"\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                    --\\n\"]],\"parameters\":[]}],[0,\"                \"],[9],[0,\"\\n                \"],[7,\"td\",true],[8],[0,\"\\n                  \"],[1,[28,\"if\",[[23,6,[\"service\",\"length\"]],[28,\"join\",[\", \",[23,6,[\"service\"]]],null],\"--\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[6]},{\"statements\":[[0,\"              \"],[7,\"tr\",true],[8],[7,\"td\",true],[8],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No phones assigned.\"],[9],[9],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-6 col-xxl-4\"],[8],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"class\"],[false,true,\"E-mail\",\"\"]],{\"statements\":[[0,\"      \"],[7,\"ul\",true],[10,\"class\",\"list-unstyled\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"electronicMailAddress\"]]],null,{\"statements\":[[0,\"          \"],[7,\"li\",true],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,5,[]]]]],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[1,[23,5,[]],false],[0,\"\\n            \"],[1,[28,\"ember-tooltip\",null,[[\"text\"],[\"Click to send e-mail.\"]]],false],[0,\"\\n          \"],[9],[9],[0,\"\\n\"]],\"parameters\":[5]},{\"statements\":[[0,\"          \"],[7,\"li\",true],[8],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No e-mails assigned.\"],[9],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"clearfix hidden-xxl\"],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-6 col-xxl-4\"],[8],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"class\"],[false,true,\"Availability\",\"\"]],{\"statements\":[[0,\"      \"],[7,\"ul\",true],[10,\"class\",\"list-unstyled\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"hoursOfService\"]]],null,{\"statements\":[[0,\"          \"],[7,\"li\",true],[8],[1,[23,4,[]],false],[9],[0,\"\\n\"]],\"parameters\":[4]},{\"statements\":[[0,\"          \"],[7,\"li\",true],[8],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No information provided.\"],[9],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\"],[false,true,\"Address\",[24,[\"model\",\"json\",\"address\",\"length\"]]]],{\"statements\":[[4,\"each\",[[24,[\"model\",\"json\",\"address\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"col-lg-6\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"card\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n                \"],[1,[28,\"object/md-address/md-address-block\",null,[[\"item\"],[[23,3,[]]]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[3]},{\"statements\":[[0,\"            \"],[7,\"em\",true],[8],[0,\"No addresses provided.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\"],[false,true,\"Online Resource\"]],{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"table-responsive\"],[8],[0,\"\\n          \"],[7,\"table\",true],[10,\"class\",\"table\"],[8],[0,\"\\n            \"],[7,\"thead\",true],[8],[0,\"\\n              \"],[7,\"tr\",true],[8],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"Name\"],[9],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"URI\"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"onlineResource\"]]],null,{\"statements\":[[0,\"                \"],[7,\"tr\",true],[8],[0,\"\\n                  \"],[7,\"td\",true],[8],[1,[28,\"get-dash\",[[23,2,[]],\"name\"],null],false],[9],[0,\"\\n                  \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,2,[\"uri\"]]],null,{\"statements\":[[0,\"                      \"],[7,\"a\",true],[11,\"href\",[23,2,[\"uri\"]]],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[1,[23,2,[\"uri\"]],false],[0,\"\\n\"],[0,\"                      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                      --\\n\"]],\"parameters\":[]}],[0,\"                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[2]},{\"statements\":[[0,\"                \"],[7,\"tr\",true],[8],[7,\"td\",true],[8],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No online resources assigned.\"],[9],[9],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\"],[false,true,\"External Identifiers\",[24,[\"model\",\"json\",\"externalIdentifier\",\"length\"]]]],{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"table-responsive\"],[8],[0,\"\\n            \"],[7,\"table\",true],[10,\"class\",\"table\"],[8],[0,\"\\n              \"],[7,\"thead\",true],[8],[0,\"\\n                \"],[7,\"tr\",true],[8],[0,\"\\n                  \"],[7,\"th\",true],[8],[0,\"Identifier\"],[9],[0,\"\\n                  \"],[7,\"th\",true],[8],[0,\"Namespace\"],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"externalIdentifier\"]]],null,{\"statements\":[[0,\"            \"],[7,\"tr\",true],[8],[0,\"\\n              \"],[7,\"td\",true],[8],[1,[23,1,[\"identifier\"]],false],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[1,[23,1,[\"namespace\"]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"            \"],[7,\"tr\",true],[8],[7,\"td\",true],[8],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No External Identifiers.\"],[9],[9],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-2 no-nav\"],[8],[0,\"\\n\"],[4,\"control/md-crud-buttons\",null,[[\"model\",\"allowCopy\",\"allowDelete\",\"doDelete\",\"doCopy\"],[[24,[\"model\"]],true,true,[28,\"route-action\",[\"destroyContact\"],null],[28,\"route-action\",[\"copyContact\"],null]]],{\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-lg btn-success\",\"contact.show.edit\",[24,[\"model\",\"id\"]]]],{\"statements\":[[0,\"        \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[7,\"hr\",true],[8],[9],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-lg btn-primary btn-block\",\"contacts\"]],{\"statements\":[[0,\"    \"],[1,[28,\"fa-icon\",[\"list\"],null],false],[0,\" Show List\"]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"control/md-scroll-spy\",null,[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/contact/show/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/show/route", ["exports", "ember-copy", "mdeditor/mixins/scroll-to"], function (_exports, _emberCopy, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    flashMessages: Ember.inject.service(),
    model: function model(params) {
      let rec = this.store.peekRecord('contact', params.contact_id);
      return rec;
    },
    actions: {
      saveContact: function saveContact() {
        let model = this.currentRouteModel();
        model.save().then(() => {
          //this.refresh();
          //this.setModelHash();
          this.flashMessages.success("Saved Contact: ".concat(model.get('title')));

          //this.transitionTo('contacts');
        });
      },

      destroyContact: function destroyContact() {
        let model = this.currentRouteModel();
        model.destroyRecord().then(() => {
          this.flashMessages.success("Deleted Contact: ".concat(model.get('title')));
          this.replaceWith('contacts');
        });
      },
      cancelContact: function cancelContact() {
        let model = this.currentRouteModel();
        let message = "Cancelled changes to Contact: ".concat(model.get('title'));
        if (this.get('settings.data.autoSave')) {
          let json = model.get('jsonRevert');
          if (json) {
            model.set('json', JSON.parse(json));
            this.flashMessages.warning(message);
          }
          return;
        }
        model.reload().then(() => {
          this.flashMessages.warning(message);
        });
      },
      copyContact: function copyContact() {
        this.flashMessages.success("Copied Contact: ".concat(this.currentRouteModel().get('title')));
        this.transitionTo('contact.new.id', (0, _emberCopy.copy)(this.currentRouteModel()));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/show/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "/4dh5N+/",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/contact/show/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contact/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "nA1ycS5q",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/contact/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contacts/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const columns = [{
    propertyName: 'title',
    title: 'Title'
  }, {
    propertyName: 'defaultOrganizationName',
    title: 'Organization'
  }, {
    propertyName: 'json.electronicMailAddress.firstObject',
    title: 'E-mail'
  }, {
    propertyName: 'contactId',
    title: 'ID',
    isHidden: true
  }, {
    propertyName: 'type',
    title: 'Contact Type',
    filterWithSelect: true
  }];
  var _default = Ember.Route.extend({
    slider: Ember.inject.service(),
    model() {
      //return this.store.peekAll('contact');
      return this.modelFor('application').findBy('modelName', 'contact');
    },
    columns: columns,
    actions: {
      getColumns() {
        return this.columns;
      },
      showSlider(rec, evt) {
        let slider = this.slider;
        evt.stopPropagation();
        this.controller.set('errorTarget', rec);
        slider.set('fromName', 'md-slider-error');
        slider.toggleSlider(true);
        return false;
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/contacts/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "3uYjnDdy",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[1,[28,\"fa-icon\",[\"users\"],null],false],[0,\" Contacts\"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"shadow\"],[true,false,true]],{\"statements\":[[0,\"    \"],[1,[28,\"control/md-record-table\",null,[[\"data\",\"dataColumns\",\"allActions\",\"selectProperty\",\"showSlider\"],[[24,[\"model\"]],[28,\"compute\",[[28,\"route-action\",[\"getColumns\"],null],[24,[\"section\",\"meta\",\"type\"]]],null],true,\"_selectedFromList\",[28,\"route-action\",[\"showSlider\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[0,\"No Contacts found.\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-success btn-lg\",\"contact.new\"]],{\"statements\":[[0,\"      \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Create a Contact\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[4,\"if\",[[24,[\"errorTarget\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-slider-error\",[28,\"hash\",null,[[\"title\",\"body\"],[[28,\"concat\",[\"Viewing errors for: \",[24,[\"errorTarget\",\"title\"]]],null],[28,\"component\",[\"control/md-errors\"],[[\"errors\"],[[24,[\"errorTarget\",\"schemaErrors\"]]]]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/contacts/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dashboard/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/dashboard/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "eMJ16K+t",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"dashboard\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-xs-12 col-sm-4\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"class\",\"block\"],[\"card-inverse card-primary text-center\",false]],{\"statements\":[[0,\"                \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n                    \"],[7,\"div\",true],[10,\"class\",\"card-title row\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"col-xs-3\"],[8],[0,\"\\n                            \"],[1,[28,\"fa-icon\",[\"file-text\"],[[\"size\"],[5]]],false],[0,\"\\n                        \"],[9],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"col-xs-9 text-right\"],[8],[0,\"\\n                            \"],[7,\"div\",true],[10,\"class\",\"huge-text\"],[8],[1,[24,[\"model\",\"0\",\"length\"]],false],[9],[0,\"\\n                            \"],[7,\"div\",true],[8],[0,\"Records\"],[9],[0,\"\\n                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"records\"]],{\"statements\":[[0,\"                    \"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"pull-left\"],[8],[0,\"\\n                            View Records\\n                        \"],[9],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n                            \"],[1,[28,\"fa-icon\",[\"arrow-right\"],[[\"size\"],[1]]],false],[0,\"\\n                        \"],[9],[0,\"\\n\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-xs-12 col-sm-4\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"class\",\"block\"],[\"card-inverse card-success text-center\",false]],{\"statements\":[[0,\"                \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n                    \"],[7,\"div\",true],[10,\"class\",\"card-title row\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"col-xs-3\"],[8],[0,\"\\n                            \"],[1,[28,\"fa-icon\",[\"users\"],[[\"size\"],[5]]],false],[0,\"\\n                        \"],[9],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"col-xs-9 text-right\"],[8],[0,\"\\n                            \"],[7,\"div\",true],[10,\"class\",\"huge-text\"],[8],[1,[24,[\"model\",\"1\",\"length\"]],false],[9],[0,\"\\n                            \"],[7,\"div\",true],[8],[0,\"Contacts\"],[9],[0,\"\\n                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"contacts\"]],{\"statements\":[[0,\"                    \"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"pull-left\"],[8],[0,\"\\n                            View Contacts\\n                        \"],[9],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n                            \"],[1,[28,\"fa-icon\",[\"arrow-right\"],[[\"size\"],[1]]],false],[0,\"\\n                        \"],[9],[0,\"\\n\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-xs-12 col-sm-4\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"class\",\"block\"],[\"card-inverse card-info text-center\",false]],{\"statements\":[[0,\"                \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n                    \"],[7,\"div\",true],[10,\"class\",\"card-title row\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"col-xs-3\"],[8],[0,\"\\n                            \"],[1,[28,\"fa-icon\",[\"book\"],[[\"size\"],[5]]],false],[0,\"\\n                        \"],[9],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"col-xs-9 text-right\"],[8],[0,\"\\n                            \"],[7,\"div\",true],[10,\"class\",\"huge-text\"],[8],[1,[24,[\"model\",\"2\",\"length\"]],false],[9],[0,\"\\n                            \"],[7,\"div\",true],[8],[0,\"Dictionaries\"],[9],[0,\"\\n                        \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"dictionaries\"]],{\"statements\":[[0,\"                    \"],[7,\"div\",true],[10,\"class\",\"card-footer\"],[8],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"pull-left\"],[8],[0,\"\\n                            View Dictionaries\\n                        \"],[9],[0,\"\\n                        \"],[7,\"div\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n                            \"],[1,[28,\"fa-icon\",[\"arrow-right\"],[[\"size\"],[1]]],false],[0,\"\\n                        \"],[9],[0,\"\\n\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"hr\",true],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-xs-12 col-md-6 col-md-offset-3\"],[8],[0,\"\\n            \"],[7,\"h2\",true],[10,\"class\",\"text-center\"],[8],[0,\"\\n                \"],[7,\"b\",true],[8],[7,\"span\",true],[10,\"class\",\"logo huge-text\"],[8],[0,\"md\"],[7,\"span\",true],[10,\"class\",\"md-icon-mdeditor\"],[8],[9],[0,\"ditor\"],[9],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"p\",true],[10,\"class\",\"lead\"],[8],[0,\"\\n                The mdEditor is a web application that allows users to author\\n                and edit metadata for projects and datasets. The primary goal is to\\n                create an editor that will allow creation and management of\\n                archival quality metadata without requiring extensive knowledge\\n                of various metadata standards.\\n            \"],[9],[0,\"\\n            \"],[7,\"p\",true],[10,\"class\",\"lead\"],[8],[0,\"\\n              The md\"],[7,\"span\",true],[10,\"class\",\"md-icon-mdeditor\"],[8],[9],[0,\"ditor\\n              is currently under active development, and the team is working\\n              towards finalizing the Version 1.0 release. \"],[7,\"a\",true],[10,\"href\",\"https://github.com/adiwg/mdEditor/projects\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[0,\"Follow progress\"],[9],[0,\" or \"],[7,\"a\",true],[10,\"href\",\"https://github.com/adiwg/mdEditor/issues\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[0,\"report issues\"],[9],[0,\" on  \"],[7,\"a\",true],[10,\"href\",\"https://github.com/adiwg/mdEditor\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[0,\" the Github website\"],[9],[0,\". For more\\n              information, see \"],[7,\"a\",true],[10,\"href\",\"https://www.mdeditor.org\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[0,\"mdeditor.org\"],[9],[0,\".\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dashboard/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionaries/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const columns = [{
    propertyName: 'title',
    title: 'Title'
  }, {
    propertyName: 'dictionaryId',
    title: 'ID',
    isHidden: true
  }, {
    propertyName: 'json.dataDictionary.subject',
    title: 'Subject'
  }];
  var _default = Ember.Route.extend({
    slider: Ember.inject.service(),
    model() {
      //return this.store.peekAll('contact');
      return this.modelFor('application').findBy('modelName', 'dictionary');
    },
    columns: columns,
    actions: {
      getColumns() {
        return this.columns;
      },
      showSlider(rec, evt) {
        let slider = this.slider;
        evt.stopPropagation();
        this.controller.set('errorTarget', rec);
        slider.set('fromName', 'md-slider-error');
        slider.toggleSlider(true);
        return false;
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionaries/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "45wBaRtq",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[1,[28,\"fa-icon\",[\"book\"],null],false],[0,\" Dictionaries\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"shadow\"],[true,false,true]],{\"statements\":[[0,\"    \"],[1,[28,\"control/md-record-table\",null,[[\"data\",\"dataColumns\",\"allActions\",\"selectProperty\",\"showSlider\"],[[24,[\"model\"]],[28,\"compute\",[[28,\"route-action\",[\"getColumns\"],null]],null],true,\"_selectedFromList\",[28,\"route-action\",[\"showSlider\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[0,\"No Dictionaries found.\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-success btn-lg\",\"dictionary.new\"]],{\"statements\":[[0,\"      \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Create a Dictionary\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[4,\"if\",[[24,[\"errorTarget\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-slider-error\",[28,\"hash\",null,[[\"title\",\"body\"],[[28,\"concat\",[\"Viewing errors for: \",[24,[\"errorTarget\",\"title\"]]],null],[28,\"component\",[\"control/md-errors\"],[[\"errors\"],[[24,[\"errorTarget\",\"hasSchemaErrors\"]]]]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionaries/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/new/id/route", ["exports", "ember-data"], function (_exports, _emberData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    NotFoundError
  } = _emberData.default;
  var _default = Ember.Route.extend({
    model: function model(params) {
      let record = this.store.peekRecord('dictionary', params.dictionary_id);
      if (record) {
        return record;
      }
      return this.store.findRecord('dictionary', params.dictionary_id);
    },
    breadCrumb: null,
    deactivate: function deactivate() {
      // We grab the model loaded in this route
      let model = this.currentRouteModel();

      // If we are leaving the Route we verify if the model is in
      // 'isDeleted' state, which means it wasn't saved to the metadata.
      if (model && model.isDeleted) {
        // We call DS#unloadRecord() which removes it from the store
        this.store.unloadRecord(model);
      }
    },
    //some test actions
    setupController: function setupController(controller, model) {
      // Call _super for default behavior
      this._super(controller, model);

      // setup tests for required attributes
      controller.noName = Ember.computed('model.json.dataDictionary.citation.title', function () {
        return model.get('json.dataDictionary.citation.title') ? false : true;
      });
      controller.noType = Ember.computed('model.json.dataDictionary.resourceType', function () {
        return model.get('json.dataDictionary.resourceType') ? false : true;
      });
      controller.allowSave = Ember.computed('noType', 'noName', function () {
        return this.noName || this.noType;
      });
    },
    // serialize: function (model) {
    //   // If we got here without an ID (and therefore without a model)
    //   // Ensure that we leave the route param in the URL blank (not 'undefined')
    //   if(!model) {
    //     return {
    //       dictionary_id: ''
    //     };
    //   }
    //
    //   // Otherwise, let Ember handle it as usual
    //   return this._super.apply(this, arguments);
    // },

    actions: {
      willTransition: function willTransition(transition) {
        if (transition.targetName === 'dictionary.new.index') {
          transition.abort();
          return true;
        }

        // We grab the model loaded in this route
        var model = this.currentRouteModel();
        // If we are leaving the Route we verify if the model is in
        // 'isNew' state, which means it wasn't saved to the backend.
        if (model && model.get('isNew')) {
          // We call DS#destroyRecord() which removes it from the store
          model.destroyRecord().then(() => transition.retry());
          return true;
        }
      },
      saveDictionary() {
        this.currentRouteModel().save().then(model => {
          this.replaceWith('dictionary.show.edit', model);
        });
      },
      cancelDictionary() {
        this.replaceWith('dictionaries');
        return false;
      },
      error(error) {
        if (error instanceof NotFoundError) {
          this.flashMessages.warning('No dictionary found! Re-directing to new record...');
          // redirect to new
          this.replaceWith('dictionary.new');
        } else {
          // otherwise let the error bubble
          return true;
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/new/id/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "dPEcrkkt",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row page-header\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2 col-xxl-6 col-xxl-offset-3\"],[8],[0,\"\\n      \"],[7,\"h3\",true],[8],[0,\"Create New Data Dictionary\"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"form\",false],[12,\"class\",\"col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2 col-xxl-6 col-xxl-offset-3\"],[3,\"action\",[[23,0,[]],\"saveDictionary\"],[[\"on\"],[\"submit\"]]],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"label\",true],[11,\"class\",[29,[\"control-label\\n            \",[28,\"if\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"json.dataDictionary.citation.title\"],null],\"options.presence.presence\"],null],\"required\"],null]]]],[8],[0,\"Dictionary Title\"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n                \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"showValidations\",\"placeholder\"],[\"json.dataDictionary.citation.title\",[24,[\"model\"]],true,\"Enter a title for the dictionary\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"label\",true],[10,\"class\",\"control-label\"],[8],[0,\"Dictionary Subject\"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n              \"],[1,[28,\"input/md-codelist-multi\",null,[[\"create\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"mdCodeName\",\"showValidations\",\"model\",\"path\",\"placeholder\"],[true,true,true,[24,[\"disabled\"]],true,\"scope\",true,[24,[\"model\"]],\"json.dataDictionary.subject\",\"Choose type(s) of resource\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"col-sm-offset-4 col-sm-8\"],[8],[0,\"\\n                 \"],[7,\"span\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n                      \"],[7,\"button\",true],[10,\"class\",\"btn btn-success md-form-save\"],[11,\"disabled\",[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"isInvalid\"],null]],[10,\"type\",\"submit\"],[8],[0,\"Save\"],[9],[0,\"\\n                      \"],[7,\"button\",false],[12,\"class\",\"btn btn-warning \"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancelDictionary\"]],[8],[0,\"Cancel\"],[9],[0,\"\\n                 \"],[9],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/new/id/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/new/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    redirect: function redirect() {
      let rec = this.store.createRecord('dictionary');
      this.replaceWith('dictionary.new.id', rec.id);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/new/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "yxk1sGAz",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/new/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/new/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'New',
        linkable: false
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Dictionary',
        linkable: false
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/citation/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model(params) {
      this.set('identifierId', params.identifier_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit.citation.index'));
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let identifierId = this.identifierId;
      let model = this.modelFor('dictionary.show.edit.citation');
      let identifiers = model.get('json.dataDictionary.citation.identifier');
      let identifier = identifierId && Ember.isArray(identifiers) ? identifiers.get(identifierId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(identifier)) {
        this.flashMessages.warning('No identifier found! Re-directing to citation...');
        this.replaceWith('dictionary.show.edit.citation.index');
        return;
      }
      return identifier;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/citation/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "swtVgcHh",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Identifier: \"],[1,[24,[\"model\",\"identifier\"]],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"class\",\"model\",\"profilePath\",\"data-spy\"],[\"\",[24,[\"model\"]],\"dictionary.citation.identifier\",\"Identifier\"]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Citation\",\"arrow-left\",\"dictionary.show.edit.citation\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/citation/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/citation/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    actions: {
      editIdentifier(index) {
        this.transitionTo('dictionary.show.edit.citation.identifier', index).then(function () {
          this.setScrollTo('identifier');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/citation/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "fqjJlSFC",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"Editing Citation\\n  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"title\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\",\"json\",\"dataDictionary\",\"citation\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"class\",\"model\",\"profilePath\",\"editIdentifier\"],[\"\",[23,1,[]],\"dictionary.citation\",[28,\"route-action\",[\"editIdentifier\"],null]]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/citation/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/citation/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "fbtm1gc1",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/citation/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    beforeModel() {
      this.set('domainId', this.paramsFor('dictionary.show.edit.domain.edit').domain_id);
    },
    model(params) {
      this.set('identifierId', params.identifier_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let identifierId = this.identifierId;
      //let model = this.modelFor('dictionary.show.edit.citation.index');
      //let identifiers = model.get('json.dataDictionary.citation.identifier');
      let model = this.modelFor('dictionary.show.edit');
      let identifier = model.get('json.dataDictionary.domain.' + this.domainId + '.domainReference.identifier.' + identifierId);
      //let identifier = identifierId && isArray(identifiers) ? identifiers.get(identifierId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(identifier)) {
        this.flashMessages.warning('No identifier found! Re-directing to citation...');
        this.replaceWith('dictionary.show.edit.domain.edit.citation.index');
        return;
      }
      return identifier;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/citation/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "YKDKDVMB",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Identifier: \"],[1,[24,[\"model\",\"identifier\"]],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"class\",\"model\",\"profilePath\",\"data-spy\"],[\"\",[24,[\"model\"]],\"dictionary.domain.citation.identifier\",\"Identifier\"]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Domain Citation\",\"arrow-left\",\"dictionary.show.edit.domain.edit.citation\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/edit/citation/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/citation/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Reference'
      };
    },
    afterModel(model) {
      let domainId = this.paramsFor('dictionary.show.edit.domain.edit').domain_id;
      if (Ember.isEmpty(Ember.get(model, 'domainReference'))) {
        Ember.set(model, 'domainReference', {});
      }
      this.set('domainId', domainId);
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
    },
    actions: {
      backToDomain() {
        this.transitionTo('dictionary.show.edit.domain.edit', this.domainId);
      },
      editIdentifier(index) {
        this.transitionTo('dictionary.show.edit.domain.edit.citation.identifier', index).then(function () {
          this.setScrollTo('identifier');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/citation/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "wzdzo6J+",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"Editing Reference\\n  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for Domain \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"codeName\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\",\"domainReference\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"class\",\"model\",\"profilePath\",\"simpleIdentifier\",\"editIdentifier\"],[\"\",[23,1,[]],\"dictionary.domain.domainReference\",false,[28,\"route-action\",[\"editIdentifier\"],null]]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"type\",\"click\"],[\"Back to Domain\",\"arrow-left\",\"primary\",[28,\"route-action\",[\"backToDomain\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/edit/citation/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/citation/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Reference'
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "si59bAbv",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/edit/citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    beforeModel() {
      this.set('domainId', this.paramsFor('dictionary.show.edit.domain.edit').domain_id);
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      let parent = this.controllerFor('dictionary.show.edit.domain.edit');
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
      this.controller.set('domainId', Ember.get(parent, 'domainId'));
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: parent.get('setupModel'),
        cancelScope: this
      });
    },
    actions: {
      editCitation(scrollTo) {
        this.transitionTo('dictionary.show.edit.domain.edit.citation').then(function () {
          this.setScrollTo(scrollTo);
        }.bind(this));
      },
      editDomainItem(id) {
        this.transitionTo('dictionary.show.edit.domain.edit.item', id).then(function () {
          this.setScrollTo('md-domainitem-' + id);
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "IU7jGM/5",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Domain \"],[4,\"if\",[[24,[\"model\",\"codeName\"]]],null,{\"statements\":[[0,\"\\n    \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"codeName\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    #\"],[1,[22,\"domainId\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"parentModel\",\"title\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-domain\",null,[[\"class\",\"model\",\"profilePath\",\"editCitation\",\"editDomainItem\"],[\"\",[24,[\"model\"]],\"dictionary.domain\",[28,\"route-action\",[\"editCitation\"],null],[28,\"route-action\",[\"editDomainItem\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Domains\",\"arrow-left\",\"dictionary.show.edit.domain.index\"]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/edit/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/item/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    beforeModel() {
      this.set('domainId', this.paramsFor('dictionary.show.edit.domain.edit').domain_id);
    },
    model(params) {
      this.set('itemId', params.item_id);
      return this.setupModel();
    },
    breadCrumb: Ember.computed('itemId', function () {
      return {
        title: 'Item ' + this.itemId
      };
    }),
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);

      //let parent = this.controllerFor('dictionary.show.edit.domain.edit.index');

      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
      this.controller.set('domainId', this.domainId);
      this.controller.set('itemId', this.itemId);
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let itemId = this.itemId;
      let model = this.modelFor('dictionary.show.edit');
      let objects = model.get('json.dataDictionary.domain.' + this.domainId + '.domainItem');
      let resource = itemId && Ember.isArray(objects) ? objects.objectAt(itemId) : undefined;

      //make sure the domain item exists
      if (Ember.isEmpty(resource)) {
        this.flashMessages.warning('No Domain Item found! Re-directing to list...');
        this.replaceWith('dictionary.show.edit.domain');
        return;
      }
      return resource;
    },
    actions: {
      backToDomain() {
        this.transitionTo('dictionary.show.edit.domain.edit', this.domainId);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/item/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "fK0hOMnv",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Domain Item \"],[4,\"if\",[[24,[\"model\",\"name\"]]],null,{\"statements\":[[0,\"\\n    \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"name\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    #\"],[1,[22,\"itemId\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-domainitem\",null,[[\"class\",\"model\",\"profilePath\"],[\"\",[24,[\"model\"]],\"dictionary.domain.domainItem\"]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"type\",\"click\"],[\"Back to Domain\",\"arrow-left\",\"primary\",[28,\"route-action\",[\"backToDomain\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/edit/item/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('domainId', params.domain_id);
      return this.setupModel();
    },
    breadCrumb: Ember.computed('domainId', function () {
      return {
        title: this.domainId
      };
    }),
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('setupModel', this.setupModel);
      this.controller.set('domainId', this.domainId);
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let domainId = this.domainId;
      let model = this.modelFor('dictionary.show.edit');
      let objects = model.get('json.dataDictionary.domain');
      let resource = domainId && Ember.isArray(objects) ? objects.objectAt(domainId) : undefined;

      //make sure the domain exists
      if (Ember.isEmpty(resource)) {
        this.flashMessages.warning('No Domain object found! Re-directing to list...');
        this.replaceWith('dictionary.show.edit.domain');
        return;
      }
      return resource;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/edit/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "duvZ6FdF",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/edit/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.dataDictionary');
      Ember.set(model, 'domain', Ember.getWithDefault(model, 'domain', []));
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit.index'));
    },
    actions: {
      editDomain(id) {
        this.transitionTo('dictionary.show.edit.domain.edit', id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "saiiMxD4",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Domains\\n  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"title\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"attributes\",\"editItem\",\"verticalButtons\",\"profilePath\",\"hideIndex\",\"condensed\"],[[24,[\"model\",\"json\",\"dataDictionary\",\"domain\"]],\"Domain\",true,\"Add Domain\",true,\"domainId,codeName,description\",[28,\"route-action\",[\"editDomain\"],null],true,\"dictionary.domain\",false,false]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Domains'
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/domain/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "IgE45TCS",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/domain/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/attribute/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    beforeModel() {
      this.set('entityId', this.paramsFor('dictionary.show.edit.entity.edit').entity_id);
      this.set('attributeId', this.paramsFor('dictionary.show.edit.entity.edit.attribute').attribute_id);
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      let parent = this.controllerFor('dictionary.show.edit.entity.edit.attribute');
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
      this.controller.set('entityId', this.entityId);
      this.controller.set('attributeId', this.attributeId);
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: Ember.get(parent, 'setupModel'),
        cancelScope: this
      });
    },
    actions: {
      backToEntity() {
        this.transitionTo('dictionary.show.edit.entity.edit', this.entityId);
      },
      editCitation(scrollTo) {
        this.transitionTo('dictionary.show.edit.domain.edit.citation').then(function () {
          this.setScrollTo(scrollTo);
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/attribute/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "95s7xNpS",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Attribute \"],[4,\"if\",[[24,[\"model\",\"codeName\"]]],null,{\"statements\":[[0,\"\\n    \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"codeName\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    #\"],[1,[22,\"attributeId\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"parentModel\",\"title\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-attribute\",null,[[\"class\",\"model\",\"dictionary\",\"profilePath\"],[\"\",[24,[\"model\"]],[24,[\"parentModel\",\"json\",\"dataDictionary\"]],\"dictionary.entity.attribute\"]]],false],[0,\"\\n\"],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Entity\",\"arrow-left\",[28,\"route-action\",[\"backToEntity\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/edit/attribute/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/attribute/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    beforeModel() {
      this.set('entityId', this.paramsFor('dictionary.show.edit.entity.edit').entity_id);
    },
    model(params) {
      this.set('attributeId', params.attribute_id);
      return this.setupModel();
    },
    // breadCrumb: computed('attributeId', function () {
    //   let model = get(this, 'currentRouteModel').call(this);
    //
    //   return {
    //     title: 'Attribute: ' + (get(model,'codeName') || get(this, 'attributeId'))
    //   };
    // }),

    setupController(controller, model) {
      this._super(controller, model);
      this.controller.set('setupModel', this.setupModel);
    },
    setupModel() {
      let attributeId = this.attributeId;
      let model = this.modelFor('dictionary.show.edit');
      let objects = model.get('json.dataDictionary.entity.' + this.entityId + '.attribute');
      let resource = attributeId && Ember.isArray(objects) ? objects.objectAt(attributeId) : undefined;

      //make sure the entity item exists
      if (Ember.isEmpty(resource)) {
        this.flashMessages.warning('No Attribute found! Re-directing to Entity...');
        this.replaceWith('dictionary.show.edit.entity.edit');
        return;
      }
      return resource;
    },
    actions: {
      backToEntity() {
        this.transitionTo('dictionary.show.edit.entity.edit', this.entityId);
      },
      editIdentifier(index) {
        let model = this.currentRouteModel();
        this.transitionTo('dictionary.show.edit.entity.edit.attribute.identifier', Ember.get(model, 'attributeReference.identifier.' + index)).then(function () {
          this.setScrollTo('identifier');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/attribute/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "8FhWDRuI",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/edit/attribute/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/citation/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    beforeModel() {
      this.set('entityId', this.paramsFor('dictionary.show.edit.entity.edit').entity_id);
      this.set('citationId', this.paramsFor('dictionary.show.edit.entity.edit.citation').citation_id);
    },
    model(params) {
      this.set('identifierId', params.identifier_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let identifierId = this.identifierId;
      //let model = this.modelFor('dictionary.show.edit.citation.index');
      //let identifiers = model.get('json.dataDictionary.citation.identifier');
      let model = this.modelFor('dictionary.show.edit');
      let identifiers = model.get('json.dataDictionary.entity.' + this.entityId + '.entityReference.' + this.citationId + '.identifier');
      let identifier = identifierId && Ember.isArray(identifiers) ? identifiers.get(identifierId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(identifier)) {
        this.flashMessages.warning('No identifier found! Re-directing to citation...');
        this.replaceWith('dictionary.show.edit.entity.edit.citation.index');
        return;
      }
      return identifier;
    },
    actions: {
      backToReference() {
        this.transitionTo('dictionary.show.edit.entity.edit.citation', this.entityId, this.citationId);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/citation/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "piHCV3Qe",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Identifier\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"class\",\"model\",\"profilePath\",\"data-spy\"],[\"\",[24,[\"model\"]],\"dictionary.entity.citation.identifier\",\"Identifier\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Entity Reference\",\"arrow-left\",[28,\"route-action\",[\"backToReference\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/edit/citation/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/citation/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    actions: {
      editIdentifier(index) {
        this.transitionTo('dictionary.show.edit.entity.edit.citation.identifier', index).then(function () {
          this.setScrollTo('entity-identifier');
        }.bind(this));
      }
    },
    backToEntity() {
      this.transitionTo('dictionary.show.edit.entity.edit', this.entityId);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/citation/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "DQJhF2Ff",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"Editing Reference\\n  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"title\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-citation\",null,[[\"class\",\"model\",\"profilePath\",\"editIdentifier\"],[\"\",[23,1,[]],\"dictionary.entity.entityReference\",[28,\"route-action\",[\"editIdentifier\"],null]]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Entity\",\"arrow-left\",[28,\"route-action\",[\"backToEntity\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/edit/citation/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/citation/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Reference'
      };
    },
    beforeModel() {
      this.set('entityId', this.paramsFor('dictionary.show.edit.entity.edit').entity_id);
    },
    model(params) {
      this.set('citationId', params.citation_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let citationId = this.citationId;
      let model = this.modelFor('dictionary.show.edit');
      let citations = model.get('json.dataDictionary.entity.' + this.entityId + '.entityReference');
      let citation = citationId && Ember.isArray(citations) ? citations.get(citationId) : undefined;

      //make sure the citation exists
      if (Ember.isEmpty(citation)) {
        this.flashMessages.warning('No Entity Reference found! Re-directing...');
        this.replaceWith('dictionary.show.edit.entity.edit');
        return;
      }
      return citation;
    },
    actions: {
      backToEntity() {
        this.transitionTo('dictionary.show.edit.entity.edit', this.entityId);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "sBnENDqo",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/edit/citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    beforeModel() {
      this.set('entityId', this.paramsFor('dictionary.show.edit.entity.edit').entity_id);
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      let parent = this.controllerFor('dictionary.show.edit.entity.edit');
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit'));
      this.controller.set('entityId', Ember.get(parent, 'entityId'));
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: parent.get('setupModel'),
        cancelScope: this
      });
    },
    actions: {
      editCitation(id) {
        this.transitionTo('dictionary.show.edit.entity.edit.citation', id).then(function () {
          this.setScrollTo('entity-reference');
        }.bind(this));
      },
      editAttribute(id) {
        this.transitionTo('dictionary.show.edit.entity.edit.attribute.index', id).then(function () {
          this.setScrollTo('md-attribute-' + id);
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "cJMu9S2B",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Entity \"],[4,\"if\",[[24,[\"model\",\"codeName\"]]],null,{\"statements\":[[0,\"\\n    \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"codeName\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    #\"],[1,[22,\"entityId\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"parentModel\",\"title\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-entity\",null,[[\"class\",\"model\",\"dictionary\",\"profilePath\",\"editCitation\",\"editAttribute\"],[\"\",[24,[\"model\"]],[24,[\"parentModel\",\"json\",\"dataDictionary\"]],\"dictionary.entity\",[28,\"route-action\",[\"editCitation\"],null],[28,\"route-action\",[\"editAttribute\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Entity List\",\"arrow-left\",\"dictionary.show.edit.entity.index\"]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/edit/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('entityId', params.entity_id);
      return this.setupModel();
    },
    breadCrumb: Ember.computed('entityId', function () {
      return {
        title: this.entityId
      };
    }),
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('setupModel', this.setupModel);
      this.controller.set('entityId', this.entityId);
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let entityId = this.entityId;
      let model = this.modelFor('dictionary.show.edit');
      let objects = model.get('json.dataDictionary.entity');
      let resource = entityId && Ember.isArray(objects) ? objects.objectAt(entityId) : undefined;

      //make sure the entity exists
      if (Ember.isEmpty(resource)) {
        this.flashMessages.warning('No Entity object found! Re-directing to list...');
        this.replaceWith('dictionary.show.edit.entity');
        return;
      }
      return resource;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/edit/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "7xLtWQ5P",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/edit/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/import/route", ["exports", "uuid/v4"], function (_exports, _v) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    setupController(controller, model) {
      // Call _super for default behavior
      this._super(controller, model);
      // Implement your custom setup after
      controller.set('entity', Ember.Object.create({
        entityId: (0, _v.default)(),
        attribute: []
      }));
    },
    /**
     * The template object for columns
     *
     * @property columnObject
     * @type {Ember.Object}
     * @static
     * @readOnly
     */
    columnObject: Ember.Object.extend({
      domain: null,
      import: true,
      range: false,
      importName: null,
      importType: null,
      min: Ember.computed.min('domain'),
      max: Ember.computed.max('domain'),
      domainWarn: Ember.computed.gt('domain.length', 50),
      isNumber: Ember.computed.equal('dataType', 'number'),
      disableRange: Ember.computed.not('isNumber'),
      example: Ember.computed('domain', function () {
        return this.domain.slice(0, 10);
      })
    }),
    /**
     * Returns the dataType code value for the JavaScript type.
     *
     * @method columnType
     * @param {string} type The JavaScript type
     * @return {string}
     */
    columnType(type) {
      return {
        'string': 'character varying',
        'number': 'numeric',
        'boolean': 'boolean',
        'integer': 'integer'
      }[type] || 'unknown';
    },
    createAttribute(columnName, column) {
      let domain = Ember.get(column, 'hasDomain') ? Ember.Object.create({
        domainId: (0, _v.default)(),
        codeName: columnName,
        domainItem: Ember.get(column, 'domain').filter(i => Ember.isPresent(i)).map(itm => {
          return {
            name: itm.toString(),
            value: itm.toString(),
            definition: null
          };
        })
      }) : false;
      let attribute = {
        codeName: column.importName,
        dataType: column.importType,
        allowNull: column.allowNull,
        maxValue: column.get('range') ? column.get('max').toString() : null,
        minValue: column.get('range') ? column.get('min').toString() : null,
        domainId: domain ? Ember.get(domain, 'domainId') : null
      };
      return {
        attribute: attribute,
        domain: domain
      };
    },
    generateData() {
      let columns = this.get('controller.columns');
      let domains = [];
      let attributes = [];
      Object.keys(columns).forEach(columnName => {
        let col = columns[columnName];
        if (!col.import) {
          return;
        }
        let attr = this.createAttribute(columnName, col);
        attributes.pushObject(attr.attribute);
        if (attr.domain) {
          domains.pushObject(attr.domain);
        }
      });
      return {
        attributes: attributes,
        domains: domains
      };
    },
    actions: {
      cancelImport() {
        Ember.set(this, 'controller.columns', null);
        Ember.set(this, 'controller.processed', false);
      },
      goToEntity() {
        this.transitionTo('dictionary.show.edit.entity');
      },
      doImport() {
        let data = this.generateData();
        let entity = this.get('controller.entity');
        let dataDictionary = this.get('controller.model.json.dataDictionary');
        if (Ember.get(data, 'domains.length')) {
          Ember.set(dataDictionary, 'domain', Ember.getWithDefault(dataDictionary, 'domain', []));
          Ember.set(dataDictionary, 'domain', Ember.get(dataDictionary, 'domain').concat(data.domains));
        }
        Ember.set(dataDictionary, 'entity', Ember.getWithDefault(dataDictionary, 'entity', []));
        Ember.set(entity, 'attribute', data.attributes);
        Ember.get(dataDictionary, 'entity').push(entity);
        this.transitionTo('dictionary.show.edit.entity.edit', Ember.get(dataDictionary, 'entity.length') - 1);
        this.flashMessages.success('Entity imported from CSV!');
      },
      processData(data) {
        let template = this.columnObject;
        let typer = this.columnType;
        Ember.set(this, 'controller.processed', false);
        Ember.set(this, 'controller.columns', data.meta.fields.reduce(function (map, obj) {
          let type = Ember.typeOf(data.data[0][obj]);
          Ember.set(map, obj, template.create({
            dataType: type,
            domain: [],
            importName: obj,
            importType: typer(type)
          }));
          return map;
        }, Ember.Object.create({})));
      },
      reduceData(data) {
        let columns = Object.keys(this.get('controller.columns'));
        columns.forEach(columnName => {
          let path = 'controller.columns.' + columnName + '.domain';
          let existing = Ember.get(this, path);

          // if(get(existing,'length' )<= get(this,'maxDomain')){
          let unique = [...new Set(data.map(item => item[columnName]))];
          Ember.set(this, path, [...new Set([...existing, ...unique])]);
          // }
        });
      },

      processComplete() {
        let columns = this.get('controller.columns');
        let columnNames = Object.keys(columns);
        columnNames.forEach(columnName => {
          let col = columns[columnName];
          if (col.importType === 'numeric') {
            let isInteger = col.domain.any(itm => Number.isInteger(itm));
            col.importType = isInteger ? 'integer' : 'numeric';
          }
          col.allowNull = col.domain.any(itm => Ember.isBlank(itm));
        });
        Ember.set(this, 'controller.processed', true);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/import/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "AgBaFEqt",
    "block": "{\"symbols\":[\"row\",\"col\",\"ex\"],\"statements\":[[7,\"h3\",true],[10,\"class\",\"section-header\"],[8],[0,\"Generate Entity from CSV\"],[9],[0,\"\\n\"],[4,\"unless\",[[24,[\"processed\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"control/md-import-csv\",null,[[\"beforeFirstChunk\",\"processChunk\",\"processComplete\"],[[28,\"route-action\",[\"processData\"],null],[28,\"route-action\",[\"reduceData\"],null],[28,\"route-action\",[\"processComplete\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Back to Entity\",\"arrow-left\",\"btn-primary btn-lg btn-block md-button-responsive\",[28,\"route-action\",[\"goToEntity\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"form\",true],[10,\"class\",\"form\"],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"data-spy\"],[[24,[\"entity\",\"entityId\"]],\"Enter the identifier for the entity.\",\"Entity Identifier\",\"Identifier\"]]],false],[0,\"\\n\\n      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"required\",\"placeholder\",\"label\",\"data-spy\"],[[24,[\"entity\",\"codeName\"]],true,\"Enter the name used to refer to the entity in schema definitions or application software.\",\"Entity Code Name\",\"Code Name\"]]],false],[0,\"\\n\\n      \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"required\",\"autoresize\",\"placeholder\",\"label\",\"data-spy\"],[[24,[\"entity\",\"definition\"]],true,true,\"A brief description of the entity.\",\"Entity Definition\",\"Definition\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"titleIcon\",\"collapsible\",\"collapsed\",\"data-spy\",\"shadow\"],[\"Setup\",\"gear\",false,false,\"Setup\",true]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"md-table md-table-checkbox\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"md-table-title\"],[8],[0,\"Select options for Attributes\"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"table-responsive\"],[8],[0,\"\\n          \"],[7,\"table\",true],[10,\"class\",\"table table-striped table-hover form-inline md-table-align-middle\"],[8],[0,\"\\n            \"],[7,\"thead\",true],[8],[0,\"\\n              \"],[7,\"tr\",true],[8],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"Import\"],[9],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"Name\"],[9],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"Data Type\"],[9],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"Domain\"],[9],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"Allow Null\"],[9],[0,\"\\n                \"],[7,\"th\",true],[8],[0,\"Max/Min\"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[28,\"-each-in\",[[24,[\"columns\"]]],null]],null,{\"statements\":[[0,\"                \"],[7,\"tr\",true],[8],[0,\"\\n                  \"],[7,\"td\",true],[8],[1,[28,\"input\",null,[[\"type\",\"name\",\"checked\"],[\"checkbox\",\"import\",[23,1,[\"import\"]]]]],false],[9],[0,\"\\n                  \"],[7,\"td\",true],[10,\"class\",\"text-nowrap\"],[8],[0,\"\\n                    \"],[1,[28,\"input\",null,[[\"type\",\"value\",\"class\"],[\"text\",[23,1,[\"importName\"]],\"form-control\"]]],false],[0,\"\\n                    (\"],[1,[23,2,[]],false],[0,\")\\n                  \"],[9],[0,\"\\n                  \"],[7,\"td\",true],[8],[0,\"\\n                    \"],[1,[28,\"input/md-codelist\",null,[[\"create\",\"required\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"showValidations\",\"mdCodeName\",\"path\",\"model\",\"placeholder\",\"class\"],[true,false,true,false,false,true,false,\"dataType\",\"importType\",[23,1,[]],\"Choose a data type\",\"inline-block\"]]],false],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"td\",true],[8],[0,\"\\n                    \"],[1,[28,\"input\",null,[[\"type\",\"name\",\"checked\"],[\"checkbox\",\"hasDomain\",[23,1,[\"hasDomain\"]]]]],false],[0,\"\\n                    \"],[7,\"span\",true],[11,\"class\",[28,\"if\",[[23,1,[\"domainWarn\"]],\"text-danger\"],null]],[8],[0,\"(\"],[1,[23,1,[\"domain\",\"length\"]],false],[0,\")\"],[9],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"td\",true],[8],[0,\"\\n                    \"],[1,[28,\"input\",null,[[\"type\",\"name\",\"checked\"],[\"checkbox\",\"allowNull\",[23,1,[\"allowNull\"]]]]],false],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"td\",true],[10,\"class\",\"text-nowrap\"],[8],[0,\"\\n                    \"],[1,[28,\"input\",null,[[\"type\",\"name\",\"checked\",\"disabled\"],[\"checkbox\",\"range\",[23,1,[\"range\"]],[23,1,[\"disableRange\"]]]]],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"isNumber\"]]],null,{\"statements\":[[0,\"                      (\"],[1,[28,\"round\",[[23,1,[\"min\"]]],[[\"decimals\"],[2]]],false],[0,\"/\"],[1,[28,\"round\",[[23,1,[\"max\"]]],[[\"decimals\"],[2]]],false],[0,\")\\n\"]],\"parameters\":[]},null],[0,\"                  \"],[9],[0,\"\\n                  \"],[7,\"td\",true],[10,\"class\",\"text-nowrap\"],[8],[0,\"\\n                    \"],[7,\"div\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n                      \"],[7,\"button\",true],[10,\"class\",\"btn btn-xs btn-info\"],[10,\"type\",\"button\"],[8],[0,\"\\n                        \"],[7,\"span\",true],[10,\"class\",\"fa fa-eye\"],[8],[9],[0,\" Example\\n\\n\"],[4,\"ember-popover\",null,[[\"showOn\",\"hideOn\",\"side\"],[\"mouseenter\",\"mouseleave\",\"left\"]],{\"statements\":[[4,\"each\",[[23,1,[\"example\"]]],null,{\"statements\":[[4,\"if\",[[28,\"present\",[[23,3,[]]],null]],null,{\"statements\":[[0,\"                              \"],[1,[23,3,[]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                              \"],[7,\"i\",true],[10,\"class\",\"text-warning\"],[8],[0,\"NULL\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                            \"],[7,\"hr\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[3]},null]],\"parameters\":[]},null],[0,\"                      \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},null],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"processed\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-importcsv\"],[[\"doImport\",\"cancelImport\",\"actionContext\"],[[28,\"route-action\",[\"doImport\"],null],[28,\"route-action\",[\"cancelImport\"],null],[23,0,[]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/import/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.dataDictionary');
      Ember.run.once(this, () => {
        Ember.set(model, 'entity', Ember.getWithDefault(model, 'entity', []));
      });
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('dictionary.show.edit.index'));
    },
    actions: {
      editEntity(id) {
        this.transitionTo('dictionary.show.edit.entity.edit', id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "RxUAuqkk",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Entities\\n  \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"title\"]],false],[9],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"attributes\",\"editItem\",\"verticalButtons\",\"profilePath\",\"hideIndex\",\"condensed\"],[[24,[\"model\",\"json\",\"dataDictionary\",\"entity\"]],\"Entity\",true,\"Add Entity\",true,\"entityId,codeName,definition\",[28,\"route-action\",[\"editEntity\"],null],true,\"dictionary.entity\",false,false]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"btnType\",\"route\"],[\"Import CSV\",\"sign-in\",\"success\",\"dictionary.show.edit.entity.import\"]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/entity/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "OOT6SJoZ",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/entity/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.dataDictionary');
      Ember.set(model, 'citation', Ember.getWithDefault(model, 'citation', {}));
      Ember.set(model, 'responsibleParty', Ember.getWithDefault(model, 'responsibleParty', {}));
      Ember.set(model, 'subject', Ember.getWithDefault(model, 'subject', []));
      Ember.set(model, 'recommendedUse', Ember.getWithDefault(model, 'recommendedUse', []));
      Ember.set(model, 'locale', Ember.getWithDefault(model, 'locale', []));
      Ember.set(model, 'domain', Ember.getWithDefault(model, 'domain', []));
      Ember.set(model, 'entity', Ember.getWithDefault(model, 'entity', []));
    },
    setupController(controller, model) {
      this._super(controller, model);
      this.controllerFor('dictionary.show.edit').setProperties({
        onCancel: () => this,
        cancelScope: this
      });
    },
    actions: {
      editCitation(scrollTo) {
        this.transitionTo('dictionary.show.edit.citation').then(function () {
          this.setScrollTo(scrollTo);
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "+ODq+9xu",
    "block": "{\"symbols\":[\"resource\",\"val\"],\"statements\":[[4,\"with\",[[24,[\"model\",\"json\",\"dataDictionary\"]]],null,{\"statements\":[[0,\"  \"],[7,\"form\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n      Editing \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"title\"]],false],[9],[0,\"\\n      \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"required\"],[\"Basic Information\",true,false,\"dictionary.main.basicInformation\",\"Basic Information\",true]],{\"statements\":[[0,\"      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"required\",\"profilePath\",\"data-spy\",\"class\"],[[24,[\"model\",\"title\"]],\"Enter the title for the dictionary.\",\"Title\",true,\"dictionary.main.basicInformation.title\",\"Title\",\"md-embedded\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[28,\"is-array\",[[23,1,[\"subject\"]]],null]],null,{\"statements\":[[0,\"        \"],[1,[28,\"input/md-codelist-multi\",null,[[\"create\",\"label\",\"tooltip\",\"icon\",\"disabled\",\"allowClear\",\"mdCodeName\",\"showValidations\",\"model\",\"path\",\"placeholder\",\"profilePath\",\"data-spy\",\"class\"],[true,\"Subject\",true,true,[24,[\"disabled\"]],true,\"scope\",true,[24,[\"model\"]],\"json.dataDictionary.subject\",\"Choose type(s) of resource\",\"dictionary.main.basicInformation.subject\",\"Subject\",\"md-embedded\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"class\",\"required\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"shadow\"],[\"Responsible Party\",\"md-embedded\",true,false,false,\"dictionary.main.basicInformation.responsibleParty\",\"Responsible Party\",false]],{\"statements\":[[0,\"        \"],[1,[28,\"object/md-party\",null,[[\"model\"],[[23,1,[\"responsibleParty\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n      \"],[1,[28,\"input/md-markdown-area\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\",\"data-spy\",\"class\"],[[23,1,[\"description\"]],\"dictionary.main.basicInformation.description\",\"Description\",\"Enter text describing the dictionary.\",\"Description\",\"md-embedded\"]]],false],[0,\"\\n\\n      \"],[1,[28,\"input/md-boolean\",null,[[\"label\",\"text\",\"value\",\"profilePath\"],[\"Dictionary Included?\",\"Dictionary is included with the resource\",[23,1,[\"dictionaryIncludedWithResource\"]],\"dictionary.main.basicInformation.included\"]]],false],[0,\"\\n\\n      \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"required\",\"profilePath\"],[[23,1,[\"dictionaryFunctionalLanguage\"]],\"Describe the language used in the dictionary, e.g. UML.\",\"Functional Language\",false,\"dictionary.main.basicInformation.functionalLanguage\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"object/md-simple-array-table\",null,[[\"title\",\"required\",\"plain\",\"profilePath\",\"value\"],[\"Recommended Use\",false,false,\"dictionary.main.recommendedUse\",[23,1,[\"recommendedUse\"]]]],{\"statements\":[[0,\"      \"],[7,\"td\",true],[8],[0,\"\\n          \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"placeholder\"],[[23,2,[\"item\",\"value\"]],\"Enter a description of how the dictionary should be used.\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n    \"],[1,[28,\"object/md-locale-array\",null,[[\"title\",\"data-spy\",\"collapsible\",\"collapsed\",\"required\",\"value\",\"profilePath\"],[\"Locale\",\"Locales\",true,false,false,[23,1,[\"locale\"]],\"dictionary.main.locale\"]]],false],[0,\"\\n\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-dict-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/route", ["exports", "mdeditor/mixins/hash-poll", "mdeditor/mixins/cancel"], function (_exports, _hashPoll, _cancel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_hashPoll.default, _cancel.default, {
    /**
     * The profile service
     *
     * @return {Ember.Service} profile
     */
    profile: Ember.inject.service('custom-profile'),
    /**
     * The route activate hook, sets the profile.
     */
    afterModel(model) {
      this._super(...arguments);
      this.profile.set('active', model.get('profile'));
    },
    actions: {
      /**
       * Update the dictionary profile
       *
       * @param  {String} profile The new profile.
       */
      saveDictionary: function saveDictionary() {
        let model = this.currentRouteModel();
        model.save().then(() => {
          this.flashMessages.success("Saved Dictionary: ".concat(model.get('title')));
        });
      },
      cancelDictionary: function cancelDictionary() {
        let model = this.currentRouteModel();
        let message = "Cancelled changes to Dictionary: ".concat(model.get('title'));
        if (this.get('settings.data.autoSave')) {
          let json = model.get('jsonRevert');
          if (json) {
            model.set('json', JSON.parse(json));
            this.doCancel();
            this.flashMessages.warning(message);
          }
          return;
        }
        model.reload().then(() => {
          this.doCancel();
          this.flashMessages.warning(message);
        });
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/edit/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "5chA2Y0u",
    "block": "{\"symbols\":[\"spy\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row md-section-secondary\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-record-content col-sm-10\"],[8],[0,\"\\n    \"],[1,[22,\"liquid-outlet\"],false],[0,\"\\n\"],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-2 hidden-print\"],[8],[0,\"\\n    \"],[1,[28,\"control/md-crud-buttons\",null,[[\"model\",\"doSave\",\"doCancel\",\"doDelete\",\"doCopy\"],[[24,[\"model\"]],[28,\"route-action\",[\"saveDictionary\"],null],[28,\"route-action\",[\"cancelDictionary\"],null],[28,\"route-action\",[\"destroyDictionary\"],null],[28,\"route-action\",[\"copyDictionary\"],null]]]],false],[0,\"\\n    \"],[1,[28,\"component\",[[24,[\"subbar\"]]],[[\"context\"],[[28,\"route-action\",[\"getContext\"],null]]]],false],[0,\"\\n    \"],[7,\"hr\",true],[8],[9],[0,\"\\n    \"],[1,[28,\"from-elsewhere\",null,[[\"name\"],[\"md-subbar-extra\"]]],false],[0,\"\\n\\n\"],[4,\"from-elsewhere\",null,[[\"name\"],[\"md-scroll-spy-dict-edit\"]],{\"statements\":[[0,\"        \"],[1,[28,\"component\",[[23,1,[]]],[[\"offset\"],[145]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"dictionary-nav\",[28,\"component\",[\"input/md-select-profile\"],[[\"value\",\"record\"],[[24,[\"model\",\"profile\"]],[24,[\"model\"]]]]]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"nav-secondary\",[28,\"component\",[\"layout/md-nav-secondary\"],[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/edit/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    actions: {
      linkTo() {
        this.transitionTo(...arguments);
      },
      editDomain(id) {
        this.transitionTo('dictionary.show.edit.domain.edit', id);
      },
      editCitation(scrollTo) {
        this.transitionTo('dictionary.show.edit.citation').then(function () {
          this.setScrollTo(scrollTo);
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "AD7fl++s",
    "block": "{\"symbols\":[\"dictionary\",\"entity\",\"index\",\"domain\",\"index\",\"party\",\"contact\",\"index\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row md-no-spotlight\"],[8],[0,\"\\n\"],[4,\"with\",[[24,[\"model\",\"json\",\"dataDictionary\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"col-sm-9 col-md-offset-1\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[\"book\"],[[\"class\"],[\"text-muted\"]]],false],[0,\"\\n\\n      Viewing Dictionary: \"],[1,[24,[\"model\",\"title\"]],false],[0,\"\\n      \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\",\"collapsible\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\",\"data-spy\"],[false,true,\"Main\",false,true,\"Edit\",\"success\",[28,\"route-action\",[\"linkTo\",\"dictionary.show.edit\"],null],\"pencil\",\"Main\"]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n        \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-xxl-6\"],[8],[0,\"\\n            \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Dictionary Id\",[24,[\"model\",\"json\",\"dictionaryId\"]]]]],false],[0,\"\\n            \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Dictionary Title\",[24,[\"model\",\"title\"]]]]],false],[0,\"\\n            \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Subject\",[28,\"if\",[[23,1,[\"subject\"]],[28,\"join\",[\", \",[23,1,[\"subject\"]]],null]],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-xxl-6\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Responsible Party\"]],{\"statements\":[[4,\"with\",[[23,1,[\"responsibleParty\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"html-safe\",[[28,\"if\",[[23,6,[\"role\"]],[23,6,[\"role\"]],\"<em>No Roles assigned.</em>\"],null]],null],false],[0,\"\\n                  (\\n\"],[4,\"each\",[[23,6,[\"party\"]]],null,{\"statements\":[[0,\"                      \"],[1,[28,\"if\",[[23,8,[]],\", \"],null],false],[0,\" \"],[1,[28,\"control/md-contact-link\",null,[[\"contactId\"],[[23,7,[\"contactId\"]]]]],false],[0,\"\\n\"]],\"parameters\":[7,8]},{\"statements\":[[0,\"                      \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No Contacts assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                  )\\n                  \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[6]},{\"statements\":[[0,\"                  \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No responsibility assigned.\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-xs-12\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"plain\"],[false,true,true]],{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"text-info col-xs-6 col-sm-3\"],[8],[0,\"Locale\"],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"col-xs-6 col-sm-3\"],[8],[0,\"\\n                \"],[7,\"label\",true],[10,\"class\",\"text-nowrap\"],[8],[0,\"Character Set:\"],[9],[0,\"\\n                \"],[7,\"span\",true],[10,\"class\",\"text-nowrap\"],[8],[1,[28,\"get-property\",[[23,1,[\"locale\"]],\"characterSet\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"col-xs-6 col-sm-3\"],[8],[0,\"\\n                \"],[7,\"label\",true],[8],[0,\"Country:\"],[9],[0,\"\\n                \"],[7,\"span\",true],[10,\"class\",\"text-nowrap\"],[8],[1,[28,\"get-property\",[[23,1,[\"locale\"]],\"country\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"col-xs-6 col-sm-3\"],[8],[0,\"\\n                \"],[7,\"label\",true],[8],[0,\"Language:\"],[9],[0,\"\\n                \"],[7,\"span\",true],[8],[1,[28,\"get-property\",[[23,1,[\"locale\"]],\"language\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"collapsible\",\"scroll\",\"maximizable\",\"class\"],[false,true,\"Description\",true,true,true,\"md-embedded\"]],{\"statements\":[[0,\"          \"],[1,[28,\"md-markdown\",[[23,1,[\"description\"]],\"Description not provided!\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"object/md-citation/preview\",null,[[\"profilePath\",\"citation\",\"muted\",\"editCitation\",\"data-spy\"],[\"dictionary.main.citation\",[23,1,[\"citation\"]],true,[28,\"route-action\",[\"editCitation\"],null],\"Citation\"]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\",\"collapsible\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\",\"data-spy\"],[false,true,\"Domains\",false,true,\"Edit\",\"success\",[28,\"route-action\",[\"linkTo\",\"dictionary.show.edit.domain\"],null],\"pencil\",\"Domains\"]],{\"statements\":[[4,\"if\",[[23,1,[\"domain\"]]],null,{\"statements\":[[0,\"      \"],[7,\"table\",true],[10,\"class\",\"table table-striped\"],[8],[0,\"\\n        \"],[7,\"thead\",true],[8],[0,\"\\n          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"th\",true],[8],[0,\"#\"],[9],[0,\"\\n\"],[0,\"            \"],[7,\"th\",true],[8],[0,\"Name\"],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[0,\"Description\"],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"domain\"]]],null,{\"statements\":[[0,\"            \"],[7,\"tr\",true],[8],[0,\"\\n              \"],[7,\"th\",true],[10,\"scope\",\"row\"],[8],[1,[23,5,[]],false],[9],[0,\"\\n\"],[0,\"              \"],[7,\"td\",true],[8],[1,[28,\"get-property\",[[23,4,[]],\"codeName\"],null],false],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[4,\"if\",[[23,4,[\"description\"]]],null,{\"statements\":[[0,\" \"],[1,[28,\"word-limit\",[[23,4,[\"description\"]]],null],false],[0,\" \"]],\"parameters\":[]},{\"statements\":[[0,\" \"],[7,\"em\",true],[8],[0,\"Not Described\"],[9]],\"parameters\":[]}],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-xs btn-success\",\"dictionary.show.edit.domain.edit\",[23,5,[]]]],{\"statements\":[[0,\"Edit\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[4,5]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"No Domains found.\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\",\"collapsible\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\",\"data-spy\"],[false,true,\"Entities\",false,true,\"Edit\",\"success\",[28,\"route-action\",[\"linkTo\",\"dictionary.show.edit.entity\"],null],\"pencil\",\"Entities\"]],{\"statements\":[[4,\"if\",[[23,1,[\"entity\"]]],null,{\"statements\":[[0,\"      \"],[7,\"table\",true],[10,\"class\",\"table table-striped\"],[8],[0,\"\\n        \"],[7,\"thead\",true],[8],[0,\"\\n          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"th\",true],[8],[0,\"#\"],[9],[0,\"\\n\"],[0,\"            \"],[7,\"th\",true],[8],[0,\"Name\"],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[0,\"Description\"],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"entity\"]]],null,{\"statements\":[[0,\"            \"],[7,\"tr\",true],[8],[0,\"\\n              \"],[7,\"th\",true],[10,\"scope\",\"row\"],[8],[1,[23,3,[]],false],[9],[0,\"\\n\"],[0,\"              \"],[7,\"td\",true],[8],[1,[28,\"get-property\",[[23,2,[]],\"codeName\"],null],false],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[4,\"if\",[[23,2,[\"description\"]]],null,{\"statements\":[[0,\" \"],[1,[28,\"word-limit\",[[23,2,[\"description\"]]],null],false],[0,\" \"]],\"parameters\":[]},{\"statements\":[[0,\" \"],[7,\"em\",true],[8],[0,\"Not Described\"],[9]],\"parameters\":[]}],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-xs btn-success\",\"dictionary.show.edit.entity.edit\",[23,3,[]]]],{\"statements\":[[0,\"Edit\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n            \"],[9],[0,\"\\n\\n\"]],\"parameters\":[2,3]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"No Entities found.\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-2 no-nav\"],[8],[0,\"\\n\"],[4,\"control/md-crud-buttons\",null,[[\"model\",\"allowCopy\",\"allowDelete\",\"doDelete\",\"doCopy\"],[[24,[\"model\"]],true,true,[28,\"route-action\",[\"destroyDictionary\"],null],[28,\"route-action\",[\"copyDictionary\"],null]]],{\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-lg btn-success\",\"dictionary.show.edit\",[24,[\"model\",\"id\"]]]],{\"statements\":[[0,\"        \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[7,\"hr\",true],[8],[9],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-lg btn-primary btn-block\",\"dictionaries\"]],{\"statements\":[[0,\"      \"],[1,[28,\"fa-icon\",[\"list\"],null],false],[0,\" Show List\"]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"control/md-scroll-spy\",null,[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/route", ["exports", "ember-copy"], function (_exports, _emberCopy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    flashMessages: Ember.inject.service(),
    model: function model(params) {
      let rec = this.store.peekRecord('dictionary', params.dictionary_id);
      return rec;
    },
    afterModel(model) {
      const name = model.get('title');
      const crumb = {
        title: name
      };
      this.set('breadCrumb', crumb);
    },
    actions: {
      destroyDictionary: function destroyDictionary() {
        let model = this.currentRouteModel();
        model.destroyRecord().then(() => {
          this.flashMessages.success("Deleted Dictionary: ".concat(model.get('title')));
          this.replaceWith('dictionaries');
        });
      },
      copyDictionary: function copyDictionary() {
        this.flashMessages.success("Copied Dictionary: ".concat(this.currentRouteModel().get('title')));
        this.transitionTo('dictionary.new.id', (0, _emberCopy.copy)(this.currentRouteModel()));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/show/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "5jc5Oo1o",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"nav-main\",[28,\"component\",[\"layout/nav/dictionary/nav-main\"],[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/show/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/dictionary/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "U+zA+Xca",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/dictionary/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/error/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/error/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "wfbdEGLi",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"alert alert-danger page-header text-center\"],[8],[0,\"\\n  \"],[7,\"h1\",true],[8],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\" Application Error\"],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n    The application has encountered an error, or a record that no longer exists.\\n  \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"lastError\"]]],null,{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[0,\"\\n      Message:\\n      \"],[7,\"a\",true],[10,\"data-toggle\",\"collapse\"],[10,\"href\",\".error-stack\"],[10,\"aria-expanded\",\"false\"],[8],[0,\"\\n        \"],[1,[24,[\"lastError\",\"message\"]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"error-stack collapse\"],[8],[0,\"\\n      \"],[7,\"pre\",true],[10,\"class\",\"inline-block text-left\"],[8],[0,\"        TRACE:\\n        \"],[1,[24,[\"lastError\",\"stack\"]],false],[0,\"      \"],[9],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/error/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/export/route", ["exports", "moment", "mdeditor/mixins/scroll-to", "ember-inflector"], function (_exports, _moment, _scrollTo, _emberInflector) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const modelTypes = ['records', 'contacts', 'dictionaries', 'settings', 'schemas', 'custom-profiles', 'profiles'];
  var _default = Ember.Route.extend(_scrollTo.default, {
    mdjson: Ember.inject.service(),
    settings: Ember.inject.service(),
    model() {
      //const store = this.get('store');

      return Ember.Object.create({
        records: this.modelFor('application'),
        settings: this.get('settings.data')
      });
    },
    setupController(controller, model) {
      // Call _super for default behavior
      this._super(controller, model);
      // Implement your custom setup after
      Ember.defineProperty(this.controller, 'hasSelected', Ember.computed('model.{records.0.@each._selected,records.1.@each._selected,records.2.@each._selected,settings._selected}', function () {
        return this.store.peekAll('record').filterBy('_selected').get('length') + this.store.peekAll('contact').filterBy('_selected').get('length') + this.store.peekAll('dictionary').filterBy('_selected').get('length') + this.store.peekAll('setting').filterBy('_selected').get('length') > 0;
      }));
      Ember.defineProperty(this.controller, 'hasSelectedRecords', Ember.computed('model.records.0.@each._selected', function () {
        return this.store.peekAll('record').filterBy('_selected').get('length') > 0;
      }));
    },
    columns: Ember.Object.create({
      record: [{
        propertyName: 'title',
        title: 'Title'
      }, {
        propertyName: 'defaultType',
        title: 'Type'
      }, {
        propertyName: 'recordId',
        title: 'ID'
      }],
      contact: [{
        propertyName: 'title',
        title: 'Title'
      }, {
        propertyName: 'defaultOrganization',
        title: 'Organization'
      }, {
        propertyName: 'json.electronicMailAddress.firstObject',
        title: 'E-mail'
      }, {
        propertyName: 'contactId',
        title: 'ID'
      }],
      dictionary: [{
        propertyName: 'title',
        title: 'Title'
      }, {
        propertyName: 'defaultType',
        title: 'Type'
      }, {
        propertyName: 'dictionaryId',
        title: 'ID'
      }]
    }),
    actions: {
      exportData() {
        this.store.exportData(modelTypes, {
          download: true,
          filename: "mdeditor-".concat((0, _moment.default)().format('YYYYMMDD-HHMMSS'), ".json")
        });
      },
      exportSelectedData(asMdjson) {
        let store = this.store;
        if (asMdjson) {
          let records = store.peekAll('record').filterBy('_selected').map(itm => {
            return Ember.get(this, 'mdjson').formatRecord(itm);
          });
          window.saveAs(new Blob([JSON.stringify(records)], {
            type: 'application/json;charset=utf-8'
          }), "mdjson-".concat((0, _moment.default)().format('YYYYMMDD-HHMMSS'), ".json"));
        } else {
          let filterIds = {};
          modelTypes.forEach(type => {
            let t = (0, _emberInflector.singularize)(type);
            filterIds[t] = store.peekAll(t).filterBy('_selected').mapBy('id');
          });

          //export schemas with settings
          if (filterIds.setting.length) {
            filterIds['schema'] = store.peekAll('schema').mapBy('id');
            filterIds['profile'] = store.peekAll('profile').mapBy('id');
            filterIds['custom-profile'] = store.peekAll('custom-profile').mapBy('id');
          }
          store.exportSelectedData(modelTypes, {
            download: true,
            filename: "mdeditor-".concat((0, _moment.default)().format('YYYYMMDD-HHMMSS'), ".json"),
            filterIds: filterIds
          });
        }
      },
      getColumns(type) {
        return Ember.get(this, 'columns').get(type);
      },
      hasSelected() {
        return Ember.get(this, 'hasSelected');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/export/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "7oZ11KNu",
    "block": "{\"symbols\":[\"section\",\"index\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-sm-10\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[0,\"Export Data\"],[9],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"records\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"length\"]]],null,{\"statements\":[[4,\"if\",[[23,2,[]]],null,{\"statements\":[[0,\"        \"],[7,\"hr\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"titleIcon\",\"collapsible\",\"collapsed\",\"data-spy\",\"shadow\"],[[23,1,[\"meta\",\"title\"]],[23,1,[\"meta\",\"icon\"]],true,false,[23,1,[\"meta\",\"title\"]],true]],{\"statements\":[[0,\"      \"],[1,[28,\"control/md-record-table\",null,[[\"data\",\"dataColumns\"],[[23,1,[]],[28,\"compute\",[[28,\"route-action\",[\"getColumns\"],null],[23,1,[\"meta\",\"type\"]]],null]]]],false],[0,\"\\n\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"     \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n       \"],[7,\"h3\",true],[8],[1,[28,\"fa-icon\",[[23,1,[\"meta\",\"icon\"]]],null],false],[0,\" No \"],[7,\"em\",true],[8],[1,[23,1,[\"meta\",\"title\"]],false],[9],[0,\" found.\"],[9],[0,\"\\n     \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[1,2]},null],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-2 no-nav\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"btn-group-vertical center-block\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Export Button Controls\"],[8],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-primary md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"exportData\"]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"sign-out\"],null],false],[0,\" Export All\"],[9],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-info md-btn-responsive\"],[12,\"disabled\",[28,\"if\",[[24,[\"hasSelected\"]],false,true],null]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"exportSelectedData\"]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"check-square-o\"],null],false],[0,\" Export Selected\"],[9],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-success md-btn-responsive\"],[12,\"disabled\",[28,\"if\",[[24,[\"hasSelectedRecords\"]],false,true],null]],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"exportSelectedData\",true]],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"check-square-o\"],null],false],[0,\" Export mdJSON\"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"hr\",true],[8],[9],[0,\"\\n        \"],[7,\"label\",true],[10,\"class\",\"center-block text-center\"],[8],[0,\"Include Settings?\"],[9],[0,\"\\n        \"],[1,[28,\"x-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"model\",\"settings\",\"_selected\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"settings\",\"_selected\"]]],null]],null],true,\"Yes\",\"No\",\"medium\",\"form\"]]],false],[0,\"\\n        \"],[7,\"hr\",true],[8],[9],[0,\"\\n        \"],[1,[28,\"control/md-scroll-spy\",null,[[\"offset\",\"scrollInit\",\"setScrollTo\"],[130,[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/export/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/help/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/help/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "T10bVYTM",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/help/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/import/route", ["exports", "jquery", "ember-local-storage/adapters/base", "uuid/v4", "mdeditor/mixins/scroll-to", "mdeditor/models/contact"], function (_exports, _jquery, _base, _v, _scrollTo, _contact) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const generateIdForRecord = _base.default.create().generateIdForRecord;
  var _default = Ember.Route.extend(_scrollTo.default, {
    flashMessages: Ember.inject.service(),
    jsonvalidator: Ember.inject.service(),
    settings: Ember.inject.service(),
    ajax: Ember.inject.service(),
    init() {
      this._super(...arguments);
      this.icons = {
        records: 'file',
        dictionaries: 'book',
        contacts: 'users',
        settings: 'gear'
      };
    },
    setupController(controller, model) {
      // Call _super for default behavior
      this._super(controller, model);
      // Implement your custom setup after
      controller.set('importUri', this.get('settings.data.importUriBase'));
      controller.set('apiURL', this.apiURL);
    },
    model() {
      return Ember.Object.create({
        files: false,
        merge: true
      });
    },
    apiURL: Ember.computed.or('settings.data.mdTranslatorAPI', 'defaultAPI'),
    getTitle(record) {
      let raw = record.attributes.json;
      let json = raw ? JSON.parse(raw) : null;
      switch (record.type) {
        case 'records':
          return Ember.getWithDefault(json, 'metadata.resourceInfo.citation.title', 'NO TITLE');
        case 'dictionaries':
          return Ember.getWithDefault(json, 'dataDictionary.citation.title', 'NO TITLE');
        case 'contacts':
          return json.name || 'NO NAME';
        case 'schemas':
          return record.attributes.title || 'NO TITLE';
        default:
          return 'N/A';
      }
    },
    formatMdJSON(json) {
      let {
        contact,
        dataDictionary
      } = json;
      let data = Ember.A();
      let template = Ember.Object.extend({
        init() {
          this._super(...arguments);
          Ember.set(this, 'id', generateIdForRecord());
        },
        attributes: Ember.computed(function () {
          return {
            json: null //,
            //date-updated: '2017-05-18T21:21:34.446Z'
          };
        }),

        type: null
      });
      if (contact) {
        contact.forEach(item => {
          data.pushObject(template.create({
            attributes: {
              json: JSON.stringify(Ember.assign(_contact.JsonDefault.create(), item))
            },
            type: 'contacts'
          }));
        });
      }
      if (Ember.get(json, 'metadata.metadataInfo.metadataIdentifier') === undefined) {
        json.metadata.metadataInfo.metadataIdentifier = {
          identifier: (0, _v.default)(),
          namespace: 'urn:uuid'
        };
      }
      data.pushObject(template.create({
        attributes: {
          json: JSON.stringify(json)
          //profile: 'full'
        },

        type: 'records'
      }));
      if (dataDictionary) {
        dataDictionary.forEach(item => {
          data.pushObject(template.create({
            attributes: {
              json: JSON.stringify({
                dataDictionary: item
              })
            },
            type: 'dictionaries'
          }));
        });
      }
      return data;
    },
    mapJSON(data) {
      let {
        json,
        route
      } = data;
      let files;
      if (Ember.isArray(data.json.data)) {
        files = this.mapEditorJSON(data);
      } else {
        //assume it's raw mdJSON for now
        files = this.mapMdJSON(data);
      }
      route.currentRouteModel().set('files', files);
      route.currentRouteModel().set('data', json.data);
    },
    mapMdJSON(data) {
      let map = Ember.A();
      if (Ember.isArray(data.json)) {
        data.json.forEach(item => {
          map = map.concat(this.formatMdJSON(item));
        });
      } else {
        map = map.concat(this.formatMdJSON(data.json));
      }
      Ember.set(data, 'json.data', map);
      return this.mapRecords(map);
    },
    mapRecords(records) {
      return records.reduce((map, item) => {
        if (!map[item.type]) {
          map[item.type] = [];
        }
        item.meta = {};
        item.meta.title = this.getTitle(item);
        item.meta.icon = this.icons[item.type];
        item.meta.export = true;
        map[item.type].push(Ember.Object.create(item));
        return map;
      }, {});
    },
    mapEditorJSON(data) {
      let {
        file,
        json
      } = data;
      let jv = Ember.get(this, 'jsonvalidator.validator');
      let valid = jv.validate('jsonapi', json);
      if (!valid) {
        throw new Error("".concat(file.name, " is not a valid mdEditor file."));
      }
      return this.mapRecords(json.data);
    },
    columns: Ember.computed(function () {
      let route = this;
      return [{
        propertyName: 'meta.title',
        title: 'Title'
      }, {
        propertyName: 'attributes.date-updated',
        title: 'Last Updated'
      }, {
        propertyName: 'id',
        title: 'ID'
      }, {
        title: 'Actions',
        component: 'control/md-record-table/buttons/custom',
        disableFiltering: true,
        buttonConfig: {
          title: 'Preview JSON',
          action(model) {
            route.showPreview.call(route, model);
          },
          iconPath: 'meta.icon'
        }
      }];
    }),
    showPreview(model) {
      let json = {};
      Ember.assign(json, model.attributes);
      if (model.attributes.json) {
        json.json = JSON.parse(model.attributes.json);
      }
      this.currentRouteModel().set('preview', {
        model: model,
        json: json
      });
    },
    actions: {
      getColumns() {
        return Ember.get(this, 'columns');
      },
      getIcon(type) {
        return this.icons[type];
      },
      readData(file) {
        let json;
        let url = this.apiURL;
        let controller = this.controller;
        let cmp = this;
        new Ember.RSVP.Promise((resolve, reject) => {
          if (file.type.match(/.*\/xml$/)) {
            Ember.set(controller, 'isTranslating', true);
            Ember.get(this, 'flashMessages').info("Translation service provided by ".concat(url, "."));
            this.ajax.request(url, {
              type: 'POST',
              data: {
                //file: JSON.stringify(cleaner.clean(json)),
                file: file.data,
                reader: 'fgdc',
                writer: 'mdJson',
                validate: 'normal',
                format: 'json'
              },
              context: cmp
            }).then(function (response) {
              Ember.set(controller, 'isTranslating', false);
              if (response.success) {
                resolve({
                  json: JSON.parse(response.writerOutput),
                  file: file,
                  route: cmp
                });
                return;
              }
              reject("Failed to translate file: ".concat(file.name, ". Is it valid FGDC CSDGM XML?"));
            }, response => {
              Ember.set(controller, 'isTranslating', false);
              reject("mdTranslator Server error: ".concat(response.status, ": ").concat(response.statusText, ". Is your file valid FGDC CSDGM XML?"));
            });
          } else {
            try {
              json = JSON.parse(file.data);
            } catch (e) {
              reject("Failed to parse file: ".concat(file.name, ". Is it valid JSON?"));
            }
            resolve({
              json: json,
              file: file,
              route: cmp
            });
          }
        }).then(data => {
          //determine file type and map
          cmp.mapJSON(data);
        }).catch(reason => {
          //catch any errors
          Ember.get(cmp, 'flashMessages').danger(reason);
          return false;
        }).finally(() => {
          (0, _jquery.default)('.import-file-picker input:file').val('');
        });
      },
      readFromUri() {
        let uri = this.controller.get('importUri');
        let controller = this.controller;
        let route = this;
        Ember.set(controller, 'isLoading', true);
        this.ajax.request(uri, {
          type: 'GET',
          context: this,
          dataType: 'text',
          crossDomain: true
        }).then(function (response) {
          if (response) {
            let json;
            new Ember.RSVP.Promise((resolve, reject) => {
              try {
                json = JSON.parse(response);
              } catch (e) {
                reject("Failed to parse data. Is it valid JSON?");
              }
              resolve({
                json: json,
                file: null,
                route: route
              });
            }).then(data => {
              //determine file type and map
              route.mapJSON(data);
            }).catch(reason => {
              //catch any errors
              Ember.get(controller, 'flashMessages').danger(reason);
              return false;
            }).finally(() => {
              Ember.set(controller, 'isLoading', false);
              (0, _jquery.default)('.md-import-picker input:file').val('');
            });
          } else {
            Ember.set(controller, 'errors', response.messages);
            Ember.get(controller, 'flashMessages').danger('Import error!');
          }
        }).catch(response => {
          let error = " Error retrieving the mdJSON: ".concat(response.status, ": ").concat(response.statusText);
          Ember.set(controller, 'xhrError', error);
          Ember.set(controller, 'isLoading', false);
          Ember.get(controller, 'flashMessages').danger(error);
        });
      },
      importData() {
        let store = this.store;
        let data = {
          data: this.currentRouteModel().get('data').filterBy('meta.export').rejectBy('type', 'settings')
        };
        store.importData(data, {
          truncate: !this.currentRouteModel().get('merge'),
          json: false
        }).then(() => {
          Ember.get(this, 'flashMessages').success("Imported data. Records were\n              ".concat(this.currentRouteModel().get('merge') ? 'merged' : 'replaced', "."), {
            extendedTimeout: 1500
          });
          //this.transitionTo('dashboard');
        });

        let settingService = this.settings;
        let newSettings = this.currentRouteModel().get('data').filterBy('meta.export').findBy('type', 'settings');
        if (newSettings) {
          let settings = {
            data: [newSettings]
          };
          let destroys = [];
          store.findAll('setting').forEach(rec => {
            destroys.pushObject(rec.destroyRecord());
          });
          Ember.RSVP.allSettled(destroys).then(() => {
            store.importData(settings, {
              json: false
            }).then(() => {
              settingService.setup();
              Ember.get(this, 'flashMessages').success("Imported Settings.", {
                extendedTimeout: 1500
              });
            });
          });
        }
      },
      closePreview() {
        this.currentRouteModel().set('preview', false);
      },
      cancelImport() {
        this.currentRouteModel().set('files', false);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/import/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "SPBKWP6z",
    "block": "{\"symbols\":[\"item\",\"key\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n\\n  \"],[7,\"div\",true],[11,\"class\",[29,[\"col-sm-\",[28,\"if\",[[24,[\"model\",\"files\"]],\"9\",\"12\"],null],\" col-xxl-\",[28,\"if\",[[24,[\"model\",\"files\"]],\"10\",\"12\"],null]]]],[8],[0,\"\\n\\n    \"],[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[0,\"Import Data\"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"preview\"]]],null,{\"statements\":[[0,\"      \"],[7,\"h3\",true],[8],[1,[28,\"capitalize\",[[28,\"singularize\",[[24,[\"model\",\"preview\",\"model\",\"type\"]]],null]],null],false],[0,\": \"],[1,[24,[\"model\",\"preview\",\"model\",\"id\"]],false],[9],[0,\"\\n      \"],[1,[28,\"control/md-json-viewer\",null,[[\"class\",\"json\",\"modal\"],[\"md-import-preview\",[24,[\"model\",\"preview\",\"json\"]],false]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"unless\",[[24,[\"model\",\"files\"]]],null,{\"statements\":[[4,\"file-picker\",null,[[\"class\",\"fileLoaded\",\"preview\",\"accept\",\"readAs\"],[\"md-file-picker md-import-picker\",\"readData\",false,\".json,.xml\",\"readAsText\"]],{\"statements\":[[0,\"          \"],[7,\"button\",true],[10,\"class\",\"btn btn-lg btn-info btn-block\"],[10,\"type\",\"button\"],[8],[0,\"\\n            \"],[7,\"p\",true],[8],[1,[28,\"fa-icon\",[\"bullseye\"],null],false],[0,\" Click or Drop a file here to import data.\"],[9],[0,\"\\n            \"],[7,\"hr\",true],[8],[9],[0,\"\\n\"],[4,\"unless\",[[24,[\"isTranslating\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"inline-block text-left small\"],[8],[0,\"\\n              These file formats are supported: \"],[7,\"br\",true],[8],[9],[0,\"\\n              \"],[7,\"ul\",true],[8],[0,\"\\n                \"],[7,\"li\",true],[8],[0,\"mdEditor (.json)\"],[9],[0,\"\\n                \"],[7,\"li\",true],[8],[0,\"mdJSON (.json)\"],[9],[0,\"\\n                \"],[7,\"li\",true],[8],[0,\"FGDC CSDGM (.xml)\"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"fa-icon\",[\"spinner\"],[[\"spin\"],[true]]],false],[0,\" Translating to mdJSON. Please wait... \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[7,\"hr\",true],[8],[9],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"Import mdJSON from Online URL\"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"col-xxl-6\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"input-group input-group-lg\"],[8],[0,\"\\n              \"],[1,[28,\"input\",null,[[\"type\",\"value\",\"placeholder\",\"class\"],[\"url\",[24,[\"importUri\"]],\"Enter online link to mdJSON\",\"form-control\"]]],false],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"input-group-btn\"],[8],[0,\"\\n                  \"],[7,\"button\",false],[12,\"class\",\"btn btn-primary\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"route-action\",[\"readFromUri\"],null]]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"isLoading\"]]],null,{\"statements\":[[0,\"                      \"],[1,[28,\"fa-icon\",[\"spinner\"],[[\"spin\"],[true]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                      \"],[1,[28,\"fa-icon\",[\"cloud-download\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                    Import\"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[28,\"-each-in\",[[24,[\"model\",\"files\"]]],null]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"titleIcon\",\"collapsible\",\"collapsed\",\"data-spy\",\"shadow\"],[[28,\"capitalize\",[[23,2,[]]],null],[28,\"compute\",[[28,\"route-action\",[\"getIcon\",[23,2,[]]],null]],null],true,false,[28,\"capitalize\",[[23,2,[]]],null],true]],{\"statements\":[[0,\"        \"],[1,[28,\"control/md-record-table\",null,[[\"data\",\"dataColumns\",\"actionsColumn\",\"selectProperty\",\"showColumnsDropdown\",\"showComponentFooter\",\"showGlobalFilter\",\"showPageSize\",\"useFilteringByColumns\"],[[23,1,[]],[28,\"compute\",[[28,\"route-action\",[\"getColumns\"],null],[23,2,[]]],null],false,\"meta.export\",[28,\"not-eq\",[[23,2,[]],\"settings\"],null],[28,\"not-eq\",[[23,2,[]],\"settings\"],null],[28,\"not-eq\",[[23,2,[]],\"settings\"],null],[28,\"not-eq\",[[23,2,[]],\"settings\"],null],[28,\"not-eq\",[[23,2,[]],\"settings\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1,2]},null]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"files\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-3 col-xxl-2 no-nav\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"preview\"]]],null,{\"statements\":[[0,\"        \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-primary btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"closePreview\"]],[8],[1,[28,\"fa-icon\",[\"arrow-left\"],null],false],[0,\" Close Preview\"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"files\"]]],null,{\"statements\":[[0,\"        \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-success btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"importData\"]],[8],[1,[28,\"fa-icon\",[\"sign-in\"],null],false],[0,\" Click to Import Data\"],[9],[0,\"\\n        \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-danger btn-block md-btn-responsive\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancelImport\"]],[8],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Cancel Import\"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"btn-fake btn-block\"],[8],[0,\"\\n          \"],[1,[28,\"x-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"model\",\"merge\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"merge\"]]],null]],null],true,\"Merge\",\"Replace\",\"medium\",\"default\"]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"hr\",true],[8],[9],[0,\"\\n        \"],[1,[28,\"control/md-scroll-spy\",null,[[\"offset\",\"scrollInit\",\"setScrollTo\"],[130,[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]],false],[0,\"\\n      \"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/import/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/not-found/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      return Ember.Object.create({
        path: params.path
      });
    },
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Page Not Found',
        linkable: false
      };
    },
    redirect() {
      var url = this.router.location.formatURL('/not-found');
      if (window.location.pathname !== url) {
        this.transitionTo('/not-found');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/not-found/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "gsbxGOT2",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"alert alert-warning page-header text-center\"],[8],[0,\"\\n  \"],[7,\"h1\",true],[8],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\" 404 Not Found: \"],[1,[22,\"path\"],false],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n    Perhaps you have visited a link that has changed, or a record that no longer exists.\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/not-found/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/publish/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/publish/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "TgR5IOBS",
    "block": "{\"symbols\":[\"catalog\"],\"statements\":[[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[0,\"Click to choose a publishing service:\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\"],[\"list-group-item\",[28,\"concat\",[\"publish.\",[23,1,[\"route\"]]],null]]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"media\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"media-left media-middle\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"image\"]]],null,{\"statements\":[[0,\"            \"],[7,\"img\",true],[10,\"class\",\"media-object fa-fw fa-5x\"],[11,\"src\",[23,1,[\"image\"]]],[11,\"alt\",[29,[[23,1,[\"title\"]],\" icon\"]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"fa-icon\",[[28,\"if\",[[23,1,[\"icon\"]],[23,1,[\"icon\"]],\"list-alt\"],null]],[[\"size\",\"fixedWidth\",\"class\"],[\"5\",true,\"text-info\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"media-body\"],[8],[0,\"\\n\"],[0,\"          \"],[7,\"h1\",true],[10,\"class\",\"media-heading\"],[8],[1,[23,1,[\"name\"]],false],[9],[0,\"\\n          \"],[7,\"p\",true],[10,\"class\",\"text-muted\"],[8],[1,[23,1,[\"description\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"card card-inverse card-warning\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"card-title\"],[8],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\" No Services Available!\"],[9],[0,\"\\n      \"],[7,\"p\",true],[10,\"class\",\"card-text\"],[8],[0,\"No publication services have been configured. Contact your technical support for assistance.\"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/publish/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/publish/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    publish: Ember.inject.service('publish'),
    model: function model() {
      return this.get('publish.catalogs');
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/publish/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ClLvcOv7",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/publish/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Record',
        linkable: false
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "+apdi//7",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/nav/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ddQdToij",
    "block": "{\"symbols\":[],\"statements\":[[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"record.show.translate\"]],{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"fa fa-retweet\"],[8],[9],[0,\"\\n    \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Translate\"],[9],[0,\"\\n    \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Translate\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/nav/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/new/id/route", ["exports", "ember-data"], function (_exports, _emberData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    NotFoundError
  } = _emberData.default;
  var _default = Ember.Route.extend({
    model(params) {
      let record = this.store.peekRecord('record', params.record_id);
      if (record) {
        return record;
      }
      return this.store.findRecord('record', params.record_id);
    },
    breadCrumb: null,
    /**
     * The profile service
     *
     * @return {Ember.Service} profile
     */
    //profile: service(),

    deactivate() {
      // We grab the model loaded in this route
      let model = this.currentRouteModel();

      // If we are leaving the Route we verify if the model is in
      // 'isDeleted' state, which means it wasn't saved to the metadata.
      if (model && model.isDeleted) {
        // We call DS#unloadRecord() which removes it from the store
        this.store.unloadRecord(model);
      }
    },
    //some test actions
    setupController(controller, model) {
      // Call _super for default behavior
      this._super(controller, model);
    },
    // serialize: function (model) {
    //   // If we got here without an ID (and therefore without a model)
    //   // Ensure that we leave the route param in the URL blank (not 'undefined')
    //   if (!model) {
    //     let rec=this.store.createRecord('record');
    //     return {
    //       record_id: rec.id
    //     };
    //   }
    //
    //   // Otherwise, let Ember handle it as usual
    //   return this._super.apply(this, arguments);
    // },

    actions: {
      willTransition: function willTransition(transition) {
        if (transition.targetName === 'record.new.index') {
          transition.abort();
          return true;
        }

        // We grab the model loaded in this route
        var model = this.currentRouteModel();
        // If we are leaving the Route we verify if the model is in
        // 'isNew' state, which means it wasn't saved to the backend.
        if (model && model.get('isNew')) {
          transition.abort();
          //let contexts = transition.intent.contexts;
          // We call DS#destroyRecord() which removes it from the store
          model.destroyRecord().then(() => transition.retry());
          //transition.abort();

          // if(contexts && contexts.length > 0) {
          //   //grab any models ids and apply them to transition
          //   let ids = contexts.mapBy('id');
          //   this.replaceWith(transition.targetName, ...ids);
          //   return true;
          // }

          //this.replaceWith(transition.targetName);
          return true;
        }
      },
      saveRecord() {
        this.currentRouteModel().save().then(model => {
          this.replaceWith('record.show.edit', model);
        });
      },
      cancelRecord() {
        this.replaceWith('records');
        return false;
      },
      error(error) {
        if (error instanceof NotFoundError) {
          this.flashMessages.warning('No record found! Re-directing to new record...');
          // redirect to new
          this.replaceWith('record.new');
        } else {
          // otherwise let the error bubble
          return true;
        }
      }
      // /**
      //  * Update the record profile
      //  *
      //  * @name   updateProfile
      //  * @param  {String} profile The new profile.
      //  */
      // updateProfile(profile) {
      //   this.profile
      //     .set('active', profile);
      // }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/new/id/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "WqEts1C1",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row page-header\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2 col-xxl-6 col-xxl-offset-3\"],[8],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"Create New Record\"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"form\",false],[12,\"class\",\"col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2 col-xxl-6 col-xxl-offset-3\"],[3,\"action\",[[23,0,[]],\"saveRecord\"],[[\"on\"],[\"submit\"]]],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n          \"],[7,\"label\",true],[10,\"class\",\"control-label\"],[8],[0,\"Record ID\"],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"text-muted\"],[8],[1,[24,[\"model\",\"recordId\"]],false],[9],[0,\"\\n\"],[0,\"      \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"label\",true],[11,\"class\",[29,[\"control-label\\n            \",[28,\"if\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"attrs\"],null],\"json.metadata.resourceInfo.citation.title\"],null],\"options.presence.presence\"],null],\"required\"],null]]]],[8],[0,\"Record Title\"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n              \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"profilePath\",\"placeholder\"],[\"json.metadata.resourceInfo.citation.title\",[24,[\"model\"]],\"record.new.title\",\"Enter a title for the record\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group clear\"],[8],[0,\"\\n\"],[0,\"            \"],[7,\"div\",true],[10,\"class\",\"card\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n\\n            \"],[1,[28,\"object/md-resource-type-array\",null,[[\"plain\",\"value\",\"required\",\"profilePath\"],[true,[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\",\"resourceType\"]],true,\"record.new\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"col-sm-offset-4 col-sm-8\"],[8],[0,\"\\n                 \"],[7,\"span\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n                      \"],[7,\"button\",true],[10,\"class\",\"btn btn-success md-form-save\"],[11,\"disabled\",[28,\"get\",[[28,\"get\",[[24,[\"model\"]],\"validations\"],null],\"isInvalid\"],null]],[10,\"type\",\"submit\"],[8],[0,\"Save\"],[9],[0,\"\\n                      \"],[7,\"button\",false],[12,\"class\",\"btn btn-warning \"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"cancelRecord\"]],[8],[0,\"Cancel\"],[9],[0,\"\\n                 \"],[9],[0,\"\\n            \"],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/new/id/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/new/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    redirect() {
      let rec = this.store.createRecord('record');
      this.replaceWith('record.new.id', rec.id);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/new/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "YLKDgKSH",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/new/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/new/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'New',
        linkable: false
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Record',
        linkable: false
      };
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata');
      Ember.set(model, 'associatedResource', Ember.getWithDefault(model, 'associatedResource', []));
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
    },
    actions: {
      editResource(id) {
        this.transitionTo('record.show.edit.associated.resource', id);
      } //,
      // templateClass() {
      //   return Ember.Object.extend({
      //     init() {
      //       this._super(...arguments);
      //       //this.set('authority', {});
      //     }
      //   });
      // }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "jMD6NIg8",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Associated Resource\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplate\",\"editItem\",\"verticalButtons\",\"profilePath\",\"hideIndex\",\"condensed\",\"addSubbar\"],[[24,[\"model\",\"json\",\"metadata\",\"associatedResource\"]],\"Associated Resource\",true,\"Add Resource\",[24,[\"ellipsis\"]],\"object/md-associated/preview\",[28,\"route-action\",[\"editResource\"],null],true,\"record.associated\",true,true,\"md-subbar-extra\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/associated/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/resource/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const sliderColumns = [{
    propertyName: 'recordId',
    title: 'ID'
  }, {
    propertyName: 'title',
    title: 'Title'
  }, {
    propertyName: 'defaultType',
    title: 'Type'
  }];
  var _default = Ember.Route.extend(_scrollTo.default, {
    slider: Ember.inject.service(),
    sliderColumns: sliderColumns,
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('resourceId', Ember.get(this.controllerFor('record.show.edit.associated.resource'), 'resourceId'));
    },
    actions: {
      insertResource(selected) {
        let slider = this.slider;
        let rec = selected.get('firstObject');
        if (rec) {
          let resource = this.currentRouteModel();
          Ember.set(resource, 'mdRecordId', Ember.get(rec, 'recordId'));
        }

        //this.controller.set('slider', false);
        slider.toggleSlider(false);
        selected.clear();
      },
      selectResource() {
        let slider = this.slider;

        //this.controller.set('slider', true);
        slider.toggleSlider(true);
      },
      sliderData() {
        return this.store.peekAll('record').filterBy('recordId');
      },
      sliderColumns() {
        return this.sliderColumns;
      },
      editLinked(rec) {
        this.transitionTo('record.show.edit', rec.get('id'));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/resource/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "eAM5N+et",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Associated Resource #\"],[1,[22,\"resourceId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-associated\",null,[[\"model\",\"recordId\",\"profilePath\",\"editLinked\"],[[24,[\"model\"]],[24,[\"parentModel\",\"recordId\"]],\"record.associated\",[28,\"route-action\",[\"editLinked\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-citation\"],[[\"text\",\"icon\",\"route\",\"selectResource\"],[\"Back to Resource List\",\"arrow-left\",\"record.show.edit.associated\",[28,\"route-action\",[\"selectResource\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-slider-content\",[28,\"hash\",null,[[\"title\",\"body\"],[[28,\"concat\",[\"Click row to select a resource: \",[24,[\"model\",\"associationType\"]]],null],[28,\"component\",[\"control/md-select-table\"],[[\"select\",\"data\",\"columns\"],[[28,\"route-action\",[\"insertResource\"],null],[28,\"compute\",[[28,\"route-action\",[\"sliderData\"],null]],null],[28,\"compute\",[[28,\"route-action\",[\"sliderColumns\"],null]],null]]]]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/associated/resource/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/resource/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    breadCrumb: Ember.computed('resourceId', function () {
      return {
        title: Ember.get(this, 'resourceId'),
        linkable: true
      };
    }),
    model(params) {
      this.set('resourceId', params.resource_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);

      //this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controller.set('resourceId', Ember.get(this, 'resourceId'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let resourceId = Ember.get(this, 'resourceId');
      let model = this.modelFor('record.show.edit');
      let objects = model.get('json.metadata.associatedResource');
      let resource = resourceId && Ember.isArray(objects) ? objects.objectAt(resourceId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(resource)) {
        Ember.get(this, 'flashMessages').warning('No Associated Resource object found! Re-directing to list...');
        this.replaceWith('record.show.edit.associated');
        return;
      }
      return resource;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/resource/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "vmlx+ni+",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/associated/resource/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/associated/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "enVGckz6",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/associated/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/constraint/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata.resourceInfo');
      Ember.set(model, 'constraint', Ember.getWithDefault(model, 'constraint', []));
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/constraint/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "q7afsy7p",
    "block": "{\"symbols\":[\"editing\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Constraints\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"collasped\",\"header\",\"buttonText\",\"previewTemplate\",\"addSubbar\",\"attributes\"],[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\",\"constraint\"]],false,\"Constraints\",\"Add Constraint\",[24,[\"previewTemplate\"]],\"md-subbar-extra\",\"type\"]],{\"statements\":[[0,\"  \"],[1,[28,\"object/md-constraint\",null,[[\"model\",\"profilePath\"],[[23,1,[]],\"record.constraints\"]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/constraint/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/constraint/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/constraint/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Tw8C6P8a",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"outlet\",null,[[\"class\"],[\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/constraint/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/coverages/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/coverages/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "aGwI10o4",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[7,\"style\",true],[10,\"media\",\"screen\"],[8],[0,\"\\n    .construction {\\n        width: 50vh;\\n        min-width:240px;\\n        font-size:5vh;\\n        border: 2vh solid #333333;\\n        margin: 10vh auto;\\n        padding: 3vh;\\n        border-radius: 5vh;\\n    }\\n\"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"class\",\"shadow\"],[\"construction card-inverse card-warning\",false]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"text-center\"],[8],[0,\"\\n        \"],[7,\"div\",true],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],[[\"size\"],[2]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[8],[0,\"\\n            \"],[7,\"b\",true],[8],[0,\"Page Under \"],[7,\"br\",true],[8],[9],[0,\"Construction\"],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/coverages/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/dictionary/route", ["exports", "uuid/v4"], function (_exports, _v) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Dictionaries'
      };
      this.columns = [{
        propertyName: 'title',
        title: 'Title'
      }, {
        propertyName: 'subject',
        title: 'Subject'
      }];
    },
    model() {
      //return this.store.peekAll('contact');
      let dicts = this.modelFor('application').findBy('modelName', 'dictionary');
      let rec = this.modelFor('record.show.edit');
      Ember.set(rec, 'json.mdDictionary', Ember.getWithDefault(rec, 'json.mdDictionary', []));
      let selected = rec.get('json.mdDictionary');
      return dicts.map(dict => {
        let json = Ember.get(dict, 'json');
        let id = Ember.get(json, 'dictionaryId');
        let data = Ember.get(json, 'dataDictionary');
        if (!id) {
          Ember.set(json, 'dictionaryId', (0, _v.default)());
          dict.save();
        }
        return Ember.Object.create({
          id: json.dictionaryId,
          title: Ember.get(data, 'citation.title'),
          description: data.description,
          subject: data.subject,
          selected: selected.includes(json.dictionaryId)
        });
      });
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      Ember.defineProperty(this.controller, 'selected', Ember.computed('model', function () {
        return this.model.filterBy('selected');
      }));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.refresh,
        cancelScope: this
      });
    },
    _select(obj) {
      let rec = this.modelFor('record.show.edit');
      let selected = rec.get('json.mdDictionary');
      if (obj.selected) {
        if (selected.indexOf(obj.id) === -1) {
          selected.pushObject(obj.id);
          this.controller.notifyPropertyChange('model');
          return;
        }
      }
      selected.removeObject(obj.id);
      this.controller.notifyPropertyChange('model');
    },
    actions: {
      getColumns() {
        return this.columns;
      },
      select(obj) {
        this._select(obj);
      },
      remove(obj) {
        Ember.set(obj, 'selected', false);
        this._select(obj);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/dictionary/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "crumDzzU",
    "block": "{\"symbols\":[\"item\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[1,[28,\"fa-icon\",[\"book\"],null],false],[0,\" Dictionaries\\n      \"],[7,\"span\",true],[10,\"class\",\"small\"],[8],[0,\"for \"],[7,\"em\",true],[8],[1,[24,[\"parentModel\",\"title\"]],false],[9],[9],[0,\"\\n      \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"shadow\",\"title\",\"spotlightEnabled\"],[true,false,true,\"Select Dictionaries\",false]],{\"statements\":[[0,\"        \"],[1,[28,\"control/md-record-table\",null,[[\"data\",\"dataColumns\",\"select\",\"actionsColumn\",\"selectProperty\",\"selectedItems\"],[[24,[\"model\"]],[28,\"compute\",[[28,\"route-action\",[\"getColumns\"],null]],null],[28,\"route-action\",[\"select\"],null],false,\"selected\",[24,[\"selected\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"shadow\",\"title\",\"class\",\"spotlightEnabled\"],[true,false,true,\"Selected Dictionaries\",\"card-inverse hd-success card-outline-success\",false]],{\"statements\":[[0,\"      \"],[7,\"ul\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"selected\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n          \"],[7,\"h4\",true],[10,\"class\",\"\"],[8],[1,[23,1,[\"title\"]],false],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn btn-danger pull-right\",[28,\"route-action\",[\"remove\",[23,1,[]]],null]]],{\"statements\":[[0,\"              \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Remove\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"],[0,\"          \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal list-group-item-text\"],[8],[0,\"\\n              \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Subject\",[23,1,[\"subject\"]]]]],false],[0,\"\\n              \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Description\",[23,1,[\"description\"]]]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"        \"],[7,\"li\",true],[10,\"class\",\"list-group-item alert alert-info\"],[8],[0,\"\\n          \"],[7,\"h3\",true],[8],[0,\"No Dictionaries selected.\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"No Dictionaries found.\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-success btn-lg\",\"dictionary.new\"]],{\"statements\":[[0,\"            \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Create a Dictionary\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/dictionary/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/distributor/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    // breadCrumb: computed('controller.distributorId', function () {
    //   return {
    //     title: `Distributor ${this.controller.distributorId}`
    //     //title: `${get(this, 'distributionId')}: Distributors`
    //   };
    // }),

    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('distributionId', Ember.get(this.controllerFor('record.show.edit.distribution.distributor'), 'distributionId'));
      this.controller.set('distributorId', Ember.get(this.controllerFor('record.show.edit.distribution.distributor'), 'distributorId'));
    },
    actions: {
      deleteDistributor(id) {
        let model = this.controller.parentModel.get('json.metadata.resourceDistribution')[this.controller.distributionId].distributor;
        model.removeAt(id || parseInt(this.controller.distributorId, 10));
        this.transitionTo('record.show.edit.distribution', {
          queryParams: {
            scrollTo: "distribution-".concat(this.controller.distributionId)
          }
        });
      },
      editTransferOption(id, routeParams, scrollToId) {
        this.setScrollTo(scrollToId);
        this.transitionTo('record.show.edit.distribution.distributor.transfer', this.controller.distributionId, this.controller.distributorId, id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/distributor/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "96lBRIRc",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Distributor #\"],[1,[22,\"distributorId\"],false],[0,\" in \"],[7,\"span\",true],[10,\"class\",\"text-success\"],[8],[0,\"Distribution #\"],[1,[22,\"distributionId\"],false],[9],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\",\"tooltip\",\"tipClass\",\"tipSide\"],[\"btn btn-xs btn-danger\",[28,\"route-action\",[\"deleteDistributor\"],null],\"Delete Distributor?\",\"danger\",\"bottom\"]],{\"statements\":[[0,\"    \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-distributor\",null,[[\"model\",\"distributorId\",\"profilePath\",\"editTransferOption\"],[[24,[\"model\"]],[24,[\"distributorId\"]],\"record.distribution.distributor\",[28,\"route-action\",[\"editTransferOption\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"type\",\"route\"],[\"Back to Distribution List\",\"arrow-left\",\"primary\",\"record.show.edit.distribution\"]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"refresh\",\"scrollInit\",\"setScrollTo\"],[[24,[\"refresh\"]],[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/distribution/distributor/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/distributor/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('distributionId', params.distribution_id);
      this.set('distributorId', params.distributor_id);
      return this.setupModel();
    },
    // breadCrumb: computed('distributionId', function () {
    //   return {
    //     title: this.distributionId
    //     //title: `${get(this, 'distributionId')}: Distributors`
    //   };
    // }),

    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);

      //this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controller.set('distributionId', this.distributionId);
      this.controller.set('distributorId', this.distributorId);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let distributionId = this.distributionId;
      let distributorId = this.distributorId;
      let model = this.modelFor('record.show.edit');
      let objects = model.get('json.metadata.resourceDistribution');
      let distribution = distributionId && Ember.isArray(objects) ? Ember.A(objects).objectAt(distributionId) : undefined;
      let distributor = distribution && distributorId && Ember.isArray(distribution.distributor) ? Ember.A(distribution.distributor).objectAt(distributorId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(distributor)) {
        this.flashMessages.warning('No Distributor object found! Re-directing to Distribution List...');
        this.replaceWith('record.show.edit.distribution');
        return;
      }
      return distributor;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/distributor/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "CKMwC96f",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/distribution/distributor/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/distributor/transfer/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    // breadCrumb: computed('controller.distributorId', function () {
    //   return {
    //     title: `Distributor ${this.controller.distributorId}`
    //     //title: `${get(this, 'distributionId')}: Distributors`
    //   };
    // }),
    model(params) {
      let tparams = this.paramsFor('record.show.edit.distribution.distributor');
      this.set('transferId', params.transfer_id);
      this.set('distributionId', tparams.distribution_id);
      this.set('distributorId', tparams.distributor_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('transferId', this.transferId);
      this.controller.set('distributionId', this.distributionId);
      this.controller.set('distributorId', this.distributorId);
    },
    setupModel() {
      let transferId = this.transferId;
      let distributionId = this.distributionId;
      let distributorId = this.distributorId;
      let model = this.modelFor('record.show.edit');
      let objects = model.get('json.metadata.resourceDistribution');
      let distribution = distributionId && Ember.isArray(objects) ? Ember.A(objects).objectAt(distributionId) : undefined;
      let distributor = distribution && distributorId && Ember.isArray(distribution.distributor) ? Ember.A(distribution.distributor).objectAt(distributorId) : undefined;
      let transfer = distributor && transferId && Ember.isArray(distributor.transferOption) ? Ember.A(distributor.transferOption).objectAt(transferId) : undefined;
      if (Ember.isEmpty(distributor)) {
        this.flashMessages.warning('No Transfer Option object found! Re-directing to Distribution...');
        this.replaceWith('record.show.edit.distribution');
        return;
      }
      if (Ember.isEmpty(transfer)) {
        this.flashMessages.warning('No Transfer Option object found! Re-directing to Distributor...');
        this.replaceWith('record.show.edit.distribution.distributor');
        return;
      }
      return transfer;
    },
    actions: {
      deleteTransfer(id) {
        let model = this.controller.parentModel.get('json.metadata.resourceDistribution')[this.controller.distributionId].distributor[this.controller.distributorId].transferOption;
        model.removeAt(id || parseInt(this.transferId, 0));
        this.transitionTo('record.show.edit.distribution.distributor', {
          queryParams: {
            scrollTo: 'transfer-options'
          }
        });
      },
      backToDistributor() {
        this.transitionTo('record.show.edit.distribution.distributor');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/distributor/transfer/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "1ComTFH0",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Transfer Options for\\n  \"],[7,\"span\",true],[10,\"class\",\"text-success\"],[8],[0,\"Distributor #\"],[1,[22,\"distributorId\"],false],[9],[0,\" in\\n  \"],[7,\"span\",true],[10,\"class\",\"text-primary\"],[8],[0,\"Distribution #\"],[1,[22,\"distributionId\"],false],[9],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\",\"tooltip\",\"tipClass\",\"tipSide\"],[\"btn btn-xs btn-danger\",[28,\"route-action\",[\"deleteTransfer\"],null],\"Delete Transfer Option?\",\"danger\",\"bottom\"]],{\"statements\":[[0,\"    \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-transfer\",null,[[\"model\",\"profilePath\"],[[24,[\"model\"]],\"record.distribution.distributor.transferOption\"]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-buttons\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Back to Distributor\",\"arrow-left\",\"btn-primary btn-lg\",[28,\"route-action\",[\"backToDistributor\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"refresh\",\"scrollInit\",\"setScrollTo\"],[[24,[\"refresh\"]],[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/distribution/distributor/transfer/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/index/route", ["exports", "jquery", "mdeditor/mixins/scroll-to"], function (_exports, _jquery, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      Ember.defineProperty(this.controller, 'refreshSpy', Ember.computed.alias('model.json.metadata.resourceDistribution.length'));
    },
    actions: {
      addDistribution() {
        let dists = this.currentRouteModel().get('json.metadata.resourceDistribution');
        dists.pushObject({});
        (0, _jquery.default)("html, body").animate({
          scrollTop: (0, _jquery.default)(document).height()
        }, "slow");
      },
      editDistributor(id, routeParams, scrollToId) {
        this.setScrollTo(scrollToId);
        this.transitionTo('record.show.edit.distribution.distributor', routeParams, id);
      },
      deleteDistribution(id) {
        let dists = this.currentRouteModel().get('json.metadata.resourceDistribution');
        dists.removeAt(id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "jaDQuTZy",
    "block": "{\"symbols\":[\"dist\",\"index\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Distribution\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"metadata\",\"resourceDistribution\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-distribution\",null,[[\"model\",\"index\",\"profilePath\",\"addDistribution\",\"deleteDistribution\",\"editDistributor\"],[[23,1,[]],[23,2,[]],\"record.distribution\",[28,\"route-action\",[\"addDistribution\"],null],[28,\"route-action\",[\"deleteDistribution\"],null],[28,\"route-action\",[\"editDistributor\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"  \"],[7,\"h3\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"No distribution sections found.\\n    \"],[7,\"button\",false],[12,\"class\",\"btn btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addDistribution\"]],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add Distribution Section\"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-buttons\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Add Distribution\",\"plus\",\"btn-success btn-lg\",[28,\"route-action\",[\"addDistribution\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"refresh\",\"scrollInit\",\"setScrollTo\"],[[24,[\"refreshSpy\"]],[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/distribution/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata');
      Ember.set(model, 'resourceDistribution', Ember.getWithDefault(model, 'resourceDistribution', []));
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/distribution/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "WdPtQaG1",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/distribution/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/citation/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('citationId', Ember.get(this.controllerFor('record.show.edit.documents.citation'), 'citationId'));
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/citation/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "5EM44ZIr",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Additional Document #\"],[1,[22,\"citationId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-documentation\",null,[[\"model\",\"profilePath\"],[[24,[\"model\"]],\"record.documents\"]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Document List\",\"arrow-left\",\"record.show.edit.documents\"]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/documents/citation/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/citation/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    breadCrumb: Ember.computed('citationId', function () {
      return {
        title: Ember.get(this, 'citationId'),
        linkable: true
      };
    }),
    model(params) {
      this.set('citationId', params.citation_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);

      //this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controller.set('citationId', Ember.get(this, 'citationId'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let citationId = Ember.get(this, 'citationId');
      let model = this.modelFor('record.show.edit');
      let objects = model.get('json.metadata.additionalDocumentation');
      let resource = citationId && Ember.isArray(objects) ? Ember.A(objects).objectAt(citationId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(resource)) {
        Ember.get(this, 'flashMessages').warning('No Document object found! Re-directing to list...');
        this.replaceWith('record.show.edit.documents');
        return;
      }
      return resource;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "L6rdQ3nP",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/documents/citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata');
      Ember.set(model, 'additionalDocumentation', Ember.getWithDefault(model, 'additionalDocumentation', []));
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
    },
    actions: {
      editDocument(id) {
        this.transitionTo('record.show.edit.documents.citation', id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "S/p0YLtU",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Additional Documentation\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"items\",\"header\",\"shadow\",\"verticalButtons\",\"buttonText\",\"ellipsis\",\"previewTemplate\",\"editItem\",\"hideIndex\",\"condensed\",\"addSubbar\"],[[24,[\"model\",\"json\",\"metadata\",\"additionalDocumentation\"]],\"Additional Documents\",true,true,\"Add Document\",true,\"object/md-documentation/preview\",[28,\"route-action\",[\"editDocument\"],null],true,true,\"md-subbar-extra\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/documents/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/documents/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Dfnf8gp8",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/documents/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/extent/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController(controller, model) {
      this._super(controller, model);
      Ember.defineProperty(this.controller, 'refreshSpy', Ember.computed.alias('model.json.metadata.resourceInfo.extent.length'));
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/extent/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "iuUx0LsW",
    "block": "{\"symbols\":[\"extent\",\"index\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Extents\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"section\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\",\"extent\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"object/md-extent\",null,[[\"title\",\"extent\",\"index\",\"profilePath\",\"deleteExtent\",\"editFeatures\",\"addExtent\"],[\"Extent\",[23,1,[]],[23,2,[]],\"record.extent\",[28,\"route-action\",[\"deleteExtent\"],null],[28,\"route-action\",[\"editFeatures\"],null],[28,\"route-action\",[\"addExtent\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"    \"],[7,\"h3\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"No Extents found.\\n      \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"route-action\",[\"addExtent\"],null]]],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add Extent\"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Add Extent\",\"plus\",\"btn-lg btn-success\",[28,\"route-action\",[\"addExtent\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"refresh\",\"scrollInit\",\"setScrollTo\"],[[24,[\"refreshSpy\"]],[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/extent/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/extent/route", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model() {
      let model = this.modelFor('record.show.edit');
      let json = model.get('json');
      let info = json.metadata.resourceInfo;
      Ember.set(info, 'extent', Ember.getWithDefault(info, 'extent', Ember.A()));
      Ember.get(info, 'extent').forEach(itm => {
        Ember.set(itm, 'geographicExtent', Ember.getWithDefault(itm, 'geographicExtent', Ember.A()));
        Ember.set(itm, 'geographicExtent.0', Ember.getWithDefault(itm, 'geographicExtent.0', {}));
        Ember.set(itm, 'geographicExtent.0.boundingBox', Ember.getWithDefault(itm, 'geographicExtent.0.boundingBox', {}));
        Ember.set(itm, 'geographicExtent.0.identifier', Ember.getWithDefault(itm, 'geographicExtent.0.identifier', {}));
        Ember.set(itm, 'verticalExtent', Ember.getWithDefault(itm, 'verticalExtent', Ember.A()));
        Ember.set(itm, 'temporalExtent', Ember.getWithDefault(itm, 'temporalExtent', Ember.A()));
      });
      return model;
    },
    actions: {
      addExtent() {
        let extents = this.currentRouteModel().get('json.metadata.resourceInfo.extent');
        extents.pushObject({
          description: null,
          geographicExtent: [{
            description: null,
            containsData: true,
            boundingBox: {},
            geographicElement: Ember.A(),
            identifier: {}
          }],
          verticalExtent: Ember.A(),
          temporalExtent: Ember.A()
        });
        (0, _jquery.default)("html, body").animate({
          scrollTop: (0, _jquery.default)(document).height()
        }, "slow");
      },
      deleteExtent(id) {
        let extents = this.currentRouteModel().get('json.metadata.resourceInfo.extent');
        let extent = extents[id];
        extents.removeObject(extent);
      },
      editFeatures(id) {
        this.transitionTo({
          queryParams: {
            scrollTo: 'extent-' + id
          }
        });
        this.transitionTo('record.show.edit.extent.spatial', id);
      },
      toList() {
        this.transitionTo(this.routeName);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/extent/spatial/route", ["exports", "jquery"], function (_exports, _jquery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('extentId', params.extent_id);
      return this.setupModel();
    },
    setupController: function setupController(controller) {
      // Call _super for default behavior
      this._super(...arguments);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this,
        extentId: this.extentId
      });
      controller.setProperties({
        featureGroup: null,
        extentId: this.extentId
      });
    },
    setupModel() {
      let model = this.modelFor('record.show.edit.extent');
      let extents = model.get('json.metadata.resourceInfo.extent');
      let extent = Ember.get(extents, this.extentId || this.controller.get('extentId'));

      //make sure the extent still exists
      if (Ember.isEmpty(extent)) {
        Ember.get(this, 'flashMessages').warning('No extent found! Re-directing to list...');
        this.replaceWith('record.show.edit.extent');
        return;
      }
      if (!Ember.isArray(extent.geographicExtent[0].geographicElement)) {
        Ember.set(extent, 'geographicExtent.0.geographicElement', Ember.A([]));
      }
      let layers = extent.geographicExtent[0].geographicElement;
      layers.forEach(function (l, idx, arr) {
        arr.replace(idx, 1, [Ember.Object.create(l)]);
      });
      this.set('layers', layers);
      return model;
    },
    actions: {
      getContext() {
        return this;
      },
      handleResize() {
        (0, _jquery.default)('.map-file-picker .leaflet-container').height(((0, _jquery.default)(window).height() - (0, _jquery.default)('#md-navbars').outerHeight() - 15) / 2);
      },
      uploadData() {
        (0, _jquery.default)('.map-file-picker .file-picker__input').click();
      },
      deleteAllFeatures() {
        let features = this.layers;
        let group = this.controller.get('featureGroup');
        if (features.length) {
          features.forEach(item => {
            features.popObject(item);
            group.removeLayer(item._layer);
          });
          if (group._map.drawControl) {
            group._map.drawControl.remove();
          }
          features.clear();
        }
      },
      setFeatureGroup(obj) {
        this.controller.set('featureGroup', obj);
      },
      zoomAll() {
        let layer = this.controller.get('featureGroup');
        let bnds = layer.getBounds();
        let map = layer._map;
        if (bnds.isValid()) {
          map.fitBounds(bnds, {
            maxZoom: 14
          });
          return;
        }
        map.fitWorld();
      },
      exportGeoJSON() {
        let fg = this.controller.get('featureGroup');
        let json = {
          'type': 'FeatureCollection',
          'features': []
        };
        if (fg) {
          let geoGroup = fg.getLayers();
          geoGroup.forEach(l => {
            let layers = l.getLayers();
            layers.forEach(layer => {
              let feature = layer.feature;
              json.features.push({
                'type': 'Feature',
                'id': feature.id,
                'geometry': feature.geometry,
                'properties': feature.properties
              });
            });
          });
          window.saveAs(new Blob([JSON.stringify(json)], {
            type: 'application/json;charset=utf-8'
          }), 'export_features.json');

          // return new Ember.RSVP.Promise((resolve) => {
          //   Ember.run(null, resolve, json);
          // }, 'MD: ExportSpatialData');
        } else {
          Ember.get(this, 'flashMessages').warning('Found no features to export.');
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/extent/spatial/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Pc0M0lEu",
    "block": "{\"symbols\":[],\"statements\":[[7,\"section\",true],[8],[0,\"\\n    \"],[1,[28,\"leaflet-table\",null,[[\"layers\",\"setFeatureGroup\",\"handleResize\"],[[28,\"get\",[[24,[\"model\"]],[28,\"concat\",[\"json.metadata.resourceInfo.extent.\",[24,[\"extentId\"]],\".geographicExtent.0.geographicElement\"],null]],null],[28,\"route-action\",[\"setFeatureGroup\"],null],[28,\"route-action\",[\"handleResize\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-spatial\"],[[\"actionContext\",\"zoomAll\",\"deleteAllFeatures\",\"exportGeoJSON\",\"uploadData\",\"toList\"],[[23,0,[]],[28,\"route-action\",[\"zoomAll\"],null],[28,\"route-action\",[\"deleteAllFeatures\"],null],[28,\"route-action\",[\"exportGeoJSON\"],null],[28,\"route-action\",[\"uploadData\"],null],[28,\"route-action\",[\"toList\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/extent/spatial/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/extent/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "QpVSABqi",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/extent/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/funding/allocation/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    breadCrumb: Ember.computed('allocationId', function () {
      return {
        title: 'Allocation ' + Ember.get(this, 'allocationId'),
        linkable: true
      };
    }),
    model(params) {
      this.set('allocationId', params.allocation_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('allocationId', Ember.get(this, 'allocationId'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let allocationId = Ember.get(this, 'allocationId');
      let model = this.modelFor('record.show.edit');
      let objects = model.get('json.metadata.funding');
      let resource = allocationId && Ember.isArray(objects) ? Ember.A(objects).objectAt(allocationId) : undefined;

      //make sure the allocation exists
      if (Ember.isEmpty(resource)) {
        Ember.get(this, 'flashMessages').warning('No Funding object found! Re-directing to list...');
        this.replaceWith('record.show.edit.funding');
        return;
      }
      return resource;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/funding/allocation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "dBL7v7B7",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Funding Period #\"],[1,[22,\"allocationId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-funding\",null,[[\"model\",\"profilePath\"],[[24,[\"model\"]],\"record.funding.fundingPeriod\"]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Funding List\",\"arrow-left\",\"record.show.edit.funding\"]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/funding/allocation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/funding/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata');
      Ember.set(model, 'funding', Ember.A(Ember.getWithDefault(model, 'funding', [])));
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
    },
    actions: {
      editAllocation(id) {
        this.transitionTo('record.show.edit.funding.allocation', id);
      },
      addAllocation() {
        let funding = this.currentRouteModel().get('json.metadata.funding');
        let allocation = Ember.Object.create({});

        // once(this, () => {

        funding.pushObject(allocation);
        this.setScrollTo("funding-period-".concat(funding.length - 1));
        this.transitionTo('record.show.edit.funding.allocation', funding.length - 1);

        // $("html, body").animate({
        //   scrollTop: $(document).height()
        // }, "slow");
        // });
      },

      deleteAllocation(id) {
        let all = this.currentRouteModel().get('json.metadata.funding');
        all.removeAt(id);
        this.controller.set('refresh', all.get('length'));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/funding/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ikWmMYj+",
    "block": "{\"symbols\":[\"allocation\",\"index\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Funding\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"metadata\",\"funding\"]]],null,{\"statements\":[[4,\"layout/md-object-container\",null,[[\"title\",\"index\",\"editItem\",\"deleteItem\"],[\"Funding Period\",[23,2,[]],[28,\"route-action\",[\"editAllocation\"],null],[28,\"route-action\",[\"deleteAllocation\"],null]]],{\"statements\":[[0,\"    \"],[1,[28,\"object/md-funding/preview\",null,[[\"item\",\"profilePath\"],[[23,1,[]],\"record.funding\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1,2]},{\"statements\":[[0,\"  \"],[7,\"h3\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"No Funding Periods found.\\n    \"],[7,\"button\",false],[12,\"class\",\"btn btn-lg btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"addAllocation\"]],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add Funding Period\"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"clickText\",\"clickIcon\",\"clickType\",\"click\"],[\"Add Funding Period\",\"plus\",\"success\",[28,\"route-action\",[\"addAllocation\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"refresh\",\"scrollInit\",\"setScrollTo\"],[[24,[\"refresh\"]],[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/funding/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/funding/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    actions: {
      deleteAllocation() {},
      editAllocation() {}
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/funding/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "HOAtp6nB",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/funding/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/grid/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/grid/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "hkPsS6w8",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[7,\"style\",true],[10,\"media\",\"screen\"],[8],[0,\"\\n    .construction {\\n        width: 50vh;\\n        min-width:240px;\\n        font-size:5vh;\\n        border: 2vh solid #333333;\\n        margin: 10vh auto;\\n        padding: 3vh;\\n        border-radius: 5vh;\\n    }\\n\"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"class\",\"shadow\"],[\"construction card-inverse card-warning\",false]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"text-center\"],[8],[0,\"\\n        \"],[7,\"div\",true],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],[[\"size\"],[2]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[8],[0,\"\\n            \"],[7,\"b\",true],[8],[0,\"Page Under \"],[7,\"br\",true],[8],[9],[0,\"Construction\"],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/grid/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    redirect(model) {
      this.replaceWith('record.show.edit.main', model);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "PhDK1XQY",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/keywords/index/route", ["exports", "ember-copy", "jquery", "mdeditor/mixins/scroll-to"], function (_exports, _emberCopy, _jquery, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // import { on } from '@ember/object/evented';
  var _default = Ember.Route.extend(_scrollTo.default, {
    keyword: Ember.inject.service(),
    model() {
      let model = this.modelFor('record.show.edit');
      let json = model.get('json');
      let info = json.metadata.resourceInfo;
      Ember.set(info, 'keyword', !info.hasOwnProperty('keyword') ? Ember.A() : Ember.A(info.keyword));

      //check to see if custom list
      info.keyword.forEach(k => {
        Ember.set(k, 'thesaurus', Ember.getWithDefault(k, 'thesaurus', {}));
        Ember.set(k, 'thesaurus.identifier', Ember.getWithDefault(k, 'thesaurus.identifier', [{
          identifier: 'custom'
        }]));
        Ember.set(k, 'thesaurus.date', Ember.getWithDefault(k, 'thesaurus.date', [{}]));
        Ember.set(k, 'thesaurus.onlineResource', Ember.getWithDefault(k, 'thesaurus.onlineResource', [{}]));
      });
      return model;
    },
    actions: {
      getContext() {
        return this;
      },
      addThesaurus() {
        let the = this.currentRouteModel().get('json.metadata.resourceInfo.keyword');
        (0, _jquery.default)("html, body").animate({
          scrollTop: (0, _jquery.default)(document).height()
        }, "slow");
        the.pushObject({
          keyword: [],
          keywordType: 'theme',
          thesaurus: {
            identifier: [{
              identifier: null
            }]
          },
          fullPath: true
        });
        this.controller.set('refresh', the.get('length'));
        this.controller.set('scrollTo', 'thesaurus-' + (the.get('length') - 1));
      },
      deleteThesaurus(id) {
        let the = this.currentRouteModel().get('json.metadata.resourceInfo.keyword');
        the.removeAt(id);
        this.controller.set('refresh', the.get('length'));
      },
      editThesaurus(id) {
        this.transitionTo('record.show.edit.keywords.thesaurus', id);
      },
      selectThesaurus(selected, thesaurus) {
        if (selected) {
          Ember.set(thesaurus, 'thesaurus', (0, _emberCopy.copy)(selected.citation, true));
          if (selected.keywordType) {
            Ember.set(thesaurus, 'keywordType', selected.keywordType);
          }
        } else {
          Ember.set(thesaurus, 'thesaurus.identifier.0.identifier', 'custom');
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/keywords/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "GPBqzQR3",
    "block": "{\"symbols\":[\"thesaurus\",\"index\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Keywords\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n  \"],[7,\"section\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\",\"keyword\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"md-keywords-container md-object-container\"],[11,\"data-spy\",[28,\"concat\",[\"Thesaurus \",[23,2,[]]],null]],[11,\"id\",[28,\"concat\",[\"thesaurus-container-\",[23,2,[]]],null]],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"md-keywords-header\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"thesaurus\",\"identifier\",\"0\",\"identifier\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",true],[10,\"class\",\"md-keywords-collapse inline-block\"],[10,\"data-toggle\",\"collapse\"],[10,\"aria-expanded\",\"true\"],[11,\"href\",[29,[\"#thesaurus-\",[23,2,[]]]]],[11,\"aria-controls\",[29,[\"thesaurus-\",[23,2,[]]]]],[8],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"fa\"],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[7,\"h4\",true],[10,\"class\",\"inline-block text-primary\"],[10,\"code\",\"\"],[8],[0,\"\\n            \"],[7,\"strong\",true],[8],[1,[28,\"concat\",[\"Thesaurus #\",[23,2,[]]],null],false],[9],[0,\"\\n          \"],[9],[0,\"\\n          \"],[1,[28,\"input/md-select-thesaurus\",null,[[\"class\",\"thesaurus\",\"selectThesaurus\",\"value\",\"disabled\"],[\"md-keywords-select\",[23,1,[]],[28,\"route-action\",[\"selectThesaurus\"],null],[23,1,[\"thesaurus\",\"identifier\",\"0\",\"identifier\"]],[23,1,[\"keyword\",\"length\"]]]]],false],[0,\"\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\"],[\"btn btn-sm btn-danger\",[28,\"route-action\",[\"deleteThesaurus\",[23,2,[]]],null]]],{\"statements\":[[0,\"            \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[11,\"id\",[29,[\"thesaurus-\",[23,2,[]]]]],[10,\"class\",\"md-keywords-body collapse in\"],[8],[0,\"\\n\\n\"],[4,\"with\",[[23,1,[\"thesaurus\",\"identifier\",\"0\",\"identifier\"]]],null,{\"statements\":[[0,\"          \"],[7,\"hr\",true],[8],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"md-keywords-thesaurus col-md-6 col-lg-7\"],[8],[0,\"\\n              \"],[1,[28,\"object/md-keyword-citation\",null,[[\"model\",\"profilePath\"],[[23,1,[]],\"record.keywords.citation\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"md-keywords-list col-md-6 col-lg-5\"],[8],[0,\"\\n              \"],[1,[28,\"object/md-keyword-list\",null,[[\"model\",\"listId\",\"profilePath\",\"addKeyword\",\"deleteKeyword\",\"editThesaurus\"],[[23,1,[]],[23,2,[]],\"record.keywords\",[28,\"route-action\",[\"addKeyword\"],null],[28,\"route-action\",[\"deleteKeyword\"],null],[28,\"route-action\",[\"editThesaurus\"],null]]]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"          \"],[7,\"h3\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"No keywords found.\\n            \"],[7,\"button\",false],[12,\"class\",\"btn btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"route-action\",[\"addThesaurus\"],null]]],[8],[0,\"\\n              \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add Thesaurus\"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\\n  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Add Thesaurus\",\"plus\",\"btn-lg btn-success\",[28,\"route-action\",[\"addThesaurus\"],null]]]]]]],false],[0,\"\\n\\n  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"refresh\",\"scrollInit\",\"setScrollTo\"],[[24,[\"refresh\"]],[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/keywords/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/keywords/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    actions: {
      addKeyword(model, obj) {
        let k = obj ? obj : {};
        model.pushObject(k);
      },
      deleteKeyword(model, obj) {
        if (typeof obj === 'number') {
          model.removeAt(obj);
        } else {
          model.removeObject(obj);
        }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/keywords/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "nCJ791tv",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/keywords/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/keywords/thesaurus/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    keyword: Ember.inject.service(),
    model(params) {
      this.set('thesaurusId', params.thesaurus_id);
      return this.setupModel();
    },
    setupModel() {
      let thesaurusId = Ember.get(this, 'thesaurusId') || this.controller.get('thesaurusId');
      let model = this.modelFor('record.show.edit.keywords');
      let thesaurus = model.get('json.metadata.resourceInfo.keyword').get(thesaurusId);

      //make sure the thesaurus still exists
      if (Ember.isEmpty(thesaurus)) {
        Ember.get(this, 'flashMessages').warning('No thesaurus found! Re-directing to list...');
        this.replaceWith('record.show.edit.keywords');
        return;
      }
      if (!Ember.isArray(thesaurus.keyword)) {
        Ember.set(thesaurus, 'keyword', Ember.A());
      }
      return Ember.Object.create({
        id: thesaurusId,
        keywords: thesaurus,
        model: model,
        path: "json.metadata.resourceInfo.keyword.".concat(thesaurusId),
        thesaurus: this.keyword.findById(thesaurus.thesaurus.identifier[0].identifier)
      });
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this,
        thesaurusId: this.thesaurusId
      });
    },
    actions: {
      selectKeyword(node, path) {
        let model = this.currentRouteModel();
        let keywords = model.get('model').get(model.get('path'));
        let kw = keywords.keyword;
        let target = kw.findBy('identifier', node.uuid);
        if (node.isSelected && target === undefined) {
          let pathStr = '';
          if (Ember.isArray(path)) {
            pathStr = path.reduce(function (prev, item) {
              prev = prev ? "".concat(prev, " > ").concat(item.label) : item.label;
              return prev;
            }, '');
          }
          kw.pushObject({
            identifier: node.uuid,
            keyword: keywords.fullPath && pathStr ? pathStr : node.label,
            path: pathStr.split(' > ').slice(0, pathStr.length - 1)
          });
        } else {
          kw.removeObject(target);
        }
      },
      removeKeyword() {
        this.send('deleteKeyword', ...arguments);
      },
      changeFullPath(evt) {
        let model = this.currentRouteModel();
        let keywords = model.get('model').get(model.get('path'));
        let kw = Ember.get(keywords, 'keyword');
        let val = evt.target.checked;
        Ember.set(keywords, 'fullPath', val);
        kw.forEach(function (curr) {
          if (val) {
            Ember.set(curr, 'keyword', curr.path.join(' > '));
          } else {
            let words = curr.keyword.split(' > ');
            Ember.set(curr, 'keyword', words[words.length - 1]);
          }
        });
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/keywords/thesaurus/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "0gTdqVmm",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"lead\"],[8],[0,\"Editing Thesaurus #\"],[1,[24,[\"model\",\"id\"]],false],[0,\"\\n  \"],[7,\"small\",true],[10,\"class\",\"text-muted\"],[8],[1,[24,[\"model\",\"thesaurus\",\"citation\",\"title\"]],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-tabs\"],[10,\"role\",\"tablist\"],[8],[0,\"\\n      \"],[7,\"li\",true],[10,\"role\",\"presentation\"],[10,\"class\",\"active\"],[8],[0,\"\\n        \"],[7,\"a\",true],[10,\"href\",\"#md-keyword-tree\"],[10,\"aria-controls\",\"md-keyword-tree\"],[10,\"role\",\"tab\"],[10,\"data-toggle\",\"tab\"],[8],[0,\"Tree\"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"li\",true],[10,\"role\",\"presentation\"],[8],[0,\"\\n        \"],[7,\"a\",true],[10,\"href\",\"#md-keyword-search\"],[10,\"aria-controls\",\"md-keyword-search\"],[10,\"role\",\"tab\"],[10,\"data-toggle\",\"tab\"],[8],[0,\"Search\"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"tab-content\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"role\",\"tabpanel\"],[10,\"class\",\"md-keyword-tree tab-pane fade in active\"],[10,\"id\",\"md-keyword-tree\"],[8],[0,\"\\n        \"],[1,[28,\"tree-view\",null,[[\"model\",\"selected\",\"select\",\"disableCheck\"],[[24,[\"model\",\"thesaurus\",\"keywords\"]],[28,\"get\",[[24,[\"model\",\"model\"]],[28,\"concat\",[[24,[\"model\",\"path\"]],\".keyword\"],null]],null],[28,\"route-action\",[\"selectKeyword\"],null],true]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"role\",\"tabpanel\"],[10,\"class\",\"tab-pane fade\"],[10,\"id\",\"md-keyword-search\"],[8],[0,\"\\n        \"],[1,[28,\"tree-search\",null,[[\"model\",\"selected\",\"select\"],[[24,[\"model\",\"thesaurus\",\"keywords\"]],[28,\"get\",[[24,[\"model\",\"model\"]],[28,\"concat\",[[24,[\"model\",\"path\"]],\".keyword\"],null]],null],[28,\"route-action\",[\"selectKeyword\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"col-md-6\"],[8],[0,\"\\n    \"],[7,\"div\",true],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"inline-block\"],[8],[0,\"Selected Keywords\"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"checkbox pull-right\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[7,\"input\",true],[10,\"name\",\"fullPath\"],[11,\"checked\",[24,[\"model\",\"keywords\",\"fullPath\"]]],[11,\"onChange\",[28,\"route-action\",[\"changeFullPath\"],null]],[10,\"type\",\"checkbox\"],[8],[9],[0,\"\\n            Full Path\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[1,[28,\"object/md-keyword-list\",null,[[\"model\",\"deleteKeyword\",\"editThesaurus\"],[[28,\"get\",[[24,[\"model\",\"model\"]],[24,[\"model\",\"path\"]]],null],[28,\"route-action\",[\"removeKeyword\"],null],false]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"type\",\"route\"],[\"Back to List\",\"list\",\"primary\",\"record.show.edit.keywords\"]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/keywords/thesaurus/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata');
      Ember.set(model, 'resourceLineage', Ember.getWithDefault(model, 'resourceLineage', []));
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
    },
    actions: {
      editLineage(id) {
        this.transitionTo('record.show.edit.lineage.lineageobject', id);
      } //,
      // templateClass() {
      //   return Ember.Object.extend({
      //     init() {
      //       this._super(...arguments);
      //       //this.set('authority', {});
      //     }
      //   });
      // }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "hDtJQWnY",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Lineage\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-objectroute-table\",null,[[\"items\",\"header\",\"shadow\",\"buttonText\",\"ellipsis\",\"previewTemplate\",\"profilePath\",\"editItem\",\"hideIndex\",\"condensed\",\"verticalButtons\",\"addSubbar\"],[[24,[\"model\",\"json\",\"metadata\",\"resourceLineage\"]],\"Lineage\",true,\"Add Lineage Object\",false,\"object/md-lineage/preview\",\"record.lineage\",[28,\"route-action\",[\"editLineage\"],null],true,true,true,\"md-subbar-extra\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/citation/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model(params) {
      this.set('identifierId', params.identifier_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let identifierId = this.identifierId;
      let model = this.modelFor('record.show.edit.lineage.lineageobject.citation');
      let identifiers = Ember.get(model, 'identifier');
      let identifier = identifierId && Ember.isArray(identifiers) ? identifiers.get(identifierId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(identifier)) {
        this.flashMessages.warning('No identifier found! Re-directing to Citation...');
        this.replaceWith('record.show.edit.lineage.lineageobject.citation');
        return;
      }
      return identifier;
    },
    actions: {
      goBack() {
        this.transitionTo('record.show.edit.lineage.lineageobject.citation');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/citation/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "oHY1nuhQ",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Alternate Identifier: \"],[1,[24,[\"model\",\"identifier\"]],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[28,\"compute\",[[28,\"route-action\",[\"parentModel\"],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"model\",\"profilePath\",\"data-spy\"],[[24,[\"model\"]],\"record.lineage.citation.identifier\",\"Identifier\"]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Lineage Citation\",\"arrow-left\",[28,\"route-action\",[\"goBack\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/citation/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/citation/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    actions: {
      editIdentifier(index) {
        this.transitionTo('record.show.edit.lineage.lineageobject.citation.identifier', index).then(function () {
          this.setScrollTo('identifier');
        }.bind(this));
      },
      goBack() {
        this.transitionTo('record.show.edit.lineage.lineageobject');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/citation/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "QAZc7a2S",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"Editing Citation\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[28,\"compute\",[[28,\"route-action\",[\"parentModel\"],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"profilePath\",\"editIdentifier\"],[[23,1,[]],\"record.lineage.citation\",[28,\"route-action\",[\"editIdentifier\"],null]]]],false],[0,\"\\n      \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Lineage Object\",\"arrow-left\",[28,\"route-action\",[\"goBack\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/citation/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/citation/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('citationId', params.citation_id);
      this.set('lineageId', this.paramsFor('record.show.edit.lineage.lineageobject').lineage_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let citationId = this.citationId;
      let lineageId = this.lineageId;
      let model = this.modelFor('record.show.edit');
      let citations = model.get('json.metadata.resourceLineage.' + lineageId + '.citation');
      let citation = citationId && Ember.isArray(citations) ? citations.get(citationId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(citation)) {
        this.flashMessages.warning('No citation found! Re-directing...');
        this.replaceWith('record.show.edit.lineage.lineageobject');
        return;
      }
      return citation;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "GVjR9a+c",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controller.set('lineageId', Ember.get(this.controllerFor('record.show.edit.lineage.lineageobject'), 'lineageId'));
    },
    actions: {
      editCitation(index) {
        this.transitionTo('record.show.edit.lineage.lineageobject.citation', index).then(function () {
          this.setScrollTo('citation');
        }.bind(this));
      },
      editSource(index) {
        this.transitionTo('record.show.edit.lineage.lineageobject.source', index).then(function () {
          this.setScrollTo('source');
        }.bind(this));
      },
      editProcessStep(index) {
        this.transitionTo('record.show.edit.lineage.lineageobject.step', index).then(function () {
          this.setScrollTo('process-step');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "UTL1+dqQ",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Lineage #\"],[1,[22,\"lineageId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-lineage\",null,[[\"model\",\"profilePath\",\"ellipsis\",\"editCitation\",\"editProcessStep\",\"editSource\"],[[24,[\"model\"]],\"record.lineage\",true,[28,\"route-action\",[\"editCitation\"],null],[28,\"route-action\",[\"editProcessStep\"],null],[28,\"route-action\",[\"editSource\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Lineage List\",\"arrow-left\",\"record.show.edit.lineage\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    breadCrumb: Ember.computed('lineageId', function () {
      return {
        title: Ember.get(this, 'lineageId'),
        linkable: true
      };
    }),
    model(params) {
      this.set('lineageId', params.lineage_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);

      //this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controller.set('lineageId', Ember.get(this, 'lineageId'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let lineageId = Ember.get(this, 'lineageId');
      let model = this.modelFor('record.show.edit');
      let objects = model.get('json.metadata.resourceLineage');
      let lineage = lineageId && Ember.isArray(objects) ? objects.get(lineageId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(lineage)) {
        Ember.get(this, 'flashMessages').warning('No lineage object found! Re-directing to list...');
        this.replaceWith('record.show.edit.lineage');
        return;
      }
      return lineage;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/source/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController(controller) {
      // Call _super for default behavior
      this._super(...arguments);
      let sourceId = this.paramsFor('record.show.edit.lineage.lineageobject.source').source_id;
      controller.set('parentModel', this.modelFor('record.show.edit'));
      controller.set('sourceId', sourceId);
    },
    actions: {
      goBack() {
        this.transitionTo('record.show.edit.lineage.lineageobject');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/source/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "U5htDSDy",
    "block": "{\"symbols\":[\"source\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"Editing Source #\"],[1,[22,\"sourceId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[28,\"compute\",[[28,\"route-action\",[\"parentModel\"],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-source\",null,[[\"model\",\"profilePath\"],[[23,1,[]],\"record.lineage.source\"]]],false],[0,\"\\n      \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Lineage Object\",\"arrow-left\",[28,\"route-action\",[\"goBack\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/source/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/source/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('sourceId', params.source_id);
      this.set('lineageId', this.paramsFor('record.show.edit.lineage.lineageobject').lineage_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let sourceId = this.sourceId;
      let lineageId = this.lineageId;
      let model = this.modelFor('record.show.edit');
      let sources = model.get('json.metadata.resourceLineage.' + lineageId + '.source');
      let source = sourceId && Ember.isArray(sources) ? sources.get(sourceId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(source)) {
        this.flashMessages.warning('No source found! Re-directing...');
        this.replaceWith('record.show.edit.lineage.lineageobject');
        return;
      }
      return source;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/source/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ngZLewNh",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/source/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/step/citation/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model(params) {
      this.set('citationId', params.citation_id);
      this.set('stepId', this.paramsFor('record.show.edit.lineage.lineageobject.step').step_id);
      this.set('lineageId', this.paramsFor('record.show.edit.lineage.lineageobject').lineage_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('stepId', this.stepId);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let citationId = this.citationId;
      let lineageId = this.lineageId;
      let stepId = this.stepId;
      let model = this.modelFor('record.show.edit');
      let citations = model.get("json.metadata.resourceLineage.".concat(lineageId, ".processStep.").concat(stepId, ".reference"));
      let citation = citationId && Ember.isArray(citations) ? citations.get(citationId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(citation)) {
        this.flashMessages.warning('No citation found! Re-directing...');
        this.replaceWith('record.show.edit.lineage.lineageobject.step');
        return;
      }
      return citation;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      },
      goBack() {
        this.transitionTo('record.show.edit.lineage.lineageobject.step');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/step/citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "XspLguG7",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"Editing Step #\"],[1,[22,\"stepId\"],false],[0,\" Citation\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[28,\"compute\",[[28,\"route-action\",[\"parentModel\"],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-citation\",null,[[\"model\",\"profilePath\",\"simpleIdentifier\"],[[23,1,[]],\"record.lineage.processStep.reference\",true]]],false],[0,\"\\n      \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[[28,\"concat\",[\"Back to Step #\",[24,[\"stepId\"]]],null],\"arrow-left\",[28,\"route-action\",[\"goBack\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/step/citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/step/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controller.set('stepId', Ember.get(this.controllerFor('record.show.edit.lineage.lineageobject.step'), 'stepId'));
    },
    actions: {
      editCitation(index) {
        this.transitionTo('record.show.edit.lineage.lineageobject.step.citation', index).then(function () {
          this.setScrollTo('citation');
        }.bind(this));
      },
      goBack() {
        this.transitionTo('record.show.edit.lineage.lineageobject');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/step/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Zz6QsnQl",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Process Step #\"],[1,[22,\"stepId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-process-step\",null,[[\"model\",\"profilePath\",\"itemId\",\"editCitation\"],[[24,[\"model\"]],\"record.lineage.processStep\",[24,[\"stepId\"]],[28,\"route-action\",[\"editCitation\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Lineage\",\"arrow-left\",[28,\"route-action\",[\"goBack\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/step/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/step/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('stepId', params.step_id);
      this.set('lineageId', this.paramsFor('record.show.edit.lineage.lineageobject').lineage_id);
      return this.setupModel();
    },
    breadCrumb: Ember.computed('stepId', function () {
      return {
        title: 'Step ' + Ember.get(this, 'stepId'),
        linkable: true
      };
    }),
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('stepId', Ember.get(this, 'stepId'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let stepId = Ember.get(this, 'stepId');
      let lineageId = Ember.get(this, 'lineageId');
      let model = this.modelFor('record.show.edit');
      let steps = model.get('json.metadata.resourceLineage.' + lineageId + '.processStep');
      let step = stepId && Ember.isArray(steps) ? steps.get(stepId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(step)) {
        Ember.get(this, 'flashMessages').warning('No Process Step found! Re-directing...');
        this.replaceWith('record.show.edit.lineage.lineageobject');
        return;
      }
      return step;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/step/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "TigrFh//",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/step/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/lineageobject/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "W1IgBrBO",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/lineageobject/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/lineage/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "uj4DbzLV",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/lineage/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/citation/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model(params) {
      this.set('identifierId', params.identifier_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let identifierId = this.identifierId;
      let model = this.modelFor('record.show.edit.main');
      let identifiers = model.get('json.metadata.resourceInfo.citation.identifier');
      let identifier = identifierId && Ember.isArray(identifiers) ? identifiers.get(identifierId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(identifier)) {
        this.flashMessages.warning('No identifier found! Re-directing to citation...');
        this.replaceWith('record.show.edit.main.citation');
        return;
      }
      return identifier;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/citation/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "W6Ak2+5/",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1 section-header\"],[8],[0,\"\\n  Editing Identifier: \"],[1,[24,[\"model\",\"identifier\"]],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"class\",\"model\",\"profilePath\",\"data-spy\"],[\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\",[24,[\"model\"]],\"record.main.citation.identifier\",\"Identifier\"]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Citation\",\"arrow-left\",\"record.show.edit.main.citation\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/main/citation/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/citation/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    // afterModel() {
    //   this.setupModel();
    // },
    //
    // setupController: function () {
    //   // Call _super for default behavior
    //   this._super(...arguments);
    //
    //   this.controllerFor('record.show.edit')
    //     .setProperties({
    //       onCancel: this.setupModel
    //     });
    // },
    //
    // setupModel() {
    //   // let model = this.currentRouteModel();
    //   // let citation = get(model, 'json.metadata.resourceInfo.citation');
    //   //
    //   // set(citation, 'responsibleParty', getWithDefault(citation,
    //   //   'responsibleParty', []));
    //   // set(citation, 'presentationForm', getWithDefault(citation,
    //   //   'presentationForm', []));
    //   // set(citation, 'onlineResource', getWithDefault(citation,
    //   //   'onlineResource', []));
    //   // set(citation, 'identifier', getWithDefault(citation, 'identifier', []));
    //   // set(citation, 'graphic', getWithDefault(citation, 'graphic', []));
    //   // set(citation, 'series', getWithDefault(citation, 'series', {}));
    // },

    actions: {
      editIdentifier(index) {
        this.transitionTo('record.show.edit.main.citation.identifier', index).then(function () {
          this.setScrollTo('identifier');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/citation/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Vd5RkqUS",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1 section-header\"],[8],[0,\"Editing Citation\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\",\"citation\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-citation\",null,[[\"class\",\"model\",\"profilePath\",\"editIdentifier\"],[\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\",[23,1,[]],\"record.main.citation\",[28,\"route-action\",[\"editIdentifier\"],null]]]],false],[0,\"\\n      \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Main\",\"arrow-left\",\"record.show.edit.main\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/main/citation/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/citation/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/citation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "cNNDO3XC",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"liquid-outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/main/citation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/index/route", ["exports", "mdeditor/mixins/scroll-to", "mdeditor/pods/components/object/md-citation/component"], function (_exports, _scrollTo, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata.resourceInfo');
      Ember.set(model, 'timePeriod', Ember.getWithDefault(model, 'timePeriod', {}));
      Ember.set(model, 'defaultResourceLocale', Ember.getWithDefault(model, 'defaultResourceLocale', {}));
      Ember.set(model, 'pointOfContact', Ember.getWithDefault(model, 'pointOfContact', []));
      Ember.set(model, 'status', Ember.getWithDefault(model, 'status', []));
      Ember.set(model, 'citation', Ember.getWithDefault(model, 'citation', (0, _component.formatCitation)({})));
      Ember.set(model, 'credit', Ember.getWithDefault(model, 'credit', []));
      Ember.set(model, 'resourceType', Ember.getWithDefault(model, 'resourceType', []));
      Ember.set(model, 'resourceMaintenance', Ember.getWithDefault(model, 'resourceMaintenance', []));
      Ember.set(model, 'graphicOverview', Ember.getWithDefault(model, 'graphicOverview', []));
    },
    setupController(controller, model) {
      this._super(controller, model);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: () => this,
        cancelScope: this
      });
    },
    actions: {
      editCitation(scrollTo) {
        this.transitionTo('record.show.edit.main.citation').then(function () {
          this.setScrollTo(scrollTo);
        }.bind(this));
      },
      editId() {
        this.transitionTo('record.show.edit.metadata.identifier', {
          queryParams: {
            scrollTo: 'identifier'
          }
        });
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ucgs4dqv",
    "block": "{\"symbols\":[\"resource\",\"credit\",\"editing\"],\"statements\":[[4,\"with\",[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\"]]],null,{\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"form\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n        Editing \"],[7,\"em\",true],[8],[1,[24,[\"model\",\"title\"]],false],[9],[0,\"\\n        \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\",\"required\"],[\"Basic Information\",true,false,\"record.main.basicInformation\",\"Basic Information\",true]],{\"statements\":[[0,\"\\n\"],[4,\"layout/md-wrap\",null,[[\"data-spy\",\"class\",\"profilePath\"],[\"Record ID\",\"md-embedded\",\"record.main.basicInformation.recordId\"]],{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n          \"],[7,\"label\",true],[10,\"class\",\"required\"],[8],[0,\"Record ID\"],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"input-group input-group-md\"],[8],[0,\"\\n            \"],[1,[28,\"input/md-input\",null,[[\"valuePath\",\"model\",\"placeholder\",\"disabled\"],[\"recordId\",[24,[\"model\"]],\"Assigned Record ID\",true]]],false],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"input-group-btn\"],[8],[0,\"\\n                \"],[7,\"button\",false],[12,\"class\",\"btn btn-warning\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"route-action\",[\"editId\"],null]]],[8],[0,\"\\n                  \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\"\\n                  Edit\"],[9],[0,\"\\n                  \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"tooltipClass\"],[\"Edit the metadata id\",\"ember-tooltip md-tooltip warning\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n        \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\",\"label\",\"required\",\"profilePath\",\"data-spy\",\"class\"],[[24,[\"model\",\"title\"]],\"Enter the title for the resource.\",\"Title\",true,\"record.main.basicInformation.title\",\"Title\",\"md-embedded\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[28,\"is-array\",[[23,1,[\"status\"]]],null]],null,{\"statements\":[[0,\"        \"],[1,[28,\"input/md-codelist-multi\",null,[[\"value\",\"label\",\"required\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"placeholder\",\"profilePath\",\"data-spy\",\"class\"],[[23,1,[\"status\"]],\"Status\",true,true,true,false,\"progress\",\"Select the current status\",\"record.main.basicInformation.status\",\"Status\",\"md-embedded\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"shadow\",\"data-spy\",\"required\",\"profilePath\"],[\"Default Locale\",false,false,true,\"record.main.basicInformation.defaultLocale\"]],{\"statements\":[[0,\"          \"],[1,[28,\"object/md-locale\",null,[[\"model\",\"profilePath\"],[[23,1,[\"defaultResourceLocale\"]],\"record.main.basicInformation.defaultLocale\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[28,\"is-array\",[[23,1,[\"resourceType\"]]],null]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n            \"],[1,[28,\"object/md-resource-type-array\",null,[[\"plain\",\"value\",\"required\",\"errorMessage\",\"data-spy\",\"profilePath\"],[false,[23,1,[\"resourceType\"]],true,\"At least one Resource Type is required.\",\"Resource Types\",\"record.main.resourceType\"]]],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[28,\"is-array\",[[23,1,[\"pointOfContact\"]]],null]],null,{\"statements\":[[0,\"        \"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"pluralTitle\",\"data-spy\",\"collapsible\",\"collapsed\",\"required\",\"value\",\"profilePath\",\"tipPath\",\"tipModel\"],[\"Point Of Contact\",\"Points of Contact\",\"Point Of Contact\",true,false,true,[23,1,[\"pointOfContact\"]],\"record.main.pointOfContact\",\"json.metadata.resourceInfo.pointOfContact\",[24,[\"model\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n        \"],[1,[28,\"object/md-citation/preview\",null,[[\"profilePath\",\"citation\",\"muted\",\"required\",\"editCitation\"],[\"record.main.citation\",[23,1,[\"citation\"]],true,true,[28,\"route-action\",[\"editCitation\"],null]]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"required\"],[\"Description\",true,false,\"record.main.description\",true]],{\"statements\":[[0,\"          \"],[1,[28,\"input/md-markdown-area\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\",\"required\"],[[23,1,[\"abstract\"]],\"record.main.description.abstract\",\"Abstract\",\"Enter an Abstract describing the resource.\",true]]],false],[0,\"\\n\\n          \"],[1,[28,\"input/md-markdown-area\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\",\"maxlength\"],[[23,1,[\"shortAbstract\"]],\"record.main.description.shortAbstract\",\"Short Abstract\",\"A short description of the resource. Max of 300 characters.\",300]]],false],[0,\"\\n\\n          \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\"],[[23,1,[\"purpose\"]],\"record.main.purpose\",\"Purpose\",\"Enter text describing the reason for creating the resource.\"]]],false],[0,\"\\n\\n          \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\"],[[23,1,[\"supplementalInfo\"]],\"record.main.supplementalInfo\",\"Supplemental Information\",\"Enter text describing other descriptive information about the resource.\"]]],false],[0,\"\\n\\n          \"],[1,[28,\"input/md-textarea\",null,[[\"value\",\"profilePath\",\"label\",\"placeholder\"],[[23,1,[\"environmentDescription\"]],\"record.main.environmentDescription\",\"Environment Description\",\"Description of the processing environment, for example the software, hardware, or the computer operating system.\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[23,1,[\"timePeriod\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"object/md-time-period\",null,[[\"model\",\"profilePath\",\"data-spy\",\"label\"],[[23,1,[\"timePeriod\"]],\"record.main.timePeriod\",\"Time Period\",\"Time Period\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"object/md-object-table\",null,[[\"items\",\"header\",\"data-spy\",\"profilePath\",\"buttonText\",\"ellipsis\",\"attributes\",\"collapsible\"],[[23,1,[\"resourceMaintenance\"]],\"Maintenance\",\"Maintenance\",\"record.main.maintenance\",\"Add Maintenance\",true,\"frequency\",true]],{\"statements\":[[0,\"          \"],[1,[28,\"object/md-maintenance\",null,[[\"model\",\"profilePath\"],[[23,3,[]],\"record.main.maintenance\"]]],false],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"\\n\"],[4,\"if\",[[28,\"is-array\",[[23,1,[\"graphicOverview\"]]],null]],null,{\"statements\":[[0,\"        \"],[1,[28,\"object/md-graphic-array\",null,[[\"model\",\"data-spy\",\"button-text\",\"label\",\"profilePath\"],[[23,1,[\"graphicOverview\"]],\"Graphic Overview\",\"Add Graphic\",\"Graphic Overview\",\"record.main.graphicOverview\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[28,\"is-array\",[[23,1,[\"credit\"]]],null]],null,{\"statements\":[[4,\"object/md-simple-array-table\",null,[[\"data-spy\",\"title\",\"profilePath\",\"value\"],[\"Credit\",\"Credit\",\"record.main.credit\",[23,1,[\"credit\"]]]],{\"statements\":[[0,\"            \"],[7,\"td\",true],[8],[0,\"\\n                \"],[1,[28,\"input/md-input\",null,[[\"value\",\"placeholder\"],[[23,2,[\"item\",\"value\"]],\"Additional credits for the resource.\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\",\"refresh\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null],[24,[\"model\",\"profile\"]]]]]]]],false]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/main/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/main/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "vJyRTbSn",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/main/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/alternate/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model(params) {
      this.set('identifierId', params.identifier_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let identifierId = this.identifierId;
      let model = this.modelFor('record.show.edit.metadata.alternate');
      let identifiers = Ember.get(model, 'identifier');
      let identifier = identifierId && Ember.isArray(identifiers) ? identifiers.get(identifierId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(identifier)) {
        this.flashMessages.warning('No identifier found! Re-directing to Alternate Metadata...');
        this.replaceWith('record.show.edit.metadata.alternate');
        return;
      }
      return identifier;
    },
    actions: {
      goBack() {
        this.transitionTo('record.show.edit.metadata.alternate');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/alternate/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "FgIsiKhC",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1 section-header\"],[8],[0,\"\\n  Editing Alternate Identifier: \"],[1,[24,[\"model\",\"identifier\"]],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[28,\"compute\",[[28,\"route-action\",[\"parentModel\"],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"class\",\"model\",\"profilePath\",\"data-spy\"],[\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\",[24,[\"model\"]],\"record.metadata.alternateMetadataReference.identifier\",\"Identifier\"]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"click\"],[\"Back to Alternate\",\"arrow-left\",[28,\"route-action\",[\"goBack\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/alternate/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/alternate/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    actions: {
      editIdentifier(index) {
        this.transitionTo('record.show.edit.metadata.alternate.identifier', index).then(function () {
          this.setScrollTo('identifier');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/alternate/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Fkxjn5Q7",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1 section-header\"],[8],[0,\"Editing Alternate Metadata Reference\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[28,\"compute\",[[28,\"route-action\",[\"parentModel\"],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-citation\",null,[[\"class\",\"model\",\"profilePath\",\"editIdentifier\"],[\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\",[23,1,[]],\"record.metadata.alternateMetadataReference\",[28,\"route-action\",[\"editIdentifier\"],null]]]],false],[0,\"\\n      \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Metadata\",\"arrow-left\",\"record.show.edit.metadata\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/alternate/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/alternate/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('citationId', params.citation_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let citationId = this.citationId;
      let model = this.modelFor('record.show.edit');
      let citations = model.get('json.metadata.metadataInfo.alternateMetadataReference');
      let citation = citationId && Ember.isArray(citations) ? citations.get(citationId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(citation)) {
        this.flashMessages.warning('No citation found! Re-directing...');
        this.replaceWith('record.show.edit.metadata');
        return;
      }
      return citation;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/alternate/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "VlXQQyrC",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/alternate/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model() {
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let model = this.modelFor('record.show.edit');

      //make sure the identifier exists
      model.set('json.metadata.metadataInfo.metadataIdentifier', Ember.getWithDefault(model, 'json.metadata.metadataInfo.metadataIdentifier', {}));
      return Ember.get(model, 'json.metadata.metadataInfo.metadataIdentifier');
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "idLqfgYR",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1 section-header\"],[8],[0,\"\\n  Editing Metadata Identifier: \"],[1,[24,[\"model\",\"identifier\"]],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"class\",\"model\",\"profilePath\",\"confirmIdentifier\",\"data-spy\"],[\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\",[24,[\"model\"]],\"record.metadata.metadataIdentifier\",true,\"Metadata Identifier\"]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Metadata\",\"arrow-left\",\"record.show.edit.metadata\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata.metadataInfo');
      Ember.run.once(this, () => {
        Ember.set(model, 'metadataContact', Ember.getWithDefault(model, 'metadataContact', []));
        Ember.set(model, 'metadataDate', Ember.getWithDefault(model, 'metadataDate', []));
        Ember.set(model, 'metadataMaintenance', Ember.getWithDefault(model, 'metadataMaintenance', {}));
        Ember.set(model, 'metadataOnlineResource', Ember.getWithDefault(model, 'metadataOnlineResource', []));
        Ember.set(model, 'defaultMetadataLocale', Ember.getWithDefault(model, 'defaultMetadataLocale', {}));
        Ember.set(model, 'metadataIdentifier', Ember.getWithDefault(model, 'metadataIdentifier', {}));
        Ember.set(model, 'parentMetadata', Ember.getWithDefault(model, 'parentMetadata', {}));
        Ember.set(model, 'alternateMetadataReference', Ember.getWithDefault(model, 'alternateMetadataReference', []));
        Ember.set(m, 'json.metadataRepository', Ember.getWithDefault(m, 'json.metadataRepository', []));
      });
    },
    setupController(controller, model) {
      this._super(controller, model);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: () => this,
        cancelScope: this
      });
    },
    actions: {
      editIdentifier() {
        this.transitionTo('record.show.edit.metadata.identifier').then(function () {
          this.setScrollTo('metadata-identifier');
        }.bind(this));
      },
      editAlternate(index) {
        this.transitionTo('record.show.edit.metadata.alternate.index', index).then(function () {
          this.setScrollTo('alternate-metadata');
        }.bind(this));
      },
      editParent() {
        this.transitionTo('record.show.edit.metadata.parent').then(function () {
          this.setScrollTo('parent-metadata');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "cWKhpTKd",
    "block": "{\"symbols\":[\"metadata\",\"identifier\"],\"statements\":[[4,\"with\",[[24,[\"model\",\"json\",\"metadata\",\"metadataInfo\"]]],null,{\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"form\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n      Editing Metadata Information\\n      \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"data-spy\"],[\"Basic Information\",true,false,\"record.metadata.basicInformation\",\"Basic Information\"]],{\"statements\":[[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"label\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"placeholder\",\"profilePath\",\"data-spy\",\"class\"],[[23,1,[\"metadataStatus\"]],\"Metadata Status\",true,true,false,\"progress\",\"Select the current status\",\"record.metadata.basicInformation.metadataStatus\",false,\"md-embedded\"]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"profilePath\",\"data-spy\",\"shadow\",\"class\"],[\"record.metadata.basicInformation.metadataDates\",false,false,\"md-embedded\"]],{\"statements\":[[0,\"        \"],[1,[28,\"object/md-date-array\",null,[[\"value\",\"plain\",\"data-spy\",\"profilePath\"],[[23,1,[\"metadataDate\"]],true,false,\"record.metadata.basicInformation.metadataDates\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"object/md-party-array\",null,[[\"title\",\"data-spy\",\"collapsible\",\"collapsed\",\"required\",\"value\",\"profilePath\"],[\"Metadata Contact\",\"Metadata Contacts\",true,false,true,[23,1,[\"metadataContact\"]],\"record.metadata.metadataContacts\"]]],false],[0,\"\\n\\n\"],[4,\"with\",[[24,[\"model\",\"json\",\"metadata\",\"metadataInfo\",\"metadataIdentifier\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"profilePath\",\"required\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\"],[\"Metadata Identifier\",true,false,\"record.metadata.metadataIdentifier\",false,\"Edit\",\"success\",[28,\"route-action\",[\"editIdentifier\"],null],\"pencil\"]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n        \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal\"],[8],[0,\"\\n          \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Identifier\",[23,2,[\"identifier\"]]]]],false],[0,\"\\n\"],[0,\"          \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Namespace\",[23,2,[\"namespace\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[2]},null],[0,\"\\n    \"],[1,[28,\"object/md-citation/preview\",null,[[\"profilePath\",\"citation\",\"title\",\"muted\",\"editCitation\"],[\"record.metadata.parentMetadata\",[23,1,[\"parentMetadata\"]],\"Parent Metadata\",true,[28,\"route-action\",[\"editParent\"],null]]]],false],[0,\"\\n\\n    \"],[1,[28,\"object/md-repository-array\",null,[[\"value\",\"data-spy\",\"profilePath\"],[[24,[\"model\",\"json\",\"metadataRepository\"]],\"Metadata Repository\",\"record.metadata.repositories\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"object/md-online-resource-array\",null,[[\"model\",\"profilePath\",\"data-spy\"],[[23,1,[\"metadataOnlineResource\"]],\"record.metadata.onlineResource\",\"Online Resources\"]]],false],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"content\",\"profilePath\"],[\"Metadata Maintenance\",true,[23,1,[\"metadataMaintenance\"]],\"record.metadata.maintenance\"]],{\"statements\":[[0,\"      \"],[1,[28,\"object/md-maintenance\",null,[[\"model\",\"profilePath\"],[[23,1,[\"metadataMaintenance\"]],\"record.metadata.maintenance\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"shadow\",\"data-spy\",\"profilePath\",\"collapsible\",\"content\"],[\"Default Metadata Locale\",true,\"Default Locale\",\"record.metadata.defaultLocale\",true,[23,1,[\"defaultMetadataLocale\"]]]],{\"statements\":[[0,\"      \"],[1,[28,\"object/md-locale\",null,[[\"model\",\"profilePath\"],[[23,1,[\"defaultMetadataLocale\"]],\"record.metadata.defaultLocale\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"object/md-citation-array\",null,[[\"model\",\"profilePath\",\"data-spy\",\"editItem\",\"label\"],[[23,1,[\"alternateMetadataReference\"]],\"record.metadata.alternateMetadataReference\",\"Alternate Metadata\",[28,\"route-action\",[\"editAlternate\"],null],\"Alternate Metadata Reference\"]]],false],[0,\"\\n\\n    \"],[1,[22,\"outlet\"],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/parent/identifier/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model(params) {
      this.set('identifierId', params.identifier_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let identifierId = this.identifierId;
      let model = this.modelFor('record.show.edit');
      let identifiers = model.get('json.metadata.metadataInfo.parentMetadata.identifier');
      let identifier = identifierId && Ember.isArray(identifiers) ? identifiers.get(identifierId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(identifier)) {
        this.flashMessages.warning('No identifier found! Re-directing to Parent Metadata...');
        this.replaceWith('record.show.edit.metadata.parent.index');
        return;
      }
      return identifier;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/parent/identifier/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "Av2ERMuZ",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1 section-header\"],[8],[0,\"\\n  Editing Identifier: \"],[1,[24,[\"model\",\"identifier\"]],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[28,\"object/md-identifier\",null,[[\"class\",\"model\",\"profilePath\",\"data-spy\"],[\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\",[24,[\"model\"]],\"record.metadata.parentMetadata.identifier\",\"Identifier\"]]],false],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Parent Metadata\",\"arrow-left\",\"record.show.edit.metadata.parent\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/parent/identifier/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/parent/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    afterModel(model) {
      this._super(...arguments);
      if (Ember.isNone(Ember.get(model, 'json.metadata.metadataInfo.parentMetadata'))) {
        this.flashMessages.warning('No Parent Citation found! Re-directing to Metadata...');
        this.replaceWith('record.show.edit.metadata', {
          queryParams: {
            scrollTo: 'parent-metadata'
          }
        });
      }
      return model;
    },
    actions: {
      editIdentifier(index) {
        this.transitionTo('record.show.edit.metadata.parent.identifier', index).then(function () {
          this.setScrollTo('identifier');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/parent/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ydZ+zLOB",
    "block": "{\"symbols\":[\"citation\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1 section-header\"],[8],[0,\"Editing Parent Metadata Citation\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"with\",[[24,[\"model\",\"json\",\"metadata\",\"metadataInfo\",\"parentMetadata\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-citation\",null,[[\"class\",\"model\",\"profilePath\",\"editIdentifier\"],[\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\",[23,1,[]],\"record.metadata.parentMetadata\",[28,\"route-action\",[\"editIdentifier\"],null]]]],false],[0,\"\\n      \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Metadata\",\"arrow-left\",\"record.show.edit.metadata\"]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/parent/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/parent/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/parent/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "lTFZGjeG",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/parent/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/metadata/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "i9TYK8HP",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/metadata/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/route", ["exports", "mdeditor/mixins/hash-poll", "mdeditor/mixins/cancel"], function (_exports, _hashPoll, _cancel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_hashPoll.default, _cancel.default, {
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        title: 'Edit',
        linkable: false
      };
    },
    /**
     * The profile service
     * @property profile
     * @return {Ember.Service} profile
     */
    profile: Ember.inject.service('custom-profile'),
    /**
     * The route activate hook, sets the profile.
     */
    afterModel(model) {
      this._super(...arguments);
      this.profile.set('active', model.get('profile'));
    },
    actions: {
      saveRecord: function saveRecord() {
        let model = this.currentRouteModel();
        model.save().then(() => {
          this.flashMessages.success("Saved Record: ".concat(model.get('title')));
        });
      },
      cancelRecord: function cancelRecord() {
        let model = this.currentRouteModel();
        let message = "Cancelled changes to Record: ".concat(model.get('title'));
        if (this.get('settings.data.autoSave')) {
          let json = model.get('jsonRevert');
          if (json) {
            model.set('json', JSON.parse(json));
            this.doCancel();
            this.flashMessages.warning(message);
          }
          return;
        }
        model.reload().then(() => {
          this.doCancel();
          this.flashMessages.warning(message);
        });
      },
      getContext() {
        return this;
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "POgbx/T/",
    "block": "{\"symbols\":[\"resourceInfo\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Spatial Information\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"with\",[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-spatial-info\",null,[[\"model\",\"profilePath\",\"parentModel\"],[[23,1,[]],\"record.spatial\",[24,[\"model\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/spatial/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/raster/attribute/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model(params) {
      let rparams = this.paramsFor('record.show.edit.spatial.raster');
      this.set('attrGroupId', params.attrgroup_id);
      this.set('attributeId', params.attribute_id);
      this.set('rasterId', rparams.raster_id);
      return this.setupModel();
    },
    // breadCrumb: computed('distributionId', function () {
    //   return {
    //     title: this.distributionId
    //     //title: `${get(this, 'distributionId')}: Distributors`
    //   };
    // }),

    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('attrGroupId', this.attrGroupId);
      this.controller.set('attributeId', this.attributeId);
      this.controller.set('rasterId', this.rasterId);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let rasterId = this.rasterId;
      let attrGroupId = this.attrGroupId;
      let attributeId = this.attributeId;
      let model = this.modelFor('record.show.edit');
      let rasters = model.get('json.metadata.resourceInfo.coverageDescription');
      let raster = rasterId && Ember.isArray(rasters) ? Ember.A(rasters).objectAt(rasterId) : undefined;
      let attrGroup = raster && attrGroupId && Ember.isArray(raster.attributeGroup) ? Ember.A(raster.attributeGroup).objectAt(attrGroupId) : undefined;
      let attribute = attrGroup && attributeId && Ember.isArray(attrGroup.attribute) ? Ember.A(attrGroup.attribute).objectAt(attributeId) : undefined;
      //make sure the identifier exists
      if (Ember.isEmpty(attribute)) {
        this.flashMessages.warning('No Attributes found! Re-directing to Attribute Groups...');
        this.replaceWith('record.show.edit.spatial.raster');
        return;
      }
      return attribute;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      },
      deleteAttribute(id) {
        let model = this.controller.parentModel.get('json.metadata.resourceInfo.coverageDescription')[this.controller.rasterId].attributeGroup[this.controller.attrGroupId].attribute;
        model.removeAt(id || parseInt(this.attributeId, 0));
        this.transitionTo('record.show.edit.spatial.raster', {
          queryParams: {
            scrollTo: this.controller.attrGroupId
          }
        });
      },
      backToAttrGroup() {
        this.transitionTo('record.show.edit.spatial.raster');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/raster/attribute/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "t6ToIu5a",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Attribute #\"],[1,[22,\"attributeId\"],false],[0,\" in\\n  \"],[7,\"span\",true],[10,\"class\",\"text-success\"],[8],[0,\"Attribute Group #\"],[1,[22,\"attrGroupId\"],false],[9],[0,\" in\\n  \"],[7,\"span\",true],[10,\"class\",\"text-primary\"],[8],[0,\"Raster Description #\"],[1,[22,\"rasterId\"],false],[9],[0,\"\\n\\n\"],[4,\"control/md-button-confirm\",null,[[\"class\",\"onConfirm\",\"tooltip\",\"tipClass\",\"tipSide\"],[\"btn btn-xs btn-danger\",[28,\"route-action\",[\"deleteAttribute\"],null],\"Delete Attribute?\",\"danger\",\"bottom\"]],{\"statements\":[[0,\"    \"],[1,[28,\"fa-icon\",[\"times\"],null],false],[0,\" Delete\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-raster/attrgroup/attribute\",null,[[\"model\",\"profilePath\"],[[24,[\"model\"]],\"record.spatial.coverageDescription.attributeGroup.attribute\"]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-buttons\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Back to Attribute Group\",\"arrow-left\",\"btn-primary btn-lg\",[28,\"route-action\",[\"backToAttrGroup\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"refresh\",\"scrollInit\",\"setScrollTo\"],[[24,[\"refresh\"]],[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/spatial/raster/attribute/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/raster/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('rasterId', Ember.get(this.controllerFor('record.show.edit.spatial.raster'), 'rasterId'));
      Ember.defineProperty(this.controller, 'refreshSpy', Ember.computed.alias('model.json.metadata.resourceInfo.coverageDescription.length'));
    },
    actions: {
      editAttribute(id, routeParams, scrollToId) {
        this.setScrollTo(scrollToId);
        this.transitionTo('record.show.edit.spatial.raster.attribute', this.controller.rasterId, routeParams, id);
      },
      deleteAttrGroup(id) {
        let group = this.currentRouteModel()['attributeGroup'];
        group.removeAt(id);
      },
      addAttrGroup() {
        let group = this.currentRouteModel()['attributeGroup'];
        group.pushObject([]);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/raster/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "AU46hxzM",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Raster Description #\"],[1,[22,\"rasterId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-raster\",null,[[\"model\",\"editAttribute\",\"deleteAttrGroup\",\"addAttrGroup\",\"profilePath\"],[[24,[\"model\"]],[28,\"route-action\",[\"editAttribute\"],null],[28,\"route-action\",[\"deleteAttrGroup\"],null],[28,\"route-action\",[\"addAttrGroup\"],null],\"record.spatial.coverageDescription\"]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/subbar-link\"],[[\"text\",\"icon\",\"route\"],[\"Back to Spatial Information\",\"arrow-left\",\"record.show.edit.spatial\"]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\",\"refresh\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null],[24,[\"refresh\"]]]]]]]],false]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/spatial/raster/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/raster/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('rasterId', params.raster_id);
      return this.setupModel();
    },
    breadCrumb: Ember.computed('rasterId', function () {
      return {
        title: 'RASTER ' + this.rasterId,
        linkable: true
      };
    }),
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('rasterId', this.rasterId);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let rasterId = this.rasterId;
      let model = this.modelFor('record.show.edit');
      let rasters = model.get('json.metadata.resourceInfo.coverageDescription');
      let raster = rasterId && Ember.isArray(rasters) ? rasters.get(rasterId) : undefined;

      //make sure the raster exists
      if (Ember.isEmpty(raster)) {
        this.flashMessages.warning('No Raster Description found! Re-directing...');
        this.replaceWith('record.show.edit.spatial');
        return;
      }
      return raster;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/raster/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "s1NcqEbj",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/spatial/raster/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/spatial/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "2lFGY+wW",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/spatial/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('collectionId', Ember.get(this.controllerFor('record.show.edit.taxonomy.collection'), 'collectionId'));
    },
    actions: {
      toList() {
        this.transitionTo('record.show.edit.taxonomy');
      },
      addTaxa() {
        this.controller.model.taxonomicClassification.pushObject({
          _edit: true
        });
      },
      addITIS() {
        this.transitionTo('record.show.edit.taxonomy.collection.itis');
      },
      editSystem(index) {
        this.transitionTo('record.show.edit.taxonomy.collection.system', index).then(function () {
          this.setScrollTo('system');
        }.bind(this));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ZumqXaVW",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Taxonomy Collection #\"],[1,[22,\"collectionId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"object/md-taxonomy/collection\",null,[[\"model\",\"id\",\"profilePath\",\"editSystem\"],[[24,[\"model\"]],[24,[\"collectionId\"]],\"record.taxonomy.collection\",[28,\"route-action\",[\"editSystem\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-buttons\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Add New Taxa\",\"plus\",\"btn-info btn-lg\",[28,\"route-action\",[\"addTaxa\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-buttons\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Add Taxa from ITIS\",\"plus\",\"btn-success btn-lg\",[28,\"route-action\",[\"addITIS\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-buttons\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Back to List\",\"arrow-left\",\"btn-primary btn-lg\",[28,\"route-action\",[\"toList\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/taxonomy/collection/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/itis/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      this.breadCrumb = {
        "title": "ITIS"
      };
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controller.set('collectionId', Ember.get(this.controllerFor('record.show.edit.taxonomy.collection'), 'collectionId'));
    },
    actions: {
      toCollection() {
        this.transitionTo('record.show.edit.taxonomy.collection');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/itis/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "iMoSS8Hu",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Add Taxa from ITIS\"],[7,\"small\",true],[8],[0,\" Taxonomy Collection #\"],[1,[22,\"collectionId\"],false],[9],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"control/md-itis\",null,[[\"taxonomy\"],[[24,[\"model\"]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Back to Collection\",\"arrow-left\",\"btn-primary btn-lg\",[28,\"route-action\",[\"toCollection\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/taxonomy/collection/itis/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('collectionId', params.collection_id);
      return this.setupModel();
    },
    breadCrumb: Ember.computed('collectionId', function () {
      let index = this.collectionId;
      return {
        title: "Collection ".concat(index > 0 ? index : '')
        //title: `${get(this, 'collectionId')}: Distributors`
      };
    }),

    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);

      //this.controller.set('parentModel', this.modelFor('record.show.edit.main'));
      this.controller.set('collectionId', this.collectionId);
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let collectionId = this.collectionId;
      let model = this.modelFor('record.show.edit');
      let objects = model.get('json.metadata.resourceInfo.taxonomy');
      let resource = collectionId && Ember.isArray(objects) ? Ember.A(objects).objectAt(collectionId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(resource)) {
        this.flashMessages.warning('No Collection object found! Re-directing to list...');
        this.replaceWith('record.show.edit.taxonomy');
        return;
      }
      return resource;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/system/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    setupController: function setupController(controller) {
      // Call _super for default behavior
      this._super(...arguments);
      let systemId = this.paramsFor('record.show.edit.taxonomy.collection.system').system_id;
      controller.set('parentModel', this.modelFor('record.show.edit'));
      controller.set('systemId', systemId);
    },
    actions: {
      goBack() {
        this.transitionTo('record.show.edit.taxonomy.collection');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/system/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "m4k2SCYo",
    "block": "{\"symbols\":[\"system\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"Editing Taxonomic System #\"],[1,[22,\"systemId\"],false],[0,\"\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[28,\"compute\",[[28,\"route-action\",[\"parentModel\"],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"with\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"\"],[8],[0,\"\\n      \"],[1,[28,\"object/md-taxonomy/collection/system\",null,[[\"model\",\"profilePath\"],[[23,1,[]],\"record.taxonomy.collection.taxonomicSystem\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Back to Collection\",\"arrow-left\",\"btn-primary btn-lg\",[28,\"route-action\",[\"goBack\"],null]]]]]]],false],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/taxonomy/collection/system/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/system/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model(params) {
      this.set('systemId', params.system_id);
      this.set('collectionId', this.paramsFor('record.show.edit.taxonomy.collection').collection_id);
      return this.setupModel();
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
      this.controllerFor('record.show.edit').setProperties({
        onCancel: this.setupModel,
        cancelScope: this
      });
    },
    setupModel() {
      let systemId = this.systemId;
      let collectionId = this.collectionId;
      let model = this.modelFor('record.show.edit');
      let systems = model.get('json.metadata.resourceInfo.taxonomy.' + collectionId + '.taxonomicSystem');
      let system = systemId && Ember.isArray(systems) ? systems.get(systemId) : undefined;

      //make sure the identifier exists
      if (Ember.isEmpty(system)) {
        this.flashMessages.warning('No Taxonomic System found! Re-directing...');
        this.replaceWith('record.show.edit.taxonomy.collection');
        return;
      }
      return system;
    },
    actions: {
      parentModel() {
        return this.modelFor('record.show.edit');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/system/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "tnjHTr+0",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/taxonomy/collection/system/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/collection/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "DP7Gzb0G",
    "block": "{\"symbols\":[],\"statements\":[[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/taxonomy/collection/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/index/route", ["exports", "jquery", "mdeditor/mixins/scroll-to"], function (_exports, _jquery, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    afterModel(m) {
      this._super(...arguments);
      let model = Ember.get(m, 'json.metadata.resourceInfo');
      Ember.set(model, 'taxonomy', Ember.getWithDefault(model, 'taxonomy', []));
    },
    setupController: function setupController() {
      // Call _super for default behavior
      this._super(...arguments);
      this.controller.set('parentModel', this.modelFor('record.show.edit'));
    },
    actions: {
      editCollection(id) {
        this.setScrollTo("collection-".concat(id));
        this.transitionTo('record.show.edit.taxonomy.collection.index', id);
      },
      addCollection() {
        let taxa = this.currentRouteModel().get('json.metadata.resourceInfo.taxonomy');
        let collection = Ember.Object.create({});

        // once(this, () => {

        taxa.pushObject(collection);
        this.setScrollTo("collection-".concat(taxa.length - 1));
        this.transitionTo('record.show.edit.taxonomy.collection.index', taxa.length - 1);
        (0, _jquery.default)("html, body").animate({
          scrollTop: (0, _jquery.default)(document).height()
        }, "slow");
        // });
      },

      deleteCollection(id) {
        let taxa = this.currentRouteModel().get('json.metadata.resourceInfo.taxonomy');
        taxa.removeAt(id);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ZwtEoxbj",
    "block": "{\"symbols\":[\"collection\",\"index\"],\"statements\":[[7,\"h4\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  Editing Taxonomy\\n  \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"parentModel\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\",\"taxonomy\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"object/md-taxonomy\",null,[[\"model\",\"index\",\"scrollTo\",\"record\"],[[23,1,[]],[23,2,[]],[24,[\"scrollTo\"]],[24,[\"model\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1,2]},{\"statements\":[[0,\"  \"],[7,\"h3\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"No taxonomic collections found.\\n    \"],[7,\"button\",false],[12,\"class\",\"btn btn-success\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[28,\"route-action\",[\"addCollection\"],null]]],[8],[0,\"\\n      \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Add Collection\"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-extra\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Add Collection\",\"plus\",\"btn-success btn-lg\",[28,\"route-action\",[\"addCollection\"],null]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-record-edit\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\",\"refresh\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null],[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\",\"taxonomy\",\"length\"]]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/taxonomy/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/taxonomy/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "2SMkKdsf",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n    \"],[1,[28,\"liquid-outlet\",null,[[\"class\"],[\"liquid-spy\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/taxonomy/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/edit/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "dcj4FDDe",
    "block": "{\"symbols\":[\"spy\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row md-section-secondary\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-record-content col-sm-10\"],[8],[0,\"\\n    \"],[1,[22,\"liquid-outlet\"],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-2 hidden-print\"],[8],[0,\"\\n      \"],[1,[28,\"control/md-crud-buttons\",null,[[\"model\",\"doSave\",\"doCancel\",\"doDelete\",\"doCopy\"],[[24,[\"model\"]],[28,\"route-action\",[\"saveRecord\"],null],[28,\"route-action\",[\"cancelRecord\"],null],[28,\"route-action\",[\"destroyRecord\"],null],[28,\"route-action\",[\"copyRecord\"],null]]]],false],[0,\"\\n\"],[0,\"      \"],[7,\"hr\",true],[8],[9],[0,\"\\n      \"],[1,[28,\"from-elsewhere\",null,[[\"name\"],[\"md-subbar-extra\"]]],false],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"btn-group-vertical center-block\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Action Button Controls\"],[8],[0,\"\\n        \"],[1,[28,\"multiple-from-elsewhere\",null,[[\"name\"],[\"md-subbar-buttons\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"from-elsewhere\",null,[[\"name\"],[\"md-scroll-spy-record-edit\"]],{\"statements\":[[0,\"          \"],[1,[28,\"component\",[[23,1,[]]],[[\"offset\"],[145]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"record-nav\",[28,\"component\",[\"input/md-select-profile\"],[[\"value\",\"record\"],[[24,[\"model\",\"profile\"]],[24,[\"model\"]]]]]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"nav-secondary\",[28,\"component\",[\"layout/md-nav-secondary\"],[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/edit/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/index/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  /* global L */
  var _default = Ember.Route.extend(_scrollTo.default, {
    actions: {
      linkTo(route) {
        this.transitionTo(route);
      },
      setupMap(features, m) {
        let map = m.target;
        let bounds = L.geoJson(features).getBounds();
        map.fitBounds(bounds);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "EZcbOzOd",
    "block": "{\"symbols\":[\"resource\",\"extent\",\"index\",\"l\",\"type\"],\"statements\":[[4,\"with\",[[24,[\"model\",\"json\",\"metadata\",\"resourceInfo\"]]],null,{\"statements\":[[7,\"div\",true],[10,\"class\",\"row md-no-spotlight\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-sm-9 col-md-offset-1\"],[8],[0,\"\\n        \"],[7,\"h3\",true],[8],[0,\"\\n        \"],[1,[28,\"fa-icon\",[[24,[\"model\",\"icon\"]]],[[\"class\"],[\"text-muted\"]]],false],[0,\"\\n        Viewing Record: \"],[1,[24,[\"model\",\"title\"]],false],[0,\"\\n        \"],[1,[28,\"control/md-status\",null,[[\"model\"],[[24,[\"model\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\",\"collapsible\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\"],[false,true,\"Main\",false,true,\"Edit\",\"success\",[28,\"route-action\",[\"linkTo\",\"record.show.edit.main\"],null],\"pencil\"]],{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n            \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-xxl-8\"],[8],[0,\"\\n                \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Record Id\",[24,[\"model\",\"recordId\"]]]]],false],[0,\"\\n                \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Record Title\",[24,[\"model\",\"title\"]]]]],false],[0,\"\\n                \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Status\",[28,\"if\",[[23,1,[\"status\"]],[28,\"join\",[\", \",[23,1,[\"status\"]]],null]],null]]]],false],[0,\"\\n                \"],[1,[28,\"control/md-definition\",null,[[\"title\",\"text\"],[\"Contact Instructions\",[24,[\"model\",\"json\",\"contactInstructions\"]]]]],false],[0,\"\\n\\n            \"],[9],[0,\"\\n            \"],[7,\"dl\",true],[10,\"class\",\"dl-horizontal col-xxl-4\"],[8],[0,\"\\n\"],[4,\"control/md-definition\",null,[[\"title\"],[\"Resource Type(s)\"]],{\"statements\":[[4,\"each\",[[23,1,[\"resourceType\"]]],null,{\"statements\":[[0,\"                        \"],[1,[23,5,[\"type\"]],false],[0,\":\\n\"],[4,\"if\",[[23,5,[\"name\"]]],null,{\"statements\":[[0,\"                            \"],[1,[23,5,[\"name\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                            \"],[7,\"em\",true],[8],[0,\"Not named\"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                        \"],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[5]},{\"statements\":[[0,\"                            \"],[7,\"em\",true],[10,\"class\",\"text-muted\"],[8],[0,\"No types assigned!\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"col-xs-12\"],[8],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"plain\"],[false,true,true]],{\"statements\":[[0,\"                \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"text-info col-xs-6 col-sm-3\"],[8],[0,\"Default Resource Locale\"],[9],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"col-xs-6 col-sm-3\"],[8],[0,\"\\n                    \"],[7,\"label\",true],[10,\"class\",\"text-nowrap\"],[8],[0,\"Character Set:\"],[9],[0,\"\\n                    \"],[7,\"span\",true],[10,\"class\",\"text-nowrap\"],[8],[1,[23,1,[\"defaultResourceLocale\",\"characterSet\"]],false],[9],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"col-xs-6 col-sm-3\"],[8],[0,\"\\n                    \"],[7,\"label\",true],[8],[0,\"Country:\"],[9],[0,\"\\n                    \"],[7,\"span\",true],[10,\"class\",\"text-nowrap\"],[8],[1,[23,1,[\"defaultResourceLocale\",\"country\"]],false],[9],[0,\"\\n                  \"],[9],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"col-xs-6 col-sm-3\"],[8],[0,\"\\n                    \"],[7,\"label\",true],[8],[0,\"Language:\"],[9],[0,\"\\n                    \"],[7,\"span\",true],[8],[1,[23,1,[\"defaultResourceLocale\",\"language\"]],false],[9],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"collapsible\",\"scroll\",\"maximizable\",\"class\"],[false,true,\"Abstract\",true,true,true,\"md-embedded\"]],{\"statements\":[[0,\"              \"],[1,[28,\"md-markdown\",[[23,1,[\"abstract\"]],\"Abstract not provided!\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"collapsible\",\"scroll\",\"class\"],[false,true,\"Short Abstract\",true,false,\"md-embedded\"]],{\"statements\":[[0,\"              \"],[1,[28,\"md-markdown\",[[23,1,[\"shortAbstract\"]],\"Short Abstract not provided!\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"shadow\",\"muted\",\"title\",\"bodyIsRow\",\"collapsible\",\"btnText\",\"btnClass\",\"btnAction\",\"btnIcon\"],[false,true,\"Geographic Extent\",false,true,\"Edit\",\"success\",[28,\"route-action\",[\"linkTo\",\"record.show.edit.extent\"],null],\"pencil\"]],{\"statements\":[[0,\"\\n        \"],[7,\"section\",true],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"extent\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"row md-extent-container\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"col-sm-12\"],[8],[0,\"\\n                \"],[7,\"h4\",true],[10,\"class\",\"text-info\"],[8],[0,\"\\n                  Geographic Extent #\"],[1,[23,3,[]],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"col-sm-6\"],[8],[0,\"\\n                \"],[7,\"label\",true],[10,\"class\",\"\"],[8],[0,\"\\n                  Description\\n                \"],[9],[0,\"\\n                \"],[7,\"p\",true],[8],[0,\"\\n                  \"],[1,[28,\"get-property\",[[23,2,[]],\"description\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"col-sm-6 md-extent-map\"],[8],[0,\"\\n\"],[4,\"if\",[[23,2,[\"geographicExtent\",\"0\",\"geographicElement\",\"length\"]]],null,{\"statements\":[[4,\"leaflet-map\",null,[[\"lat\",\"lng\",\"zoom\",\"maxZoom\",\"onLoad\"],[0,0,2,18,[28,\"route-action\",[\"setupMap\",[23,2,[\"geographicExtent\",\"0\",\"geographicElement\"]]],null]]],{\"statements\":[[4,\"layer-group\",null,[[\"name\",\"baselayer\",\"default\"],[\"Terrain\",true,true]],{\"statements\":[[0,\"                      \"],[1,[28,\"tile-layer\",null,[[\"url\",\"attribution\"],[\"//stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png\",[24,[\"mapAttribution\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"feature-group\",null,[[\"name\",\"default\"],[\"Features\",true]],{\"statements\":[[4,\"each\",[[23,2,[\"geographicExtent\",\"0\",\"geographicElement\"]]],null,{\"statements\":[[0,\"                        \"],[1,[28,\"geojson-layer\",null,[[\"geoJSON\"],[[23,4,[]]]]],false],[0,\"\\n\"]],\"parameters\":[4]},null]],\"parameters\":[]},null],[0,\"\\n                    \"],[1,[22,\"layer-control\"],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"                  \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n                    No Features to display.\\n                  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[2,3]},{\"statements\":[[0,\"            \"],[7,\"h3\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"No geographic extents found.\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\\n\"]],\"parameters\":[]},null],[0,\"\\n        \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-2 hidden-print no-nav\"],[8],[0,\"\\n\"],[4,\"control/md-crud-buttons\",null,[[\"model\",\"allowCopy\",\"allowDelete\",\"doDelete\",\"doCopy\"],[[24,[\"model\"]],true,true,[28,\"route-action\",[\"destroyRecord\"],null],[28,\"route-action\",[\"copyRecord\"],null]]],{\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-lg btn-success\",\"record.show.edit\",[24,[\"model\",\"id\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[0,\" Edit\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[7,\"hr\",true],[8],[9],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-lg btn-primary btn-block\",\"records\"]],{\"statements\":[[0,\"      \"],[1,[28,\"fa-icon\",[\"list\"],null],false],[0,\" Show List\"]],\"parameters\":[]},null],[0,\"\\n\\n      \"],[1,[28,\"control/md-scroll-spy\",null,[[\"scrollInit\",\"setScrollTo\",\"refresh\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null],[24,[\"model\",\"profile\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/nav/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "ZmUVbhZt",
    "block": "{\"symbols\":[],\"statements\":[[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"record.show.translate\"]],{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"fa fa-retweet\"],[8],[9],[0,\"\\n    \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Translate\"],[9],[0,\" \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Translate\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"li\",true],[8],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"form\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\"],[\"publish\"]],{\"statements\":[[0,\"        \"],[7,\"span\",true],[10,\"class\",\"fa fa-share-square-o\"],[8],[9],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"md-nav-text\"],[8],[0,\"Publish\"],[9],[0,\" \"],[1,[28,\"ember-tooltip\",null,[[\"text\",\"side\",\"tooltipClass\"],[\"Publish\",\"bottom\",\"ember-tooltip md-nav-tip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/nav/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/route", ["exports", "ember-copy"], function (_exports, _emberCopy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    //breadCrumb: {},
    afterModel(model) {
      const name = model.get('title');
      const crumb = {
        title: name
      };
      this.set('breadCrumb', crumb);
    },
    model(params) {
      return this.store.peekRecord('record', params.record_id);
    },
    actions: {
      destroyRecord: function destroyRecord() {
        let model = this.currentRouteModel();
        model.destroyRecord().then(() => {
          this.flashMessages.success("Deleted Record: ".concat(model.get('title')));
          this.replaceWith('records');
        });
      },
      copyRecord: function copyRecord() {
        this.flashMessages.success("Copied Record: ".concat(this.currentRouteModel().get('title')));
        this.transitionTo('record.new.id', (0, _emberCopy.copy)(this.currentRouteModel()));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "T/liy54J",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"nav-main\",[28,\"component\",[\"layout/nav/record/nav-main\"],[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/translate/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    setupController(controller, model) {
      this._super(controller, model);
      controller.setProperties({
        writer: controller.writer || null,
        forceValid: controller.forceValid || false,
        showAllTags: controller.showAllTags || false
      });
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/show/translate/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "tyb/+45X",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-xxl-11 col-xxxl-10 col-xxl-offset-1\"],[8],[0,\"\\n      \"],[7,\"h3\",true],[8],[0,\"Translate Record\"],[9],[0,\"\\n        \"],[1,[28,\"md-translate\",null,[[\"model\",\"store\",\"writer\",\"forceValid\",\"showAllTags\"],[[24,[\"model\"]],[24,[\"store\"]],[24,[\"writer\"]],[24,[\"forceValid\"]],[24,[\"showAllTags\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/show/translate/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/record/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "8Vyz1Sm/",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/record/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/records/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const columns = [{
    propertyName: 'title',
    title: 'Title'
  }, {
    propertyName: 'defaultType',
    title: 'Resource Type',
    filterWithSelect: true
  }, {
    propertyName: 'recordId',
    title: 'ID'
  }];
  var _default = Ember.Route.extend({
    slider: Ember.inject.service(),
    model() {
      //return this.store.peekAll('contact');
      return this.modelFor('application').findBy('modelName', 'record');
    },
    columns: columns,
    actions: {
      getColumns() {
        return this.columns;
      },
      showSlider(rec, evt) {
        let slider = this.slider;
        evt.stopPropagation();
        this.controller.set('errorTarget', rec);
        slider.set('fromName', 'md-slider-error');
        slider.toggleSlider(true);
        return false;
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/records/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "X9x4wYeG",
    "block": "{\"symbols\":[],\"statements\":[[7,\"h3\",true],[10,\"class\",\"text-info\"],[8],[1,[28,\"fa-icon\",[\"file-text\"],null],false],[0,\" Metadata Records\"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"collapsible\",\"collapsed\",\"shadow\"],[true,false,true]],{\"statements\":[[0,\"    \"],[1,[28,\"control/md-record-table\",null,[[\"data\",\"dataColumns\",\"allActions\",\"selectProperty\",\"showSlider\"],[[24,[\"model\"]],[28,\"compute\",[[28,\"route-action\",[\"getColumns\"],null],[24,[\"section\",\"meta\",\"type\"]]],null],true,\"_selectedFromList\",[28,\"route-action\",[\"showSlider\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[0,\"No Metadata Records found.\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-success btn-lg\",\"record.new\"]],{\"statements\":[[0,\"        \"],[1,[28,\"fa-icon\",[\"plus\"],null],false],[0,\" Create a Metadata Record\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"errorTarget\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-slider-error\",[28,\"hash\",null,[[\"title\",\"body\"],[[28,\"concat\",[\"Viewing errors for: \",[24,[\"errorTarget\",\"title\"]]],null],[28,\"component\",[\"control/md-errors\"],[[\"errors\"],[[24,[\"errorTarget\",\"schemaErrors\"]]]]]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/records/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/save/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/save/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "a39cEse1",
    "block": "{\"symbols\":[],\"statements\":[[0,\"Save the Record(s)\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/save/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    redirect() {
      this.replaceWith('settings.main');
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "rpwaumsT",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/settings/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/main/route", ["exports", "mdeditor/mixins/scroll-to"], function (_exports, _scrollTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend(_scrollTo.default, {
    model() {
      return this.settings.get('data');
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/main/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "P/n3T5cu",
    "block": "{\"symbols\":[\"catalog\",\"meta\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[0,\"\\n\"],[4,\"layout/md-wrap\",null,[[\"data-spy\"],[\"Version\"]],{\"statements\":[[0,\"    \"],[7,\"small\",true],[10,\"class\",\"small\"],[8],[7,\"b\",true],[8],[0,\"md\"],[7,\"span\",true],[10,\"class\",\"md-icon-mdeditor\"],[8],[9],[0,\"ditor\"],[9],[0,\" Version: \"],[1,[22,\"control/md-repo-link\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"data-spy\"],[\"General Settings\",\"General\"]],{\"statements\":[[7,\"form\",true],[10,\"class\",\"form-horizontal\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"col-sm-3 co-xxl-2 control-label\"],[8],[0,\"Auto Save\"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-sm-2\"],[8],[0,\"\\n        \"],[1,[28,\"x-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"model\",\"autoSave\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"autoSave\"]]],null]],null],true,\"On\",\"Off\",\"medium\",\"default\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"col-sm-3 co-xxl-2 control-label\"],[8],[0,\"Copy in Edit Mode\"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-sm-2\"],[8],[0,\"\\n        \"],[1,[28,\"x-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"model\",\"showCopy\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"showCopy\"]]],null]],null],true,\"On\",\"Off\",\"medium\",\"default\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"alert alert-danger\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n        \"],[7,\"label\",true],[10,\"class\",\"col-sm-3 co-xxl-2 control-label\"],[8],[0,\"Delete in Edit Mode\"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"col-sm-2\"],[8],[0,\"\\n          \"],[1,[28,\"x-toggle\",null,[[\"value\",\"onToggle\",\"showLabels\",\"onLabel\",\"offLabel\",\"size\",\"theme\"],[[24,[\"model\",\"showDelete\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"showDelete\"]]],null]],null],true,\"On\",\"Off\",\"medium\",\"default\"]]],false],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-group no-margin\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"class\",\"col-sm-3 co-xxl-2 control-label\"],[8],[0,\"Clear All Records\"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"col-sm-2\"],[8],[0,\"\\n\"],[4,\"control/md-button-modal\",null,[[\"class\",\"type\",\"message\",\"onConfirm\"],[\"btn btn-sm btn-danger\",\"button\",\"<h1>Are you sure?</h1> Clicking OK will delete ALL  records in\\n          your browser cache. Have you made a backup?\",[28,\"route-action\",[\"clearLocalStorage\"],null]]],{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"fa fa-times\"],[8],[9],[0,\" Clear Storage Cache\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"shadow\"],[\"Defaults\",true]],{\"statements\":[[7,\"div\",true],[10,\"class\",\"form-group\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"label\",\"showValidations\",\"placeholder\"],[[24,[\"model\",\"language\"]],true,true,false,[24,[\"disabled\"]],\"language\",\"Language\",true,\"Select or enter a language code.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"label\",\"showValidations\",\"placeholder\"],[[24,[\"model\",\"characterSet\"]],false,true,false,[24,[\"disabled\"]],\"characterSet\",\"Character Set\",true,\"Select character set.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"disabled\",\"mdCodeName\",\"label\",\"placeholder\"],[[24,[\"model\",\"country\"]],false,true,false,[24,[\"disabled\"]],\"countries\",\"Country\",\"Select country code.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"hr\",true],[10,\"class\",\"col-md-12\"],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-8\"],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"label\",\"type\",\"value\",\"placeholder\"],[\"Import URL\",\"url\",[24,[\"model\",\"importUriBase\"]],\"Text string used as the default URL for importing.\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"hr\",true],[10,\"class\",\"col-md-12\"],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"col-md-8\"],[8],[0,\"\\n      \"],[7,\"label\",true],[8],[0,\"mdTranslator API URL\"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"input-group\"],[8],[0,\"\\n        \"],[1,[28,\"input/md-input\",null,[[\"type\",\"value\",\"placeholder\"],[\"url\",[24,[\"model\",\"mdTranslatorAPI\"]],\"URL for the ADIwg Metadata Translator.\"]]],false],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"input-group-btn\"],[8],[0,\"\\n          \"],[7,\"button\",false],[12,\"class\",\"btn btn-warning\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"resetMdTranslatorAPI\"]],[8],[0,\"Default\\n            \"],[1,[28,\"ember-tooltip\",null,[[\"tooltipClass\",\"text\"],[\"ember-tooltip md-tooltip info\",\"Reset to default\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"],[7,\"hr\",true],[8],[9],[0,\"\\n\"],[4,\"object/md-array-table\",null,[[\"columns\",\"value\",\"plain\",\"title\",\"templateClass\",\"onChange\",\"data-spy\"],[\"Repository, Collection Title\",[24,[\"model\",\"repositoryDefaults\"]],true,\"Metadata Repository\",[24,[\"settings\",\"repositoryTemplate\"]],[28,\"route-action\",[\"save\"],null],\"Metadata Repository\"]],{\"statements\":[[0,\"    \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-codelist\",null,[[\"value\",\"create\",\"tooltip\",\"icon\",\"mdCodeName\",\"closeOnSelect\",\"placeholder\",\"change\"],[[23,2,[\"item\",\"repository\"]],true,true,false,\"metadataRepository\",true,\"Select or enter a repository.\",[28,\"route-action\",[\"save\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"td\",true],[8],[0,\"\\n      \"],[1,[28,\"input/md-input\",null,[[\"type\",\"value\",\"placeholder\",\"change\"],[\"text\",[23,2,[\"item\",\"title\"]],\"Text string used to identify a set of resources in the repository.\",[28,\"route-action\",[\"save\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"data-spy\"],[\"Date Settings\",\"Dates\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"col-md-4\"],[8],[0,\"\\n    \"],[1,[28,\"input/md-month\",null,[[\"date\",\"format\",\"altFormat\",\"label\",\"placeholder\"],[[24,[\"model\",\"fiscalStartMonth\"]],\"MMMM\",\"MM\",\"Start Month of Fiscal Year\",\"Select month.\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"title\",\"data-spy\"],[\"Publishing Settings\",\"Publishing\"]],{\"statements\":[[4,\"each\",[[28,\"compute\",[[28,\"route-action\",[\"catalogs\"],null]],null]],null,{\"statements\":[[4,\"layout/md-card\",null,[[\"title\",\"collapsible\",\"collapsed\",\"shadow\",\"class\"],[[23,1,[\"name\"]],true,false,false,\"md-embedded\"]],{\"statements\":[[0,\"    \"],[1,[28,\"component\",[[23,1,[\"settingsComponent\"]]],[[\"model\",\"save\"],[[24,[\"model\",\"publishOptions\"]],[28,\"route-action\",[\"save\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null]],\"parameters\":[]},null],[0,\" \"],[1,[22,\"outlet\"],false],[0,\"\\n\\n \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-scroll-spy-settings\",[28,\"component\",[\"control/md-scroll-spy\"],[[\"scrollInit\",\"setScrollTo\"],[[24,[\"scrollTo\"]],[28,\"route-action\",[\"setScrollTo\"],null]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/settings/main/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/index/controller", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Controller.extend({
    customProfiles: Ember.inject.service('custom-profile'),
    /* eslint-disable ember/avoid-leaking-state-in-ember-objects */
    columns: [{
      propertyName: 'title',
      title: 'Title'
    }, {
      propertyName: 'definition.title',
      title: 'Definition'
    }, {
      propertyName: 'description',
      title: 'Description',
      truncate: true,
      isHidden: false
    }],
    // columnSets: [],
    //
    // badges: [{
    //   type: 'info',
    //   icon: 'info-circle',
    //   tip: 'Update available.',
    //   isVisible: 'hasUpdate'
    // }],
    actions: {
      addProfile() {
        this.set('profile', this.store.createRecord('custom-profile'));
      },
      editProfile(index, record) {
        this.set('profile', record);
      },
      saveProfile() {
        let profile = this.profile;
        return profile.save();
      },
      cancelEdit() {
        let record = this.profile;
        this.set('profile', null);
        record.rollbackAttributes();
      },
      manageDefinitions() {
        this.transitionToRoute('settings.profile.manage');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/index/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model() {
      return this.store.findAll('custom-profile');
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/index/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "gclD0B9M",
    "block": "{\"symbols\":[\"message\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[0,\"\\n    Manage Profiles\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"profile\"]]],null,{\"statements\":[[0,\"    \"],[7,\"h4\",true],[10,\"class\",\"tab-header\"],[8],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"profile\"]]],[[\"use\",\"growDuration\",\"class\"],[\"fade\",100,\"inline-block\"]],{\"statements\":[[4,\"if\",[[24,[\"profile\",\"isNew\"]]],null,{\"statements\":[[0,\"          Add Profile\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"concat\",[\"Edit \",[24,[\"profile\",\"title\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"      \"],[7,\"hr\",true],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"profile\"]]],[[\"use\"],[\"fade\"]],{\"statements\":[[4,\"if\",[[24,[\"profile\",\"isNew\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"object/md-profile/custom\",null,[[\"record\"],[[24,[\"profile\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"profile\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"profile\",\"validations\",\"hasWarnings\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"alert alert-warning\"],[10,\"role\",\"alert\"],[8],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n\"],[4,\"each\",[[24,[\"profile\",\"validations\",\"warningMessages\"]]],null,{\"statements\":[[0,\"          \"],[7,\"span\",true],[8],[1,[23,1,[]],false],[0,\" \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[28,\"object/md-profile/custom\",null,[[\"record\"],[[24,[\"profile\"]]]]],false],[0,\"\\n    \"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"control/md-edit-table\",null,[[\"data\",\"dataColumns\",\"columnSets\",\"rowBodyComponent\",\"pageSize\",\"editRow\",\"actionBadges\"],[[24,[\"model\"]],[24,[\"columns\"]],[24,[\"columnSets\"]],\"object/md-profile/form\",25,[28,\"action\",[[23,0,[]],\"editProfile\"],null],[24,[\"badges\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"profile\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"profile\",\"isNew\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"disabled\",\"class\",\"click\"],[[28,\"if\",[[24,[\"profile\",\"isNew\"]],\"Save Profile\",\"Update Profile\"],null],\"floppy-o\",[24,[\"disableSave\"]],\"btn-success btn-lg\",[28,\"action\",[[23,0,[]],\"saveProfile\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[[28,\"if\",[[24,[\"profile\",\"isNew\"]],\"Cancel\",\"Back to List\"],null],[28,\"if\",[[24,[\"profile\",\"isNew\"]],\"undo\",\"arrow-left\"],null],[28,\"if\",[[24,[\"profile\",\"isNew\"]],\"btn-warning btn-lg\",\"btn-primary btn-lg\"],null],[28,\"action\",[[23,0,[]],\"cancelEdit\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\",\"disabled\"],[\"Add Profile\",\"plus\",\"btn-success btn-lg\",[28,\"action\",[[23,0,[]],\"addProfile\"],null],[28,\"if\",[[24,[\"profile\"]],true],null]]]]]]],false],[0,\"\\n  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Manage Definitions\",\"gear\",\"btn-primary btn-lg\",[28,\"action\",[[23,0,[]],\"manageDefinitions\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/settings/profile/index/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/manage/controller", ["exports", "ember-concurrency"], function (_exports, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Controller.extend({
    profile: Ember.inject.service(),
    flashMessages: Ember.inject.service(),
    /* eslint-disable ember/avoid-leaking-state-in-ember-objects */
    columns: [{
      propertyName: 'title',
      title: 'Title'
    }, {
      propertyName: 'uri',
      title: 'URL',
      break: true
    }, {
      propertyName: 'description',
      title: 'Description',
      truncate: true,
      isHidden: true
    }],
    columnSets: [{
      label: 'URL',
      showColumns: ['title', 'uri']
    }],
    badges: [{
      type: 'info',
      icon: 'info-circle',
      tip: 'Update available.',
      isVisible: 'hasUpdate'
    }],
    definition: null,
    /**
     * Indicates whether the save button should be disabled
     *
     * @property disableSave
     * @type {Boolean}
     * @readOnly
     * @category computed
     * @requires definition.validations.isInvalid,task.isRunning
     */
    disableSave: Ember.computed.or('definition.validations.attrs.uri.isInvalid', 'task.isRunning'),
    checkForUpdates: (0, _emberConcurrency.task)(function* () {
      yield this.profile.checkForUpdates.perform(this.model);
    }),
    actions: {
      addDefinition() {
        this.set('definition', this.store.createRecord('profile'));
      },
      editDefinition(index, record) {
        this.set('definition', record);
      },
      saveDefinition() {
        let definition = this.definition;
        return definition.save().then(rec => {
          let fetched = this.profile.fetchDefinition.perform(rec.uri);
          this.set('task', fetched);
          fetched.then(val => {
            if (val) {
              definition.set('config', val);
              definition.set('remoteVersion', val.version);
              this.flashMessages.success("Downloaded profile definition: ".concat(val.title, "."));
            }
          });
        }).catch(e => {
          this.flashMessages.warning(e.message);
        });
      },
      cancelEdit() {
        let record = this.definition;
        this.set('definition', null);
        record.rollbackAttributes();
      },
      toProfile() {
        this.transitionToRoute('settings.profile');
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/manage/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    model() {
      return this.store.findAll('profile');
    },
    profile: Ember.inject.service()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/manage/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "QUT1cFhc",
    "block": "{\"symbols\":[\"core\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[0,\"\\n    Manage Definitions\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"ul\",true],[10,\"class\",\"nav nav-tabs\"],[10,\"role\",\"tablist\"],[8],[0,\"\\n  \"],[7,\"li\",true],[10,\"role\",\"presentation\"],[10,\"class\",\"active\"],[8],[7,\"a\",true],[11,\"href\",[28,\"concat\",[\"#\",[24,[\"elementId\"]],\"-imported\"],null]],[10,\"aria-controls\",\"imported\"],[10,\"role\",\"tab\"],[10,\"data-toggle\",\"tab\"],[8],[0,\"Imported\"],[9],[9],[0,\"\\n  \"],[7,\"li\",true],[10,\"role\",\"presentation\"],[8],[0,\"\\n    \"],[7,\"a\",true],[11,\"href\",[28,\"concat\",[\"#\",[24,[\"elementId\"]],\"-core\"],null]],[10,\"aria-controls\",\"core\"],[10,\"role\",\"tab\"],[10,\"data-toggle\",\"tab\"],[8],[0,\"Core\"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"card-block\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"tab-content\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"role\",\"tabpanel\"],[10,\"class\",\"tab-pane fade in active\"],[11,\"id\",[28,\"concat\",[[24,[\"elementId\"]],\"-imported\"],null]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"definition\"]]],null,{\"statements\":[[0,\"        \"],[7,\"h4\",true],[10,\"class\",\"tab-header\"],[8],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"definition\"]]],[[\"use\",\"growDuration\",\"class\"],[\"fade\",100,\"inline-block\"]],{\"statements\":[[4,\"if\",[[24,[\"definition\",\"isNew\"]]],null,{\"statements\":[[0,\"              Add Profile Definition\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"concat\",[\"Edit \",[24,[\"definition\",\"title\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[24,[\"task\",\"isRunning\"]]],null,{\"statements\":[[0,\"              \"],[7,\"small\",true],[8],[0,\"...downloading definition\"],[9],[0,\"\\n              \"],[1,[28,\"fa-icon\",[\"spinner\"],[[\"spin\"],[true]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"          \"],[7,\"hr\",true],[8],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"definition\"]]],[[\"use\"],[\"fade\"]],{\"statements\":[[4,\"if\",[[24,[\"definition\",\"isNew\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"object/md-profile/form\",null,[[\"record\"],[[24,[\"definition\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"definition\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"object/md-profile\",null,[[\"record\"],[[24,[\"definition\"]]]]],false],[0,\"\\n        \"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"control/md-edit-table\",null,[[\"data\",\"dataColumns\",\"columnSets\",\"rowBodyComponent\",\"pageSize\",\"editRow\",\"actionBadges\"],[[24,[\"model\"]],[24,[\"columns\"]],[24,[\"columnSets\"]],\"object/md-profile/form\",25,[28,\"action\",[[23,0,[]],\"editDefinition\"],null],[24,[\"badges\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"role\",\"tabpanel\"],[10,\"class\",\"tab-pane fade\"],[11,\"id\",[28,\"concat\",[[24,[\"elementId\"]],\"-core\"],null]],[8],[0,\"\\n      \"],[7,\"h4\",true],[10,\"class\",\"tab-header\"],[8],[0,\"\\n        List of Core Definitions\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"list-group\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"profile\",\"coreProfiles\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"list-group-item\"],[8],[0,\"\\n            \"],[7,\"h4\",true],[10,\"class\",\"list-group-item-heading text-info-dark\"],[8],[1,[23,1,[\"title\"]],false],[0,\"\\n              \"],[7,\"hr\",true],[8],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[1,[28,\"object/md-profile/preview\",null,[[\"record\",\"class\"],[[23,1,[]],\"list-group-item-text\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"definition\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"iconSpin\",\"disabled\",\"class\",\"click\"],[[28,\"if\",[[24,[\"task\",\"isRunning\"]],\"Loading...\",[28,\"if\",[[24,[\"definition\",\"isNew\"]],\"Save Definition\",\"Update Definition\"],null]],null],[28,\"if\",[[24,[\"task\",\"isRunning\"]],\"spinner\",\"floppy-o\"],null],[24,[\"task\",\"isRunning\"]],[24,[\"disableSave\"]],\"btn-success btn-lg\",[28,\"action\",[[23,0,[]],\"saveDefinition\"],null]]]]]]],false],[0,\"\\n    \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[[28,\"if\",[[24,[\"definition\",\"isNew\"]],\"Cancel\",\"Back\"],null],[28,\"if\",[[24,[\"definition\",\"isNew\"]],\"undo\",\"arrow-left\"],null],[28,\"if\",[[24,[\"definition\",\"isNew\"]],\"btn-warning btn-lg\",\"btn-primary btn-lg\"],null],[28,\"action\",[[23,0,[]],\"cancelEdit\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\",\"disabled\"],[\"Add Definition\",\"plus\",\"btn-success btn-lg\",[28,\"action\",[[23,0,[]],\"addDefinition\"],null],[28,\"if\",[[24,[\"definition\"]],true],null]]]]]]],false],[0,\"\\n  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"iconSpin\",\"disabled\",\"icon\",\"class\",\"click\"],[[28,\"if\",[[24,[\"checkForUpdates\",\"isRunning\"]],\"Checking...\",\"Check for Updates\"],null],[24,[\"checkForUpdates\",\"isRunning\"]],[24,[\"checkForUpdates\",\"isRunning\"]],[28,\"if\",[[24,[\"checkForUpdates\",\"isRunning\"]],\"spinner\",\"check\"],null],\"btn-info btn-lg\",[28,\"perform\",[[24,[\"checkForUpdates\"]]],null]]]]]]],false],[0,\"\\n\\n  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[\"Back to Profiles\",\"arrow-left\",\"btn-primary btn-lg\",[28,\"action\",[[23,0,[]],\"toProfile\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/settings/profile/manage/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/settings/profile/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "3RE6XcLf",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/settings/profile/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/route", ["exports", "mdeditor/models/setting"], function (_exports, _setting) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    settings: Ember.inject.service(),
    publish: Ember.inject.service(),
    /**
     * The profile service
     *
     * @return {Ember.Service} profile
     */
    profile: Ember.inject.service(),
    setupController(controller, model) {
      this._super(controller, model);
      const links = [{
        title: 'Main',
        target: 'settings.main',
        tip: 'Main application settings'
      }, {
        title: 'Profiles',
        target: 'settings.profile',
        tip: 'Custom profile settings'
      }, {
        title: 'Validation',
        target: 'settings.validation',
        tip: 'Custom validation settings'
      }];
      controller.set('links', links);
    },
    actions: {
      clearLocalStorage() {
        window.localStorage.clear();
        this.transitionTo('application');
        window.location.reload();
      },
      save() {
        this.settings.data.save();
      },
      catalogs() {
        return this.get('publish.catalogs');
      },
      resetMdTranslatorAPI() {
        let url = Ember.get(_setting.default, 'attributes').get('mdTranslatorAPI').options.defaultValue;
        let model = Ember.get(this.controller, 'model');
        model.set('mdTranslatorAPI', url);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "SLL9FIDT",
    "block": "{\"symbols\":[\"spy\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"row md-section-secondary\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"col-sm-9 col-md-offset-1\"],[8],[0,\"\\n    \"],[1,[22,\"outlet\"],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-control-sidebar col-sm-3 col-md-2 hidden-print\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"btn-group-vertical center-block\"],[10,\"role\",\"group\"],[10,\"aria-label\",\"Action Button Controls\"],[8],[0,\"\\n      \"],[1,[28,\"multiple-from-elsewhere\",null,[[\"name\"],[\"md-subbar-settings\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"from-elsewhere\",null,[[\"name\"],[\"md-scroll-spy-settings\"]],{\"statements\":[[0,\"        \"],[1,[28,\"component\",[[23,1,[]]],[[\"offset\"],[145]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"nav-secondary\",[28,\"component\",[\"layout/md-nav-secondary\"],[[\"navLinks\",\"isStaticLinks\"],[[24,[\"links\"]],true]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/settings/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/validation/controller", ["exports", "ember-concurrency"], function (_exports, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Controller.extend({
    schemas: Ember.inject.service(),
    flashMessages: Ember.inject.service(),
    /* eslint-disable ember/avoid-leaking-state-in-ember-objects */
    columns: [{
      propertyName: 'title',
      title: 'Title'
    }, {
      propertyName: 'formattedType',
      title: 'Type',
      filterWithSelect: true
    }, {
      propertyName: 'uri',
      title: 'URL',
      break: true
    }, {
      propertyName: 'description',
      title: 'Description',
      truncate: true,
      isHidden: true
    }, {
      propertyName: 'formattedGlobal',
      title: 'Global?',
      filterWithSelect: true
    }],
    columnSets: [{
      label: 'URL',
      showColumns: ['title', 'uri']
    }],
    badges: [{
      type: 'info',
      icon: 'info-circle',
      tip: 'Update available.',
      isVisible: 'hasUpdate'
    }],
    schema: null,
    /**
    * Indicates whether the save button should be disabled
    *
    * @property disableSave
    * @type {Boolean}
    * @readOnly
    * @category computed
    * @requires schema.validations.isInvalid,task.isRunning
    */
    disableSave: Ember.computed.or('schema.validations.isInvalid', 'task.isRunning'),
    checkForUpdates: (0, _emberConcurrency.task)(function* () {
      yield this.schemas.checkForUpdates.perform(this.model);
    }),
    actions: {
      addSchema() {
        this.set('schema', this.store.createRecord('schema'));
      },
      editSchema(index, record) {
        this.set('schema', record);
      },
      saveSchema() {
        let schema = this.schema;
        return this.schema.save().then(rec => {
          let fetched = this.schemas.fetchSchemas.perform(rec.uri);
          this.set('task', fetched);
          return fetched.then(val => {
            schema.set('customSchemas', val);
            schema.set('version', val[0].schema.version);
            schema.set('remoteVersion', schema.version);
            this.flashMessages.success("Downloaded ".concat(val.length, " schemas."));
          });
        }).catch(e => {
          this.flashMessages.warning(e.message);
        });
      },
      cancelEdit() {
        let record = this.schema;
        this.set('schema', null);
        record.rollbackAttributes();
      },
      fetchSchemas(url) {
        this.schemas.fetchSchemas(url);
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/validation/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  // import EmberObject from '@ember/object';
  var _default = Ember.Route.extend({
    model() {
      return this.store.findAll('schema');
    },
    schemas: Ember.inject.service()
  });
  _exports.default = _default;
});
;define("mdeditor/pods/settings/validation/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "qELNcxYB",
    "block": "{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[0,\"\\n    Custom Validation Schemas\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"section\",true],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"section-header\"],[8],[0,\"\\n    \"],[7,\"h4\",true],[10,\"class\",\"md-table-title\"],[8],[0,\"\\n\"],[4,\"liquid-if\",[[24,[\"schema\"]]],[[\"use\",\"growDuration\",\"class\"],[\"fade\",100,\"inline-block\"]],{\"statements\":[[4,\"if\",[[24,[\"schema\",\"isNew\"]]],null,{\"statements\":[[0,\"          Add Schema\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"schema\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"concat\",[\"Edit \",[24,[\"schema\",\"title\"]]],null],false],[0,\"\\n        \"]],\"parameters\":[]},null]],\"parameters\":[]}],[4,\"if\",[[24,[\"task\",\"isRunning\"]]],null,{\"statements\":[[0,\"          \"],[7,\"small\",true],[8],[0,\"...downloading schemas\"],[9],[0,\"\\n          \"],[1,[28,\"fa-icon\",[\"spinner\"],[[\"spin\"],[true]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"        Manage Schemas\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"hr\",true],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[4,\"liquid-if\",[[24,[\"schema\"]]],[[\"use\"],[\"fade\"]],{\"statements\":[[4,\"if\",[[24,[\"schema\",\"isNew\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"object/md-schema/form\",null,[[\"record\"],[[24,[\"schema\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"schema\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"object/md-schema\",null,[[\"record\"],[[24,[\"schema\"]]]]],false],[0,\"\\n    \"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"control/md-edit-table\",null,[[\"data\",\"dataColumns\",\"columnSets\",\"rowBodyComponent\",\"pageSize\",\"editRow\",\"actionBadges\"],[[24,[\"model\"]],[24,[\"columns\"]],[24,[\"columnSets\"]],\"object/md-schema\",25,[28,\"action\",[[23,0,[]],\"editSchema\"],null],[24,[\"badges\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"schema\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"iconSpin\",\"disabled\",\"class\",\"click\"],[[28,\"if\",[[24,[\"task\",\"isRunning\"]],\"Loading...\",[28,\"if\",[[24,[\"schema\",\"isNew\"]],\"Save Schema\",\"Update Schema\"],null]],null],[28,\"if\",[[24,[\"task\",\"isRunning\"]],\"spinner\",\"floppy-o\"],null],[24,[\"task\",\"isRunning\"]],[24,[\"disableSave\"]],\"btn-success btn-lg\",[28,\"action\",[[23,0,[]],\"saveSchema\"],null]]]]]]],false],[0,\"\\n    \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\"],[[28,\"if\",[[24,[\"schema\",\"isNew\"]],\"Cancel\",\"Back\"],null],[28,\"if\",[[24,[\"schema\",\"isNew\"]],\"undo\",\"arrow-left\"],null],[28,\"if\",[[24,[\"schema\",\"isNew\"]],\"btn-warning btn-lg\",\"btn-primary btn-lg\"],null],[28,\"action\",[[23,0,[]],\"cancelEdit\"],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"icon\",\"class\",\"click\",\"disabled\"],[\"Add Schema\",\"plus\",\"btn-success btn-lg\",[28,\"action\",[[23,0,[]],\"addSchema\"],null],[28,\"if\",[[24,[\"schema\"]],true],null]]]]]]],false],[0,\"\\n  \"],[1,[28,\"to-elsewhere\",null,[[\"named\",\"send\"],[\"md-subbar-settings\",[28,\"component\",[\"control/md-button\"],[[\"text\",\"iconSpin\",\"disabled\",\"icon\",\"class\",\"click\"],[[28,\"if\",[[24,[\"checkForUpdates\",\"isRunning\"]],\"Checking...\",\"Check for Updates\"],null],[24,[\"checkForUpdates\",\"isRunning\"]],[24,[\"checkForUpdates\",\"isRunning\"]],[28,\"if\",[[24,[\"checkForUpdates\",\"isRunning\"]],\"spinner\",\"check\"],null],\"btn-info btn-lg\",[28,\"perform\",[[24,[\"checkForUpdates\"]]],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/settings/validation/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/pods/translate/route", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({});
  _exports.default = _default;
});
;define("mdeditor/pods/translate/template", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "v9LM7r1W",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[7,\"style\",true],[10,\"media\",\"screen\"],[8],[0,\"\\n    .construction {\\n        width: 50vh;\\n        min-width:240px;\\n        font-size:5vh;\\n        border: 2vh solid #333333;\\n        margin: 10vh auto;\\n        padding: 3vh;\\n        border-radius: 5vh;\\n    }\\n\"],[9],[0,\"\\n\"],[4,\"layout/md-card\",null,[[\"class\",\"shadow\"],[\"construction card-inverse card-warning\",false]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"text-center\"],[8],[0,\"\\n        \"],[7,\"div\",true],[8],[0,\"\\n            \"],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],[[\"size\"],[2]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[8],[0,\"\\n            \"],[7,\"b\",true],[8],[0,\"Page Under \"],[7,\"br\",true],[8],[9],[0,\"Construction\"],[9],[0,\"\\n        \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/pods/translate/template.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/resolver", ["exports", "ember-resolver"], function (_exports, _emberResolver) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _emberResolver.default;
  _exports.default = _default;
});
;define("mdeditor/router", ["exports", "mdeditor/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const Router = Ember.Router.extend({
    location: _environment.default.locationType,
    rootURL: _environment.default.rootURL
  });
  Router.map(function () {
    this.route('dashboard');
    this.route('export');
    this.route('import');
    this.route('translate');
    //this.route('publish', function() {});
    this.route('help');
    this.route('settings', function () {
      this.route('validation');
      this.route('profile', function () {
        this.route('manage');
      });
      this.route('main');
    });

    //records
    this.route('records');
    //record
    this.route('record', function () {
      this.route('new', function () {
        this.route('id', {
          path: '/:record_id'
        });
      });
      this.route('show', {
        path: ':record_id'
      }, function () {
        this.route('edit', function () {
          this.route('metadata', function () {
            this.route('identifier');
            this.route('parent', function () {
              this.route('identifier', {
                path: 'identifier/:identifier_id'
              });
            });
            this.route('alternate', {
              path: 'alternate/:citation_id'
            }, function () {
              // this.route('index', {
              //   path: 'alternate/:citation_id'
              // });
              this.route('identifier', {
                path: 'identifier/:identifier_id'
              });
            });
          });
          this.route('keywords', function () {
            this.route('thesaurus', {
              path: 'thesaurus/:thesaurus_id'
            });
          });
          this.route('extent', function () {
            this.route('spatial', {
              path: 'spatial/:extent_id'
            });
          });
          this.route('lineage', function () {
            this.route('lineageobject', {
              path: ':lineage_id'
            }, function () {
              this.route('citation', {
                path: 'citation/:citation_id'
              }, function () {
                this.route('identifier', {
                  path: 'identifier/:identifier_id'
                });
              });
              this.route('step', {
                path: 'step/:step_id'
              }, function () {
                this.route('citation', {
                  path: 'citation/:citation_id'
                });
              });
              this.route('source', {
                path: 'source/:source_id'
              }, function () {});
            });
          });
          this.route('distribution', function () {
            this.route('distributor', {
              path: ':distribution_id/distributor/:distributor_id'
            }, function () {
              this.route('transfer', {
                path: 'transfer/:transfer_id'
              });
            });
          });
          this.route('associated', function () {
            this.route('resource', {
              path: ':resource_id'
            }, function () {});
          });
          this.route('documents', function () {
            this.route('citation', {
              path: 'documents/:citation_id'
            }, function () {});
          });
          this.route('coverages');
          this.route('grid');
          this.route('main', function () {
            this.route('citation', function () {
              this.route('identifier', {
                path: 'identifier/:identifier_id'
              });
            });
          });
          this.route('funding', function () {
            this.route('allocation', {
              path: ':allocation_id'
            });
          });
          this.route('dictionary');
          this.route('spatial', function () {
            this.route('raster', {
              path: 'raster/:raster_id'
            }, function () {
              this.route('attribute', {
                path: ':attrgroup_id/attribute/:attribute_id'
              });
            });
          });
          this.route('constraint', function () {});
          this.route('taxonomy', function () {
            this.route('collection', {
              path: ':collection_id'
            }, function () {
              this.route('itis');
              this.route('system', {
                path: 'system/:system_id'
              }, function () {});
            });
          });
        });
        this.route('translate');
      });
    });
    //contacts
    this.route('contacts');
    //contact
    this.route('contact', function () {
      this.route('new', function () {
        this.route('id', {
          path: '/:contact_id'
        });
      });
      this.route('show', {
        path: ':contact_id'
      }, function () {
        this.route('edit');
      });
    });
    //dictionary
    this.route('dictionaries');
    //dictionary
    this.route('dictionary', function () {
      this.route('new', function () {
        this.route('id', {
          path: '/:dictionary_id'
        });
      });
      this.route('show', {
        path: ':dictionary_id'
      }, function () {
        this.route('edit', function () {
          this.route('citation', function () {
            this.route('identifier', {
              path: 'identifier/:identifier_id'
            });
          });
          this.route('domain', function () {
            this.route('edit', {
              path: ':domain_id'
            }, function () {
              this.route('citation', function () {
                this.route('identifier', {
                  path: 'identifier/:identifier_id'
                });
              });
              this.route('item', {
                path: 'item/:item_id'
              });
            });
          });
          this.route('entity', function () {
            this.route('edit', {
              path: ':entity_id'
            }, function () {
              this.route('citation', {
                path: 'citation/:citation_id'
              }, function () {
                this.route('identifier', {
                  path: 'identifier/:identifier_id'
                });
              });
              this.route('attribute', {
                path: 'attribute/:attribute_id'
              }, function () {});
            });
            this.route('import');
          });
        });
      });
    });
    this.route('not-found', {
      path: '/*path'
    });
    this.route('error');
  });
  var _default = Router;
  _exports.default = _default;
});
;define("mdeditor/routes/application", ["exports", "jquery", "mdeditor/config/environment"], function (_exports, _jquery, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    APP: {
      defaultProfileId
    }
  } = _environment.default;
  const console = window.console;
  var _default = Ember.Route.extend({
    init() {
      this._super(...arguments);
      (0, _jquery.default)(window).bind('beforeunload', evt => {
        let dirty = this.currentRouteModel().filter(function (itm) {
          return itm.filterBy('hasDirtyHash').length;
        }).length;
        let message = 'Are you sure you want to leave unsaved work?';
        evt.returnValue = dirty ? message : undefined;
        return evt.returnValue;
      });
    },
    spotlight: Ember.inject.service(),
    slider: Ember.inject.service(),
    router: Ember.inject.service(),
    /**
     * Models for sidebar navigation
     *
     * @return {Ember.RSVP.hash}
     */
    model() {
      let promises = [this.store.findAll('record', {
        reload: true
      }), this.store.findAll('contact', {
        reload: true
      }), this.store.findAll('dictionary', {
        reload: true
      })];
      let meta = Ember.A([Ember.Object.create({
        type: 'record',
        list: 'records',
        title: 'Metadata Records',
        icon: 'file-o'
      }), Ember.Object.create({
        type: 'contact',
        list: 'contacts',
        title: 'Contacts',
        icon: 'users'
      }), Ember.Object.create({
        type: 'dictionary',
        list: 'dictionaries',
        title: 'Dictionaries',
        icon: 'book'
      })]);
      let idx = 0;
      let mapFn = function mapFn(item) {
        meta[idx].set('listId', Ember.guidFor(item));
        item.set('meta', meta[idx]);
        idx = ++idx;
        return item;
      };
      return Ember.RSVP.map(promises, mapFn).then(result => {
        let profiles = [this.store.findAll('profile', {
          reload: true
        }), this.store.findAll('schema', {
          reload: true
        }), this.store.findAll('custom-profile', {
          reload: true
        })];
        return Ember.RSVP.all(profiles).then(() => result);

        // return result;
      });
    },

    beforeModel() {
      if (!defaultProfileId) {
        this.router.replaceWith('error').then(function (route) {
          route.controller.set('lastError', new Error('A default profile ID is not set in "config/environment/APP"'));
        });
      }
    },
    setupController(controller, model) {
      // Call _super for default behavior
      this._super(controller, model);
      // Implement your custom setup after
      controller.set('spotlight', this.spotlight);
      controller.set('slider', this.slider);
    },
    /**
     * The current model for the route
     * @method currentRouteModel
     * @return {Object}
     */

    actions: {
      error(error) {
        console.error(error);
        if (error.status === 404) {
          return this.transitionTo('not-found');
        }
        return this.replaceWith('error').then(function (route) {
          route.controller.set('lastError', error);
        });
      },
      didTransition() {
        this.controller.set('currentRoute', this.router.get('currentRouteName'));
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/routes/index", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Route.extend({
    /** Redirect to dashboard route */
    redirect() {
      this.transitionTo('dashboard');
    }
  });
  _exports.default = _default;
});
;define("mdeditor/routes/publish/sciencebase", ["exports", "mdeditor-sciencebase/routes/publish/sciencebase"], function (_exports, _sciencebase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sciencebase.default;
    }
  });
});
;define("mdeditor/serializers/application", ["exports", "ember-local-storage/serializers/serializer"], function (_exports, _serializer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _serializer.default;
    }
  });
});
;define("mdeditor/services/-gestures", ["exports", "mdeditor/config/environment", "ember-gestures/services/-gestures"], function (_exports, _environment, _gestures) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const assign = Ember.assign || Ember.merge;
  let gestures = assign({}, {
    useCapture: false
  });
  gestures = assign(gestures, _environment.default.gestures);
  var _default = _gestures.default.extend({
    useCapture: gestures.useCapture
  });
  _exports.default = _default;
});
;define("mdeditor/services/ajax", ["exports", "ember-ajax/services/ajax"], function (_exports, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _ajax.default;
    }
  });
});
;define("mdeditor/services/cleaner", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.clean = _exports.default = void 0;
  const clean = function clean(obj, options) {
    const opt = Ember.assign({
      target: {},
      preserveArrays: true,
      //preserveObjects: true,
      preserveRootOnly: true
    }, options);
    if (Ember.isBlank(obj)) {
      if (Ember.isArray(obj) && opt.preserveArrays) {
        return [];
      }
      return;
    }
    if (/string|number|boolean/.test(typeof obj)) {
      return obj;
    }
    let acc = opt.target;
    return Object.keys(obj).reduce((result, key) => {
      //reject private property
      if (key.match(/^_/)) {
        return result;
      }
      if (Ember.isArray(obj[key])) {
        if (opt.preserveArrays === false && obj[key].length === 0) {
          return result;
        }
        let resultArray = [];
        obj[key].forEach(itm => {
          let type = Ember.isArray(itm) ? [] : typeof itm === 'object' ? {} : null;
          let cleanItem = clean(itm, {
            target: type,
            preserveArrays: opt.preserveRootOnly ? false : opt.preserveArrays
          });
          if (!Ember.isArray(cleanItem)) {
            if (Ember.isBlank(cleanItem) || typeof cleanItem === 'object' && Object.keys(cleanItem).length === 0) {
              return;
            }
          }

          //console.info(cleanItem);
          resultArray.push(cleanItem);
          //resultArray[idx] = cleanItem;
        });

        if (opt.preserveArrays === false && resultArray.length < 1) {
          return result;
        }
        result[key] = resultArray;
        return result;
      }
      if (Ember.isBlank(obj[key])) {
        //if(obj[key] === undefined) {
        return result;
      }
      if (Ember.typeOf(obj[key]) === 'object' || Ember.typeOf(obj[key]) === 'instance') {
        let objOpt = {
          preserveArrays: opt.preserveArrays && !opt.preserveRootOnly,
          target: {}
        };
        const res = clean(obj[key], objOpt);
        if (Object.keys(res).length > 0) {
          result[key] = res;
        }
      } else if (obj[key] !== '') {
        result[key] = obj[key];
      }
      return result;
    }, acc);
  };
  _exports.clean = clean;
  const _Service = Ember.Service.extend({
    clean: clean
  });
  _exports.default = _Service;
});
;define("mdeditor/services/codelist", ["exports", "mdcodes/resources/js/mdcodes.js"], function (_exports, _mdcodes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Service.extend({
    /**
     * Codelist Service
     *
     * This service provides controlled value lists for use in the editor. The
     * service may be customized by modifing the object in init. The existing
     * property names should be maintained.
     *
     * @module mdeditor
     * @submodule service
     * @class codelist
     */
    init() {
      this._super(...arguments);
      let codelist = this;

      //remap codelist names to be more generic
      Object.keys(_mdcodes.default).forEach(function (key) {
        if (key === 'default') {
          return;
        }
        const list = _mdcodes.default[key];
        const name = key.replace(/^iso_|adiwg_/, '');
        codelist[name] = list;
        //remove deprecated codes
        codelist[name]['codelist'] = list.codelist.rejectBy('deprecated');
      });
    },
    /**
     * Custom Profiles service
     *
     * @property customProfiles
     */
    customProfiles: Ember.inject.service('custom-profile'),
    /**
     * The profiles codelist, updates when number of Custom Profiles change.
     *
     * @property profile
     * @type {Object}
     * @category computed
     * @required customProfiles.profiles{[],@each.title}
     */
    profile: Ember.computed('customProfiles.profiles.{[],@each.title}', function () {
      return {
        codelist: this.customProfiles.profiles.map(itm => {
          return {
            code: itm.id,
            codeName: itm.title,
            description: itm.description
          };
        })
      };
    }),
    /**
     * Codelist item title overrides
     *
     * @property codeOverrides
     * @type {Object}
     * @category computed
     * @required profile
     */
    codeOverrides: Ember.computed('profile', function () {
      return {
        scope: {
          dataset: "geographicDataset"
        }
      };
    })
  });
  _exports.default = _default;
});
;define("mdeditor/services/contacts", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Service.extend({
    init() {
      this._super(...arguments);
      let store = this.store;
      this.set('contacts', store.peekAll('contact'));
    },
    store: Ember.inject.service(),
    contacts: Ember.A(),
    organizations: Ember.computed('contacts.[]', function () {
      let orgs = this.contacts.filterBy('json.isOrganization');
      return orgs;
    }),
    individuals: Ember.computed('contacts.[]', function () {
      let ind = this.contacts.rejectBy('json.isOrganization');
      return ind;
    }),
    organizationsCodes: Ember.computed('contactsCodes.[]', function () {
      let orgs = this.contactsCodes.filterBy('icon', 'users');
      return orgs;
    }),
    individualsCodes: Ember.computed('contactsCodes.[]', function () {
      let ind = this.contactsCodes.rejectBy('icon', 'users');
      return ind;
    }),
    /**
     * mapped is a re-mapped array of code objects.
     *
     * @property mapped
     * @type {Array}
     * @category computed
     * @requires mdCodeName
     */
    contactsCodes: Ember.computed('contacts.@each.name', function () {
      //let codeId = this.get('valuePath');
      //let codeName = this.get('namePath');
      //let tooltip = this.get('tooltipPath');
      let codelist = [];
      let icons = this.icons;
      let defaultIcon = this.defaultIcon;
      let mdCodelist = this.contacts.sortBy('title');
      mdCodelist.forEach(function (item) {
        let newObject = Ember.Object.create({
          codeId: item.get('contactId'),
          codeName: item.get('title'),
          tooltip: item.get('combinedName'),
          icon: item.get('icon') || icons.get(defaultIcon)
        });
        codelist.pushObject(newObject);
      });
      return codelist;
    })
  });
  _exports.default = _default;
});
;define("mdeditor/services/custom-profile", ["exports", "mdeditor/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  /**
   * The default profile identifier
   *
   * @property defaultProfileId
   * @type {String}
   * @default "mdeditor.config.environment.config.defaultProfileId"
   * @static
   * @readOnly
   */
  const {
    APP: {
      defaultProfileId
    }
  } = _environment.default;

  /**
   * Custom Profile service
   *
   * Service that provides custom profile configurations.
   *
   * @module mdeditor
   * @submodule service
   * @class custom-profile
   */
  var _default = Ember.Service.extend({
    init() {
      this._super(...arguments);
      this.customProfiles = this.store.peekAll('custom-profile');
    },
    flashMessages: Ember.inject.service(),
    store: Ember.inject.service(),
    definitions: Ember.inject.service('profile'),
    /**
     * String identifying the active profile
     *
     * @property active
     * @type {String}
     */
    active: null,
    /**
     * Array of all available profiles
     *
     * @property profiles
     * @type {Array}
     * @category computed
     * @required customProfiles,coreProfiles
     */
    profiles: Ember.computed.union('customProfiles', 'coreProfiles'),
    /**
     * Array of available coreProfile definitions
     *
     * @property coreProfiles
     * @type {Array}
     * @category computed
     * @required definitions.coreProfiles
     */
    coreProfiles: Ember.computed.map('definitions.coreProfiles', function (itm) {
      return {
        id: itm.namespace + '.' + itm.identifier,
        title: itm.title,
        description: itm.description,
        definition: itm
      };
    }),
    /**
     * Available profiles mapped by profile id
     *
     * @property mapById
     * @type {Array}
     * @category computed
     * @required profiles.[]
     */
    mapById: Ember.computed('profiles.[]', function () {
      return this.profiles.reduce(function (map, profile) {
        map[profile.id] = profile;
        return map;
      }, {});
    }),
    /**
     * Available profiles mapped by profile alternate id
     *
     * @property mapByAltId
     * @type {Array}
     * @category computed
     * @required profiles.[]
     */
    mapByAltId: Ember.computed('profiles.[]', function () {
      return this.profiles.reduce(function (map, profile) {
        let alt = Ember.get(profile, 'definition.alternateId');
        if (Ember.isEmpty(alt)) {
          return map;
        }
        alt.forEach(a => map[a] = profile.id);
        return map;
      }, {});
    }),
    /**
     * The defaultProfile definition
     *
     * @property defaultProfile
     * @type {Object}
     * @category computed
     * @required mapById
     */
    defaultProfile: Ember.computed('mapById', function () {
      return this.mapById[defaultProfileId];
    }),
    /**
     * The current component profile definition
     *
     * @property activeComponents
     * @type {Object}
     * @category computed
     * @required active
     */
    activeComponents: Ember.computed('active', function () {
      let comp = Ember.get(this.getActiveProfile(), 'definition.components');
      return comp || this.defaultProfile.definition.components;
    }),
    /**
     * The currently active schemas
     *
     * @property activeSchemas
     * @type {Array}
     * @category computed
     * @required active
     */
    activeSchemas: Ember.computed('active', function () {
      return this.getActiveProfile().schemas;
    }),
    /**
     * Get the active profile.
     *
     * @method getActiveProfile
     * @return {Object} The profile definition
     */
    getActiveProfile() {
      const active = this.active;
      const profile = active && typeof active === 'string' ? active : defaultProfileId;
      const selected = this.mapById[profile];
      if (selected) {
        return selected;
      }
      const alternate = this.mapById[this.mapByAltId[profile]];
      if (alternate) {
        this.flashMessages.info("\"".concat(active, "\" identified as an alternate profile. Using \"").concat(alternate.title, "\" profile. To make this permanent, select \"").concat(alternate.title, "\" from the Profile list."), {
          sticky: true
        });
        return alternate;
      }
      this.flashMessages.warning("Profile \"".concat(active, "\" not found. Using default profile."), {
        sticky: true
      });
      return this.defaultProfile;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/services/drag-coordinator", ["exports", "ember-drag-drop/services/drag-coordinator"], function (_exports, _dragCoordinator) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _dragCoordinator.default;
  _exports.default = _default;
});
;define("mdeditor/services/ember-elsewhere", ["exports", "ember-elsewhere/services/ember-elsewhere"], function (_exports, _emberElsewhere) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberElsewhere.default;
    }
  });
});
;define("mdeditor/services/ember-leaflet", ["exports", "ember-leaflet/services/ember-leaflet"], function (_exports, _emberLeaflet) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberLeaflet.default;
    }
  });
});
;define("mdeditor/services/ember-load-config", ["exports", "ember-load/services/ember-load-config", "mdeditor/config/environment"], function (_exports, _emberLoadConfig, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const userConfig = _environment.default['ember-load'] || {};
  var _default = _emberLoadConfig.default.extend({
    loadingIndicatorClass: userConfig.loadingIndicatorClass
  });
  _exports.default = _default;
});
;define("mdeditor/services/flash-messages", ["exports", "ember-cli-flash/services/flash-messages"], function (_exports, _flashMessages) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _flashMessages.default;
    }
  });
});
;define("mdeditor/services/head-data", ["exports", "ember-cli-head/services/head-data"], function (_exports, _headData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _headData.default;
    }
  });
});
;define("mdeditor/services/icon", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Service.extend({
    dataset: 'globe',
    series: 'list-ol',
    nonGeographicDataset: 'bar-chart',
    feature: 'map-marker',
    software: 'desktop',
    service: 'exchange',
    model: 'cubes',
    tile: 'th-large',
    metadata: 'file-code-o',
    initiative: 'checklist',
    sample: 'flask',
    'document': 'file-o',
    repository: 'database',
    aggregate: 'sitemap',
    collection: 'files-o',
    coverage: 'th',
    application: 'android',
    sciencePaper: 'flask',
    userGuide: 'life-saver',
    dataDictionary: 'book',
    website: 'chrome',
    publication: 'file-text-o',
    report: 'file-text-o',
    awardInfo: 'file-o',
    collectionSite: 'map-marker',
    project: 'wrench',
    factSheet: 'file-o',
    tabularDataset: 'table',
    map: 'map-o',
    drawing: 'picture-o',
    photographicImage: 'camera',
    presentation: 'file-powerpoint-o',
    defaultFile: 'file-o',
    defaultList: 'caret-right',
    individuals: 'user',
    organizations: 'users'
  });
  _exports.default = _default;
});
;define("mdeditor/services/in-viewport", ["exports", "ember-in-viewport/services/in-viewport"], function (_exports, _inViewport) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _inViewport.default;
    }
  });
});
;define("mdeditor/services/itis", ["exports", "ember-cli-string-helpers/utils/titleize", "ember-ajax/errors"], function (_exports, _titleize, _errors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  //import moment from 'moment';

  const console = window.console;
  const proxy = 'https://itis-cors.herokuapp.com/https://services.itis.gov?' + 'wt=json' + '&sort=score%20desc,nameWOInd%20asc' + '&fl=hierarchySoFarWRanks,hierarchyTSN,kingdom,rank,vernacular,tsn,nameWOInd,usage';
  const Taxa = Ember.Object.extend({
    style: Ember.computed('status', function () {
      let status = this.status;
      return status === 'valid' || status === 'accepted' ? 'success' : 'danger';
    })
  });
  var _default = Ember.Service.extend({
    init() {
      this._super(...arguments);
      this.kingdoms = {
        "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomNameList",
        "kingdomNames": [{
          "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomName",
          "kingdomId": "1",
          "kingdomName": "Bacteria",
          "title": "Bacteria",
          "tsn": "50"
        }, {
          "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomName",
          "kingdomId": "2",
          "kingdomName": "Protozoa",
          "title": "Protozoa",
          "tsn": "630577"
        }, {
          "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomName",
          "kingdomId": "3",
          "kingdomName": "Plantae",
          "title": "Plant",
          "tsn": "202422"
        }, {
          "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomName",
          "kingdomId": "4",
          "kingdomName": "Fungi",
          "title": "Fungal",
          "tsn": "555705"
        }, {
          "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomName",
          "kingdomId": "5",
          "kingdomName": "Animalia",
          "title": "Animal",
          "tsn": "202423"
        }, {
          "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomName",
          "kingdomId": "6",
          "kingdomName": "Chromista",
          "title": "Chromista",
          "tsn": "630578"
        }, {
          "class": "gov.usgs.itis.itis_service.metadata.SvcKingdomName",
          "kingdomId": "7",
          "kingdomName": "Archaea",
          "title": "Archaea",
          "tsn": "935939"
        }]
      };
      this.citation = Ember.Object.create({
        "title": "Integrated Taxonomic Information System (ITIS)",
        "date": [
          /*{
                  "date": moment().format('YYYY-MM-DD'),
                  "dateType": "transmitted"
                }*/
        ],
        "presentationForm": ["webService", "webSite"],
        "otherCitationDetails": ["Retrieved from the Integrated Taxonomic Information System on-line database, https://www.itis.gov."],
        "onlineResource": [{
          "uri": "https://www.itis.gov",
          "name": "ITIS website",
          "protocol": "HTTPS",
          "function": "information",
          "description": "ITIS contains taxonomic information on plants, animals, fungi, and microbes of North America and the world."
        }],
        "graphic": [{
          "fileName": "itis_logo.jpg",
          "fileType": "JPEG",
          "fileUri": [{
            "uri": "https://itis.gov/Static/images/itis_logo.jpg"
          }]
        }]
      });
    },
    ajax: Ember.inject.service(),
    flashMessages: Ember.inject.service(),
    isLoading: false,
    sendQuery(searchString, kingdom, limit = 50) {
      let formatted = searchString.replace(/(-| )/g, '*');
      let titleized = (0, _titleize.default)(searchString.replace(/(-)/g, '#')).replace(/( |#)/g, '*');
      let titleized2 = (0, _titleize.default)(searchString).replace(/( )/g, '*');
      let url = proxy + "&rows=".concat(limit, "&q=") + "(vernacular:*".concat(formatted, "*~0.5%20OR%20vernacular:*").concat(titleized, "*~0.5%20OR%20vernacular:*").concat(titleized2, "*~0.5") + "%20OR%20nameWOInd:".concat(formatted, "*~0.5%20OR%20nameWOInd:*").concat(titleized, "*~0.5") + "%20OR%20tsn:".concat(formatted, ")") + (kingdom ? "%20AND%20kingdom:".concat(kingdom, "&") : '');
      return this.ajax.request(url, {
        method: 'GET'
      }).catch(error => {
        if ((0, _errors.isNotFoundError)(error)) {
          // handle 404 errors here
          console.log(error);
          this.flashMessages.warning('No taxa object found.');
          return;
        }
        if ((0, _errors.isForbiddenError)(error)) {
          // handle 403 errors here
          console.log(error);
          this.flashMessages.danger('Access to ITIS web service was denied.');
          return;
        }
        if ((0, _errors.isAjaxError)(error)) {
          // handle all other AjaxErrors here
          console.log(error);
          this.flashMessages.danger('An error occured during the ITIS query request.');
          return;
        }

        // other errors are handled elsewhere
        //throw error;
        console.log(error);
        this.flashMessages.danger('An error occured during the ITIS query request.');
      });
    },
    parseDoc(doc) {
      let {
        hierarchySoFarWRanks: ranks,
        hierarchyTSN,
        kingdom,
        nameWOInd: name,
        rank,
        tsn,
        vernacular,
        usage: status
      } = doc;
      let taxonomy = this.parseRanks(ranks, this.parseHierarchyTSN(hierarchyTSN));
      let common = this.parseVernacular(vernacular);
      if (common) {
        taxonomy.forEach(i => {
          let taxa = i.findBy('tsn', tsn);
          if (taxa) {
            Ember.set(taxa, 'common', common.mapBy('name'));
          }
        });
      }
      return Taxa.create({
        kingdom: kingdom,
        name: name,
        rank: rank,
        tsn: tsn,
        taxonomy: taxonomy,
        common: common,
        status: status
      });
    },
    parseHierarchyTSN(tsn) {
      return tsn.map(t => t.slice(1, t.length - 1).split('$'));
    },
    parseVernacular(vernacular) {
      if (!vernacular) {
        return null;
      }
      return vernacular.map(obj => {
        let v = obj.slice(1, obj.length - 1).split('$');
        return {
          name: v[0],
          language: v[1]
        };
      });
    },
    parseRanks(ranks, tsn) {
      return ranks.map((itm, i) => {
        let split = itm.split('$');
        let tsnArray = tsn[i];
        split.shift();
        split.pop();
        return split.map((obj, idx) => {
          let rank = obj.split(':');
          return {
            rank: rank[0],
            value: rank[1],
            order: idx,
            tsn: tsnArray[idx]
          };
        });
      });
    },
    getBranch(taxon, branches) {
      let branch = branches.filterBy('taxonomicLevel', taxon.rank).findBy('taxonomicName', taxon.value);
      if (!branch) {
        return branches.pushObject({
          "taxonomicSystemId": taxon.tsn,
          "taxonomicLevel": taxon.rank,
          "taxonomicName": taxon.value,
          "commonName": taxon.common,
          "subClassification": [],
          "isITIS": true
        });
      }
      return branch;
    },
    mergeTaxa(taxa, tree) {
      taxa.reduce((tree, taxon) => {
        let branch = this.getBranch(taxon, tree);
        let sub = Ember.get(branch, 'subClassification');
        if (!sub) {
          Ember.set(branch, 'subClassification', []);
        }
        return Ember.get(branch, 'subClassification');
      }, tree);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/services/jsonvalidator", ["exports", "ajv", "ajv/lib/refs/json-schema-draft-04"], function (_exports, _ajv, draft4) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  let validator = new _ajv.default({
    verbose: true,
    allErrors: true,
    removeAdditional: false,
    meta: false,
    schemaId: 'id'
  });

  //support draft-04
  validator.addMetaSchema(draft4);
  //add JSON API schema
  validator.addSchema({
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "JSON API Schema",
    "description": "This is a schema for responses in the JSON API format. For more, see http://jsonapi.org",
    "oneOf": [{
      "$ref": "#/definitions/success"
    }, {
      "$ref": "#/definitions/failure"
    }, {
      "$ref": "#/definitions/info"
    }],
    "definitions": {
      "success": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "$ref": "#/definitions/data"
          },
          "included": {
            "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
            "type": "array",
            "items": {
              "$ref": "#/definitions/resource"
            },
            "uniqueItems": true
          },
          "meta": {
            "$ref": "#/definitions/meta"
          },
          "links": {
            "description": "Link members related to the primary data.",
            "allOf": [{
              "$ref": "#/definitions/links"
            }, {
              "$ref": "#/definitions/pagination"
            }]
          },
          "jsonapi": {
            "$ref": "#/definitions/jsonapi"
          }
        },
        "additionalProperties": false
      },
      "failure": {
        "type": "object",
        "required": ["errors"],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/error"
            },
            "uniqueItems": true
          },
          "meta": {
            "$ref": "#/definitions/meta"
          },
          "jsonapi": {
            "$ref": "#/definitions/jsonapi"
          }
        },
        "additionalProperties": false
      },
      "info": {
        "type": "object",
        "required": ["meta"],
        "properties": {
          "meta": {
            "$ref": "#/definitions/meta"
          },
          "links": {
            "$ref": "#/definitions/links"
          },
          "jsonapi": {
            "$ref": "#/definitions/jsonapi"
          }
        },
        "additionalProperties": false
      },
      "meta": {
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
        "type": "object",
        "additionalProperties": true
      },
      "data": {
        "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
        "oneOf": [{
          "$ref": "#/definitions/resource"
        }, {
          "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resource"
          },
          "uniqueItems": true
        }, {
          "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
          "type": "null"
        }]
      },
      "resource": {
        "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
        "type": "object",
        "required": ["type", "id"],
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/definitions/attributes"
          },
          "relationships": {
            "$ref": "#/definitions/relationships"
          },
          "links": {
            "$ref": "#/definitions/links"
          },
          "meta": {
            "$ref": "#/definitions/meta"
          }
        },
        "additionalProperties": false
      },
      "links": {
        "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
        "type": "object",
        "properties": {
          "self": {
            "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
            "type": "string",
            "format": "uri"
          },
          "related": {
            "$ref": "#/definitions/link"
          }
        },
        "additionalProperties": true
      },
      "link": {
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
        "oneOf": [{
          "description": "A string containing the link's URL.",
          "type": "string",
          "format": "uri"
        }, {
          "type": "object",
          "required": ["href"],
          "properties": {
            "href": {
              "description": "A string containing the link's URL.",
              "type": "string",
              "format": "uri"
            },
            "meta": {
              "$ref": "#/definitions/meta"
            }
          }
        }]
      },
      "attributes": {
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
        "type": "object",
        "patternProperties": {
          "^(?!relationships$|links$)\\w[-\\w_]*$": {
            "description": "Attributes may contain any valid JSON value."
          }
        },
        "additionalProperties": false
      },
      "relationships": {
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
        "type": "object",
        "patternProperties": {
          "^\\w[-\\w_]*$": {
            "properties": {
              "links": {
                "$ref": "#/definitions/links"
              },
              "data": {
                "description": "Member, whose value represents \"resource linkage\".",
                "oneOf": [{
                  "$ref": "#/definitions/relationshipToOne"
                }, {
                  "$ref": "#/definitions/relationshipToMany"
                }]
              },
              "meta": {
                "$ref": "#/definitions/meta"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "relationshipToOne": {
        "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
        "anyOf": [{
          "$ref": "#/definitions/empty"
        }, {
          "$ref": "#/definitions/linkage"
        }]
      },
      "relationshipToMany": {
        "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/linkage"
        },
        "uniqueItems": true
      },
      "empty": {
        "description": "Describes an empty to-one relationship.",
        "type": "null"
      },
      "linkage": {
        "description": "The \"type\" and \"id\" to non-empty members.",
        "type": "object",
        "required": ["type", "id"],
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/definitions/meta"
          }
        },
        "additionalProperties": false
      },
      "pagination": {
        "type": "object",
        "properties": {
          "first": {
            "description": "The first page of data",
            "oneOf": [{
              "type": "string",
              "format": "uri"
            }, {
              "type": "null"
            }]
          },
          "last": {
            "description": "The last page of data",
            "oneOf": [{
              "type": "string",
              "format": "uri"
            }, {
              "type": "null"
            }]
          },
          "prev": {
            "description": "The previous page of data",
            "oneOf": [{
              "type": "string",
              "format": "uri"
            }, {
              "type": "null"
            }]
          },
          "next": {
            "description": "The next page of data",
            "oneOf": [{
              "type": "string",
              "format": "uri"
            }, {
              "type": "null"
            }]
          }
        }
      },
      "jsonapi": {
        "description": "An object describing the server's implementation",
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/definitions/meta"
          }
        },
        "additionalProperties": false
      },
      "error": {
        "type": "object",
        "properties": {
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "type": "string"
          },
          "links": {
            "$ref": "#/definitions/links"
          },
          "status": {
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "type": "string"
          },
          "code": {
            "description": "An application-specific error code, expressed as a string value.",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                "type": "string"
              },
              "parameter": {
                "description": "A string indicating which query parameter caused the error.",
                "type": "string"
              }
            }
          },
          "meta": {
            "$ref": "#/definitions/meta"
          }
        },
        "additionalProperties": false
      }
    }
  }, 'jsonapi');
  var _default = Ember.Service.extend({
    validator: validator
  });
  _exports.default = _default;
});
;define("mdeditor/services/keyword", ["exports", "gcmd-keywords", "mdkeywords", "mdcodes/resources/js/iso_topicCategory"], function (_exports, _gcmdKeywords, _mdkeywords, _iso_topicCategory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  let service = Ember.Object.create({
    thesaurus: Ember.A(),
    findById(id) {
      return this.thesaurus.find(function (t) {
        return t.citation.identifier[0].identifier === id;
      });
    }
  });
  let type = {
    'Platforms': 'platform',
    'Instruments': 'instrument'
  };
  Object.keys(_gcmdKeywords.GCMD).forEach(function (key) {
    if (Array.isArray(_gcmdKeywords.GCMD[key])) {
      service.get('thesaurus').pushObject({
        citation: {
          date: [{
            date: _gcmdKeywords.GCMD.version.date,
            dateType: 'revision'
          }],
          title: 'Global Change Master Directory (GCMD) ' + _gcmdKeywords.GCMD[key][0].label,
          edition: 'Version ' + _gcmdKeywords.GCMD.version.edition,
          onlineResource: [{
            uri: 'https://earthdata.nasa.gov/gcmd-forum'
          }],
          identifier: [{
            identifier: _gcmdKeywords.GCMD[key][0].uuid
          }]
        },
        keywords: _gcmdKeywords.GCMD[key][0].children,
        keywordType: type[_gcmdKeywords.GCMD[key][0].label] || 'theme',
        label: 'GCMD ' + _gcmdKeywords.GCMD[key][0].label
      });
    }
  });
  let isoKeywords = _iso_topicCategory.default.codelist.map(topic => {
    return {
      label: topic.codeName,
      definition: topic.description,
      uuid: topic.code
    };
  });
  service.get('thesaurus').pushObject({
    citation: {
      date: [{
        date: '2014-04',
        dateType: 'revision'
      }],
      title: 'ISO 19115 Topic Category',
      edition: 'ISO 19115-1:2014',
      onlineResource: [{
        uri: 'https://doi.org/10.18123/D6RP4M'
      }],
      identifier: [{
        identifier: 'ISO 19115 Topic Category'
      }]
    },
    keywords: isoKeywords,
    keywordType: 'isoTopicCategory',
    label: 'ISO Topic Category'
  });
  service.get('thesaurus').pushObjects(_mdkeywords.default.asArray());
  var _default = Ember.Service.extend(service);
  _exports.default = _default;
});
;define("mdeditor/services/liquid-fire-transitions", ["exports", "liquid-fire/transition-map"], function (_exports, _transitionMap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _transitionMap.default;
  _exports.default = _default;
});
;define("mdeditor/services/mdjson", ["exports", "ajv", "mdjson-schemas/resources/js/schemas", "mdeditor/pods/components/object/md-citation/component", "ajv/lib/refs/json-schema-draft-04"], function (_exports, _ajv, _schemas, _component, draft4) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  Ember.libraries.register('mdJson-schemas', _schemas.default.schema.version);
  const validator = new _ajv.default({
    verbose: true,
    allErrors: true,
    jsonPointers: true,
    removeAdditional: false,
    meta: false,
    schemaId: 'id'
  });

  //support draft-04
  validator.addMetaSchema(draft4);
  Object.keys(_schemas.default).forEach(function (key) {
    if (key === 'default') {
      return;
    }
    let val = _schemas.default[key];
    validator.addSchema(val, key);
  });
  const unImplemented = ['metadata.metadataInfo.otherMetadataLocale', 'metadata.resourceInfo.spatialRepresentation', ['metadata.resourceInfo.extent', 'verticalExtent'], ['metadata.resourceInfo.extent', 'temporalExtent'], 'metadata.resourceInfo.coverageDescription',
  //'metadata.resourceInfo.taxonomy',
  'metadata.resourceInfo.otherResourceLocale'
  //'metadata.resourceInfo.resourceMaintenance'
  ];
  var _default = Ember.Service.extend({
    cleaner: Ember.inject.service(),
    contacts: Ember.inject.service(),
    store: Ember.inject.service(),
    injectCitations(json) {
      let assoc = json.metadata.associatedResource;
      if (assoc) {
        let refs = assoc.reduce((acc, itm) => {
          if (itm.mdRecordId) {
            acc.push(itm);
          }
          return acc;
        }, []);
        let records = this.store.peekAll('record').filterBy('recordId');
        refs.forEach(ref => {
          let record = records.findBy('recordId', ref.mdRecordId);
          if (record) {
            let info = Ember.get(record, 'json.metadata.metadataInfo') || {};
            let metadata = {
              'title': "Metadata for ".concat(Ember.get(record, 'title')),
              'responsibleParty': Ember.getWithDefault(info, 'metadataContact', []),
              'date': Ember.getWithDefault(info, 'metadataDate', []),
              'onlineResource': Ember.getWithDefault(info, 'metadataOnlineResource', []),
              'identifier': [Ember.getWithDefault(info, 'metadataIdentifier', {})]
            };
            let citation = Ember.get(record, 'json.metadata.resourceInfo.citation') || {};
            let resourceType = Ember.get(record, 'json.metadata.resourceInfo.resourceType') || [];
            Ember.set(ref, 'resourceCitation', Ember.Object.create((0, _component.formatCitation)(citation)));
            Ember.set(ref, 'metadataCitation', Ember.Object.create((0, _component.formatCitation)(metadata)));
            Ember.set(ref, 'resourceType', resourceType);
            Ember.set(ref, 'mdRecordId', null);
            return;
          }
          Ember.set(ref, 'mdRecordId', null);
        });
      }
    },
    injectDictionaries(rec, json) {
      let ids = rec.get('json.mdDictionary') || [];
      let arr = [];
      if (ids.length) {
        let dicts = this.store.peekAll('dictionary').filterBy('dictionaryId');
        ids.forEach(id => {
          let record = dicts.findBy('dictionaryId', id);

          // dictionaryId is important, but it's not in "dataDictionary" - I feel like it
          // should be included so the id can be stable when importing/exporting
          //
          // fixes https://github.com/adiwg/mdTranslator/issues/238
          record.set('json.dataDictionary.dictionaryId', id);
          if (record) {
            arr.pushObject(record.get('json.dataDictionary'));
          }
        });
      }
      Ember.set(json, 'dataDictionary', arr);
    },
    formatRecord(rec, asText) {
      let _contacts = [];
      let conts = this.contacts;
      const _replacer = function _replacer(key, value) {
        let check = {
          contactId: true,
          sourceId: true,
          recipientId: true
        };
        if (key === 'sourceId' && !('amount' in this || 'currency' in this)) {
          //console.log(this);
          return value;
        }
        if (check[key] && !_contacts.includes(value)) {
          let contact = conts.get('contacts').findBy('contactId', value);
          if (!contact) {
            return null;
          }
          let orgs = Ember.isArray(contact.get('json.memberOfOrganization')) ? contact.get('json.memberOfOrganization').slice(0) : null;
          _contacts.push(value);
          if (orgs && orgs.length) {
            orgs.forEach(itm => {
              let org = conts.get('contacts').findBy('contactId', itm);
              if (!org) {
                return;
              }
              if (!_contacts.includes(itm) && org) {
                _contacts.push(itm);
              }
              let iOrgs = org.get('json.memberOfOrganization');
              if (iOrgs.length) {
                iOrgs.forEach(iOrg => {
                  if (!_contacts.includes(iOrg)) {
                    orgs.push(iOrg);
                  }
                });
              }
            });
          }
        }
        return value;
      };
      let cleaner = this.cleaner;
      let clean = cleaner.clean(Ember.get(rec, 'json'));
      this.injectCitations(clean);
      this.injectDictionaries(rec, clean);
      let json = JSON.parse(JSON.stringify(cleaner.clean(clean), _replacer));
      let contacts = this.store.peekAll('contact').mapBy('json');
      json.contact = contacts.filter(item => {
        return _contacts.includes(Ember.get(item, 'contactId'));
      });
      if (unImplemented) {
        unImplemented.forEach(path => {
          let array = Ember.isArray(path);
          let target = array ? Ember.get(json, path[0]) : Ember.get(json, path);
          if (target) {
            if (array) {
              target.forEach(item => {
                Ember.set(item, path[1], undefined);
              });
              return;
            }
            Ember.set(json, path, undefined);
          }
        });
      }
      return asText ? JSON.stringify(cleaner.clean(json)) : cleaner.clean(json);
    },
    validateRecord(record) {
      validator.validate('schema', this.formatRecord(record));
      return validator;
    },
    validateContact(contact) {
      validator.validate('contact', contact.get('cleanJson'));
      return validator;
    },
    validateDictionary(dictionary) {
      validator.validate('dataDictionary', dictionary.get('cleanJson').dataDictionary);
      return validator;
    }
  });
  _exports.default = _default;
});
;define("mdeditor/services/modal-dialog", ["exports", "mdeditor/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  function computedFromConfig(prop) {
    return Ember.computed(function () {
      return _environment.default['ember-modal-dialog'] && _environment.default['ember-modal-dialog'][prop];
    });
  }
  var _default = Ember.Service.extend({
    hasEmberTether: computedFromConfig('hasEmberTether'),
    hasLiquidWormhole: computedFromConfig('hasLiquidWormhole'),
    hasLiquidTether: computedFromConfig('hasLiquidTether'),
    destinationElementId: null // injected by initializer
  });
  _exports.default = _default;
});
;define("mdeditor/services/moment", ["exports", "ember-moment/services/moment", "mdeditor/config/environment"], function (_exports, _moment, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    get
  } = Ember;
  var _default = _moment.default.extend({
    defaultFormat: get(_environment.default, 'moment.outputFormat')
  });
  _exports.default = _default;
});
;define("mdeditor/services/page-title-list", ["exports", "ember-page-title/services/page-title-list", "mdeditor/config/environment"], function (_exports, _pageTitleList, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  function capitalize(key) {
    return key.charAt(0).toUpperCase() + key.slice(1);
  }
  let defaults = {};
  ['separator', 'prepend', 'replace'].forEach(function (key) {
    if (_environment.default.pageTitle && _environment.default.pageTitle[key]) {
      defaults["default".concat(capitalize(key))] = _environment.default.pageTitle[key];
    }
  });
  var _default = _pageTitleList.default.extend(defaults);
  _exports.default = _default;
});
;define("mdeditor/services/patch", ["exports", "mdjson-schemas/resources/js/schemas"], function (_exports, _schemas) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Service.extend({
    applyModelPatch(record) {
      let type = record.constructor.modelName;
      switch (type) {
        case 'contact':
          record.get('json.address').forEach(itm => {
            let oldAdm = Ember.get(itm, 'adminstrativeArea');
            if (oldAdm) {
              Ember.set(itm, 'administrativeArea', oldAdm);
              Ember.set(itm, 'adminstrativeArea', null);
            }
          });
          record.set('json.memberOfOrganization', Ember.A(record.get('json.memberOfOrganization')).uniq());
          record.save().then(function () {
            record.notifyPropertyChange('currentHash');
          });
          break;
        case 'record':
          {
            //fix lineage
            let lineage = record.get('json.metadata.resourceLineage');
            if (Ember.isArray(lineage)) {
              lineage.forEach(itm => {
                let source = Ember.get(itm, 'source');
                if (Ember.isArray(source)) {
                  source.forEach(src => {
                    Ember.set(src, 'description', Ember.getWithDefault(src, 'description', Ember.get(src, 'value')));
                    Ember.set(src, 'value', null);
                  });
                  record.save().then(function () {
                    record.notifyPropertyChange('currentHash');
                  });
                }
                let step = Ember.get(itm, 'processStep');
                if (Ember.isArray(step)) {
                  step.forEach(step => {
                    let source = Ember.get(step, 'stepSource');
                    if (Ember.isArray(source)) {
                      source.forEach(src => {
                        Ember.set(src, 'description', Ember.getWithDefault(src, 'description', Ember.get(src, 'value')));
                        Ember.set(src, 'value', null);
                      });
                      record.save().then(function () {
                        record.notifyPropertyChange('currentHash');
                      });
                    }
                  });
                }
              });
            }
            //fix taxonomy
            let taxonomy = record.get('json.metadata.resourceInfo.taxonomy');
            if (taxonomy) {
              if (!Ember.isArray(taxonomy)) {
                taxonomy = [taxonomy];
                record.set('json.metadata.resourceInfo.taxonomy', taxonomy);
              }
              taxonomy.forEach(itm => {
                let classification = Ember.get(itm, 'taxonomicClassification');
                if (classification && !Ember.isArray(classification)) {
                  let fixNames = taxon => {
                    taxon.taxonomicName = taxon.taxonomicName || taxon.latinName;
                    taxon.taxonomicLevel = taxon.taxonomicLevel || taxon.taxonomicRank;
                    if (Ember.isArray(taxon.subClassification)) {
                      taxon.subClassification.forEach(t => fixNames(t));
                    }
                  };
                  fixNames(classification);
                  Ember.set(itm, 'taxonomicClassification', [classification]);
                  let refs = Ember.get(itm, 'identificationReference');
                  if (Ember.isArray(refs)) {
                    let fixedRefs = [];
                    refs.forEach(ref => {
                      fixedRefs.pushObject({
                        "identifier": [ref]
                      });
                    });
                    Ember.set(itm, 'identificationReference', fixedRefs);
                  }
                }
              });
            }

            //fix srs identifiers
            let srs = record.get('json.metadata.resourceInfo.spatialReferenceSystem');
            if (srs) {
              srs.forEach(itm => {
                let projObj = Ember.get(itm, 'referenceSystemParameterSet.projection');
                let geoObj = Ember.get(itm, 'referenceSystemParameterSet.geodetic');
                let vertObj = Ember.get(itm, 'referenceSystemParameterSet.verticalDatum');
                if (projObj) {
                  let {
                    projection,
                    projectionName,
                    projectionIdentifier
                  } = projObj;
                  if (!projectionIdentifier || projection) {
                    Ember.set(projObj, 'projectionIdentifier', {
                      identifier: projection,
                      name: projectionName
                    });
                    Ember.setProperties(projObj, {
                      projection: null,
                      projectionName: null
                    });
                  }
                }
                if (geoObj && (geoObj.datumName || geoObj.ellipsoidName)) {
                  if (geoObj.datumName) {
                    Ember.set(geoObj, 'datumIdentifier', {
                      identifier: geoObj.datumName
                    });
                  }
                  if (geoObj.ellipsoidName) {
                    Ember.set(geoObj, 'ellipsoidIdentifier', {
                      identifier: geoObj.ellipsoidName
                    });
                  }
                  Ember.setProperties(geoObj, {
                    datumName: null,
                    ellipsoidName: null
                  });
                }
                if (vertObj && vertObj.datumName) {
                  if (vertObj.datumName) {
                    Ember.set(vertObj, 'datumIdentifier', {
                      identifier: vertObj.datumName
                    });
                  }
                  Ember.set(vertObj, 'datumName', null);
                }
              });
            }

            //fix transfer format edition
            let distribution = record.get('json.metadata.resourceDistribution');
            if (distribution) {
              distribution.forEach(itm => {
                if (itm.distributor) {
                  itm.distributor.forEach(itm => {
                    if (itm.transferOption) {
                      itm.transferOption.forEach(itm => {
                        if (itm.distributionFormat) {
                          itm.distributionFormat.forEach(format => {
                            if (format.amendmentNumber && format.formatSpecification && !format.formatSpecification.edition) {
                              Ember.set(format, 'formatSpecification.edition', format.amendmentNumber);
                              return;
                            }
                            if (format.amendmentNumber && !format.formatSpecification) {
                              Ember.set(format, 'formatSpecification', {
                                edition: format.amendmentNumber
                              });
                              return;
                            }
                          });
                        }
                      });
                    }
                  });
                }
              });
            }

            //fix allocation comment
            let funding = record.get('json.metadata.funding');
            if (funding) {
              funding.forEach(itm => {
                if (itm.allocation) {
                  itm.allocation.forEach(itm => {
                    if (itm.description && !itm.comment) {
                      Ember.set(itm, 'comment', itm.description);
                      Ember.set(itm, 'description', null);
                    }
                  });
                }
              });
            }

            //fix metadataRepository title
            let repo = record.get('json.metadataRepository');
            if (Ember.isArray(repo)) {
              repo.forEach(itm => {
                let titles = Ember.get(itm, 'citation.titles');
                if (titles) {
                  Ember.set(itm, 'citation.title', Ember.getWithDefault(itm, 'citation.titles', Ember.get(itm, 'title')));
                  Ember.set(itm, 'citation.titles', null);
                  record.save().then(function () {
                    record.notifyPropertyChange('currentHash');
                  });
                }
              });
            }
            record.set('json.schema.version', _schemas.default.schema.version);
            record.save().then(function () {
              record.notifyPropertyChange('currentHash');
            });
            break;
          }
      }
    }
  });
  _exports.default = _default;
});
;define("mdeditor/services/profile", ["exports", "ember-ajax/request", "ember-concurrency", "ember-ajax/errors", "semver", "mdprofiles"], function (_exports, _request, _emberConcurrency, _errors, _semver, _mdprofiles) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  Ember.libraries.register('mdProfiles', _mdprofiles.default.version);
  const coreProfiles = _mdprofiles.default.asArray();

  /**
   * Profile service
   *
   * Service that provides profile configurations for metadata records.
   *
   * @module mdeditor
   * @submodule service
   * @class profile
   */
  var _default = Ember.Service.extend({
    init() {
      this._super(...arguments);
      this.profileRecords = this.store.peekAll('profile');
      //this.customProfiles = this.get('store').peekAll('custom-profile');
      this.coreProfiles = coreProfiles;
    },
    profiles: Ember.computed.union('profileRecords', 'coreProfiles'),
    flashMessages: Ember.inject.service(),
    store: Ember.inject.service(),
    /**
     * Task that fetches the definition. Returns a Promise the yields the response.
     *
     * @method fetchDefinition
     * @param {String} uri The uri of the definition
     * @async
     * @return {Promise} The request response
     */
    fetchDefinition: (0, _emberConcurrency.task)(function* (uri) {
      try {
        yield (0, _emberConcurrency.timeout)(1000);
        let response = yield (0, _request.default)(uri);
        if (response && !_semver.default.valid(response.version)) {
          throw new Error("Invalid version");
        }
        return response;
      } catch (error) {
        if ((0, _errors.isNotFoundError)(error)) {
          this.flashMessages.danger("Could not load profile definition from ".concat(uri, ". Definition not found."));
        } else {
          this.flashMessages.danger("Could not load profile definition from \"".concat(uri, "\". Error: ").concat(error.message));
        }
      }
    }).drop(),
    /**
     * Task that checks the for updates at each `record.uri`.
     *
     * @method checkForUpdates
     * @param {Array} records Array of records to check
     * @async
     * @return {Promise} The request response
     */
    checkForUpdates: (0, _emberConcurrency.task)(function* (records) {
      yield (0, _emberConcurrency.timeout)(1000);
      yield (0, _emberConcurrency.all)(records.map(itm => {
        if (itm.validations.attrs.uri.isInvalid) {
          this.flashMessages.warning("Did not load definition for \"".concat(itm.title, "\". URL is Invalid."));
          return;
        }
        return (0, _request.default)(itm.uri).then(response => {
          // `response` is the data from the server
          if (_semver.default.valid(response.version)) {
            itm.set('remoteVersion', response.version);
          } else {
            throw new Error("Invalid version");
          }
          return response;
        }).catch(error => {
          if ((0, _errors.isNotFoundError)(error)) {
            this.flashMessages.danger("Could not load definition for \"".concat(itm.title, "\". Definition not found."));
          } else {
            this.flashMessages.danger("Could not load definition for \"".concat(itm.title, "\". Error: ").concat(error.message));
          }
        });
      }));
    }).drop()
  });
  _exports.default = _default;
});
;define("mdeditor/services/publish", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Service.extend({
    catalogs: Ember.A()
  });
  _exports.default = _default;
});
;define("mdeditor/services/resize", ["exports", "ember-resize/services/resize"], function (_exports, _resize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _resize.default;
    }
  });
});
;define("mdeditor/services/schemas", ["exports", "json-schema-ref-parser", "ember-ajax/request", "ember-concurrency", "ember-ajax/errors", "semver"], function (_exports, _jsonSchemaRefParser, _request, _emberConcurrency, _errors, _semver) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const parser = new _jsonSchemaRefParser.default();
  var _default = Ember.Service.extend({
    init() {
      this._super(...arguments);

      /**
       * Instance of JSON Schema $Ref Parser
       *
       * @method parser
       * @protected
       * @return {Object}
       */
      this.parser = parser;
      this.schemas = this.store.peekAll('schema');
    },
    store: Ember.inject.service(),
    flashMessages: Ember.inject.service(),
    globalSchemas: Ember.computed.filterBy('schemas', 'isGlobal'),
    fetchSchemas: (0, _emberConcurrency.task)(function* (url) {
      yield (0, _emberConcurrency.timeout)(1000);
      return yield this.parser.resolve(url).then($refs => {
        let paths = $refs.paths();
        let values = parser.$refs.values();
        return paths.map(path => {
          return {
            id: path,
            schema: values[path]
          };
        });
      });
    }).drop(),
    // compileSchemas(schemas) {
    //   let ajv = ajvErrors(new Ajv(options));
    //
    //
    //   ajv.addMetaSchema(draft4);
    //   ajv.addSchema(schemas);
    //
    //   return ajv;
    // },

    checkForUpdates: (0, _emberConcurrency.task)(function* (records) {
      yield (0, _emberConcurrency.timeout)(1000);
      yield (0, _emberConcurrency.all)(records.map(itm => {
        if (itm.validations.attrs.uri.isInvalid) {
          this.flashMessages.warning("Did not load schema for \"".concat(itm.title, "\". URL is Invalid."));
          return;
        }
        return (0, _request.default)(itm.uri).then(response => {
          // `response` is the data from the server
          if (_semver.default.valid(response.version)) {
            itm.set('remoteVersion', response.version);
          } else {
            throw new Error("Invalid version");
          }
          return response;
        }).catch(error => {
          if ((0, _errors.isNotFoundError)(error)) {
            this.flashMessages.danger("Could not load schema for \"".concat(itm.title, "\". Schema not found."));
          } else {
            this.flashMessages.danger("Could not load schema for \"".concat(itm.title, "\". Error: ").concat(error.message));
          }
        });
      }));
    }).drop()
  });
  _exports.default = _default;
});
;define("mdeditor/services/settings", ["exports", "mdeditor/config/environment", "mdeditor/models/setting"], function (_exports, _environment, _setting) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const {
    APP: {
      version
    },
    environment
  } = _environment.default;
  var _default = Ember.Service.extend({
    store: Ember.inject.service(),
    data: 'null',
    init() {
      this._super(...arguments);
      this.setup();
    },
    setup() {
      let me = this;
      let settings;
      let store = this.store;
      store.findAll('setting').then(function (s) {
        let rec = s.get('firstObject');
        settings = rec ? rec : store.createRecord('setting');
        if (settings.get('lastVersion') !== version) {
          settings.set('showSplash', environment !== 'test');
          settings.set('lastVersion', version);
        }
        Ember.set(settings, 'repositoryDefaults', Ember.getWithDefault(settings, 'repositoryDefaults', []));

        //update mdTranslatorAPI if default is being used
        let isDefaultAPI = Ember.isEmpty(settings.get('mdTranslatorAPI')) || settings.get('mdTranslatorAPI').match('https://mdtranslator.herokuapp.com/api/v(.)/translator');
        if (isDefaultAPI) {
          settings.set('mdTranslatorAPI', _setting.defaultValues.mdTranslatorAPI);
        }
        settings.notifyPropertyChange('hasDirtyAttributes');
        if (!(me.get('isDestroyed') || me.get('isDestroying'))) {
          me.set('data', settings);
        }
      });
    },
    repositoryTemplate: Ember.Object.extend({
      init() {
        this._super(...arguments);
      }
    })
  });
  _exports.default = _default;
});
;define("mdeditor/services/slider", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Service.extend({
    init() {
      this._super(...arguments);
      this.get('router.currentRouteName');
    },
    router: Ember.inject.service(),
    showSlider: false,
    fromName: 'md-slider-content',
    routeObserver: Ember.observer('router.currentRouteName', function () {
      this.toggleSlider(false);
      this.set('fromName', 'md-slider-content');
    }),
    onClose() {},
    toggleSlider(state) {
      if (state === undefined) {
        this.toggleProperty('showSlider');
        return;
      }
      this.set('showSlider', !!state);
    }
  });
  _exports.default = _default;
});
;define("mdeditor/services/spotlight", ["exports", "jquery", "ember-concurrency"], function (_exports, _jquery, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Service.extend({
    show: false,
    elementId: undefined,
    setTarget(id, onClose, scope) {
      let el = this.elementId;
      if (id === el) {
        this.close();
        return;
      }
      if (id && id !== el) {
        (0, _jquery.default)('#' + el).removeClass('md-spotlight-target');
      }
      Ember.setProperties(this, {
        show: true,
        elementId: id,
        onClose: onClose,
        scope: scope
      });
      (0, _jquery.default)('body').addClass('md-no-liquid');
      (0, _jquery.default)('#' + id).addClass('md-spotlight-target');
    },
    closeTask: (0, _emberConcurrency.task)(function* () {
      let id = this.elementId;
      let onClose = this.onClose;
      (0, _jquery.default)('.md-spotlight-overlay').addClass('fade-out-fast');
      if (onClose) {
        onClose.call(this.scope || this);
      }
      yield (0, _emberConcurrency.timeout)(250);
      if (Ember.isPresent(id)) {
        (0, _jquery.default)('body').removeClass('md-no-liquid');
        (0, _jquery.default)('#' + id).removeClass('md-spotlight-target');
      }
      Ember.setProperties(this, {
        show: false,
        elementId: undefined,
        onClose: undefined,
        scope: undefined
      });
    }).drop(),
    close() {
      this.closeTask.perform();
    }
  });
  _exports.default = _default;
});
;define("mdeditor/services/text-measurer", ["exports", "ember-text-measurer/services/text-measurer"], function (_exports, _textMeasurer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _textMeasurer.default;
    }
  });
});
;define("mdeditor/shapefile", ["exports", "shapefile"], function (_exports, _shapefile) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "shapefile", {
    enumerable: true,
    get: function get() {
      return _shapefile.default;
    }
  });
});
;define("mdeditor/templates/application", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "6Nfd6UAs",
    "block": "{\"symbols\":[\"title\",\"flash\",\"component\",\"flash\"],\"statements\":[[1,[22,\"head-layout\"],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"md-message-container\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"md-message-wrapper\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"flashMessages\",\"queue\"]]],null,{\"statements\":[[4,\"flash-message\",null,[[\"flash\"],[[23,2,[]]]],{\"statements\":[[0,\"    \"],[1,[23,4,[\"message\"]],false],[0,\"\\n\"],[4,\"if\",[[23,4,[\"showProgress\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"progress\"],[8],[0,\"\\n\"],[0,\"      \"],[7,\"div\",true],[10,\"class\",\"progress-bar\"],[10,\"role\",\"progressbar\"],[11,\"aria-valuenow\",[23,4,[\"progressValue\"]]],[10,\"aria-valuemin\",\"0\"],[10,\"aria-valuemax\",\"100\"],[11,\"style\",[28,\"html-safe\",[[28,\"concat\",[\"width:\",[23,4,[\"progressValue\"]],\"%;\"],null]],null]],[8],[0,\"\\n        \"],[1,[23,4,[\"progressValue\"]],false],[0,\"%\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[3,4]},null]],\"parameters\":[2]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"md-title\",null,null,{\"statements\":[[0,\"  \"],[1,[28,\"page-title\",[[23,1,[]]],[[\"replace\"],[false]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"id\",\"md-wrapper\"],[10,\"class\",\"\"],[8],[0,\"\\n\\n\"],[4,\"layout/md-slider\",null,[[\"visible\",\"fromName\",\"onClose\",\"context\"],[[24,[\"slider\",\"showSlider\"]],[24,[\"slider\",\"fromName\"]],[24,[\"slider\",\"onClose\"]],[24,[\"slider\",\"context\"]]]],{\"statements\":[],\"parameters\":[]},null],[0,\"\\n\"],[0,\"    \"],[1,[28,\"layout/md-nav-sidebar\",null,[[\"items\"],[[24,[\"model\"]]]]],false],[0,\"\\n\"],[0,\"\\n\"],[0,\"  \"],[7,\"div\",true],[10,\"id\",\"md-page-content-wrapper\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"id\",\"md-navbars\"],[8],[0,\"\\n\"],[4,\"layout/md-nav-main\",null,null,{\"statements\":[[0,\"        \"],[1,[28,\"from-elsewhere\",null,[[\"name\"],[\"nav-main\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[22,\"layout/md-breadcrumb\"],false],[0,\"\\n      \"],[1,[28,\"from-elsewhere\",null,[[\"name\"],[\"nav-secondary\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"id\",\"md-page-content\"],[10,\"class\",\"container-fluid\"],[8],[0,\"\\n      \"],[1,[22,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[0,\"  \"],[1,[28,\"layout/md-footer\",null,[[\"class\"],[\"hidden-print\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[22,\"ember-load-remover\"],false],[0,\"\\n\\n\"],[4,\"control/md-modal\",null,[[\"isShowing\",\"showConfirm\",\"confirmLabel\"],[[24,[\"settings\",\"data\",\"showSplash\"]],true,\"OK\"]],{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[10,\"role\",\"alert\"],[8],[1,[28,\"fa-icon\",[\"exclamation-triangle\"],null],false],[0,\" Update Alert\"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"alert alert-warning\"],[10,\"role\",\"alert\"],[8],[1,[28,\"fa-icon\",[\"wrench\"],null],false],[0,\"\\n        This application is in beta testing,  \"],[7,\"a\",true],[10,\"href\",\"https://github.com/adiwg/mdEditor/issues\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[0,\"please let us know\"],[9],[0,\" if you find any bugs.\\n        Thank-you!\\n    \"],[9],[0,\"\\n    \"],[7,\"p\",true],[8],[0,\"\\n        The  md\"],[7,\"span\",true],[10,\"class\",\"md-icon-mdeditor\"],[8],[9],[0,\"ditor has been updated\\n        since your last session. Some features may have been added or changed.\\n        Please note the version below (also shown in the \"],[4,\"link-to\",null,[[\"route\"],[\"settings\"]],{\"statements\":[[0,\"Settings\"]],\"parameters\":[]},null],[0,\") when reporting bugs or issues. If you\\n        are having problems, you might want to \"],[4,\"link-to\",null,[[\"route\"],[\"settings\"]],{\"statements\":[[0,\" clear\\n        your localstorage\"]],\"parameters\":[]},null],[0,\" which will delete all records. This\\n        application is in beta but \"],[7,\"strong\",true],[10,\"class\",\"text-warning\"],[8],[0,\"SHOULD BE\"],[9],[0,\"\\n        safe for production use.\\n    \"],[9],[0,\"\\n    \"],[7,\"p\",true],[8],[0,\"\\n        Current Version: \"],[7,\"span\",true],[10,\"class\",\"text-info\"],[8],[1,[22,\"control/md-repo-link\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"spotlight\",\"show\"]]],null,{\"statements\":[[0,\"  \"],[1,[22,\"control/md-spotlight\"],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"control/md-scroll-spy\",null,[[\"scrollInit\",\"routeName\"],[\"top\",[24,[\"currentRoute\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/application.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/components/draggable-object-target", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "C4DoGbs8",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"enableClicking\"]]],null,{\"statements\":[[0,\"  \"],[7,\"a\",false],[12,\"href\",\"#\"],[3,\"action\",[[23,0,[]],\"acceptForDrop\"]],[8],[0,\"\\n    \"],[14,1],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/components/draggable-object-target.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/components/draggable-object", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "q52AKf0M",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"enableClicking\"]]],null,{\"statements\":[[0,\"  \"],[7,\"a\",false],[12,\"href\",\"#\"],[3,\"action\",[[23,0,[]],\"selectForDrag\"]],[8],[0,\"\\n    \"],[14,1],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/components/draggable-object.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/components/file-picker", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "SV+MVQ3L",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[24,[\"dropzone\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"file-picker__dropzone\"],[8],[0,\"\\n    \"],[14,1],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[14,1],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"preview\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"file-picker__preview\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"progress\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"showProgress\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"isProgressSupported\"]]],null,{\"statements\":[[0,\"      \"],[7,\"progress\",true],[11,\"value\",[22,\"progressValue\"]],[10,\"max\",\"100\"],[10,\"class\",\"file-picker__progress\"],[8],[1,[22,\"progress\"],false],[0,\" %\"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"file-picker__progress\"],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"file-picker__progress__value\"],[11,\"style\",[22,\"progressStyle\"]],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"input\",null,[[\"type\",\"value\",\"accept\",\"multiple\",\"class\"],[\"file\",[24,[\"file\"]],[24,[\"accept\"]],[24,[\"multiple\"]],\"file-picker__input\"]]],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/components/file-picker.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/components/leaflet-table/actions", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "WyCAeU8y",
    "block": "{\"symbols\":[],\"statements\":[[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-success\"],[12,\"title\",\"Zoom to Feature\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"zoomTo\",[24,[\"record\"]]]],[8],[1,[28,\"fa-icon\",[\"search\"],null],false],[9],[0,\"\\n\"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-info\"],[12,\"title\",\"Edit Properties\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],[24,[\"showForm\"]],[24,[\"record\"]]]],[8],[1,[28,\"fa-icon\",[\"pencil\"],null],false],[9],[0,\"\\n\"],[7,\"button\",false],[12,\"class\",\"btn btn-xs btn-danger\"],[12,\"title\",\"Delete Feature\"],[12,\"type\",\"button\"],[3,\"action\",[[23,0,[]],\"deleteFeature\",[24,[\"record\"]]]],[8],[1,[28,\"fa-icon\",[\"times\"],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/components/leaflet-table/actions.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/components/leaflet-table/row", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "qbJaHDlr",
    "block": "{\"symbols\":[\"column\"],\"statements\":[[7,\"tr\",false],[12,\"class\",[24,[\"record\",\"state\"]]],[3,\"action\",[[23,0,[]],\"mouseEnter\",[24,[\"record\"]]],[[\"on\"],[\"mouseEnter\"]]],[3,\"action\",[[23,0,[]],\"mouseLeave\",[24,[\"record\"]]],[[\"on\"],[\"mouseLeave\"]]],[3,\"action\",[[23,0,[]],[28,\"action\",[[23,0,[]],[24,[\"showForm\"]],[24,[\"record\"]]],null]],[[\"on\"],[\"doubleClick\"]]],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"processedColumns\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"isVisible\"]]],null,{\"statements\":[[0,\"      \"],[7,\"td\",true],[11,\"class\",[23,1,[\"className\"]]],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"template\"]]],null,{\"statements\":[[0,\"          \"],[15,[23,1,[\"template\"]],[1]],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"get\",[[24,[\"record\"]],[23,1,[\"propertyName\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null],[9],[0,\"\\n\"]],\"hasEval\":true}",
    "meta": {
      "moduleName": "mdeditor/templates/components/leaflet-table/row.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/components/object-bin", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "B+420cWI",
    "block": "{\"symbols\":[\"obj\",\"&default\"],\"statements\":[[4,\"draggable-object-target\",null,[[\"action\"],[[28,\"action\",[[23,0,[]],\"handleObjectDropped\"],null]]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"object-bin-title\"],[8],[1,[22,\"name\"],false],[9],[0,\"\\n  \"],[7,\"br\",true],[8],[9],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[4,\"draggable-object\",null,[[\"action\",\"content\"],[\"handleObjectDragged\",[23,1,[]]]],{\"statements\":[[0,\"      \"],[14,2,[[23,1,[]]]],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/components/object-bin.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/components/sortable-objects", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "f8gAZBRE",
    "block": "{\"symbols\":[\"&default\"],\"statements\":[[14,1]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/components/sortable-objects.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/head", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "7RfsztwR",
    "block": "{\"symbols\":[],\"statements\":[[7,\"title\",true],[8],[1,[24,[\"model\",\"title\"]],false],[9],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/head.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/nav-secondary", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.HTMLBars.template({
    "id": "xl/EYAhu",
    "block": "{\"symbols\":[],\"statements\":[[1,[22,\"layout/md-nav-secondary\"],false],[0,\"\\n\"]],\"hasEval\":false}",
    "meta": {
      "moduleName": "mdeditor/templates/nav-secondary.hbs"
    }
  });
  _exports.default = _default;
});
;define("mdeditor/templates/publish/sciencebase", ["exports", "mdeditor-sciencebase/templates/publish/sciencebase"], function (_exports, _sciencebase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sciencebase.default;
    }
  });
});
;define("mdeditor/themes/bootstrap3", ["exports", "ember-models-table/themes/bootstrap3"], function (_exports, _bootstrap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _bootstrap.default;
    }
  });
});
;define("mdeditor/themes/bootstrap4", ["exports", "ember-models-table/themes/bootstrap4"], function (_exports, _bootstrap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _bootstrap.default;
    }
  });
});
;define("mdeditor/themes/default", ["exports", "ember-models-table/themes/default"], function (_exports, _default) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _default.default;
    }
  });
});
;define("mdeditor/themes/ember-bootstrap-v3", ["exports", "ember-models-table/themes/ember-bootstrap-v3"], function (_exports, _emberBootstrapV) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberBootstrapV.default;
    }
  });
});
;define("mdeditor/themes/ember-bootstrap-v4", ["exports", "ember-models-table/themes/ember-bootstrap-v4"], function (_exports, _emberBootstrapV) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberBootstrapV.default;
    }
  });
});
;define("mdeditor/themes/ember-paper", ["exports", "ember-models-table/themes/ember-paper"], function (_exports, _emberPaper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberPaper.default;
    }
  });
});
;define("mdeditor/themes/ember-semanticui", ["exports", "ember-models-table/themes/ember-semanticui"], function (_exports, _emberSemanticui) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberSemanticui.default;
    }
  });
});
;define("mdeditor/themes/semanticui", ["exports", "ember-models-table/themes/ember-semanticui"], function (_exports, _emberSemanticui) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _emberSemanticui.default;
    }
  });
});
;define("mdeditor/togeojson", ["exports", "@mapbox/togeojson"], function (_exports, _togeojson) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "toGeoJSON", {
    enumerable: true,
    get: function get() {
      return _togeojson.default;
    }
  });
});
;define("mdeditor/transforms/json", ["exports", "ember-data"], function (_exports, _emberData) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _emberData.default.Transform.extend({
    clean: Ember.inject.service('cleaner'),
    deserialize(serialized) {
      let json = JSON.parse(serialized);
      if (Ember.isArray(json)) {
        return Ember.A(json);
      }
      return Ember.Object.create(json);
    },
    serialize(deserialized) {
      let target = Ember.isArray(deserialized) ? [] : {};
      return JSON.stringify(this.clean.clean(deserialized, {
        target: target
      }));
    }
  });
  _exports.default = _default;
});
;define("mdeditor/transitions", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  function _default() {
    this.transition(this.toRoute('record.show.edit.main.citation'), this.fromRoute('record.show.edit.main.index'), this.use('toLeft'), this.reverse('toRight')
    //,this.debug()
    );

    this.transition(this.toRoute('record.show.edit.main.citation.identifier'), this.fromRoute('record.show.edit.main.citation.index'), this.use('toLeft'), this.reverse('toRight')
    //,this.debug()
    );

    this.transition(this.toRoute('record.show.edit.metadata.identifier'), this.fromRoute('record.show.edit.metadata.index'), this.use('toLeft'), this.reverse('toRight')
    //,this.debug()
    );

    this.transition(this.toRoute('record.show.edit.metadata.alternate'), this.fromRoute('record.show.edit.metadata.index'), this.use('toLeft'), this.reverse('toRight')
    //,this.debug()
    );

    this.transition(this.toRoute('record.show.edit.metadata.alternate.identifier'), this.fromRoute('record.show.edit.metadata.alternate.index'), this.use('toLeft'), this.reverse('toRight')
    //,this.debug()
    );

    this.transition(this.toRoute('record.show.edit.metadata.parent'), this.fromRoute('record.show.edit.metadata.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.metadata.parent.identifier'), this.fromRoute('record.show.edit.metadata.parent.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.spatial.raster'), this.fromRoute('record.show.edit.spatial.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.spatial.raster.attribute'), this.fromRoute('record.show.edit.spatial.raster.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.taxonomy.collection'), this.fromRoute('record.show.edit.taxonomy.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.taxonomy.collection.itis'), this.fromRoute('record.show.edit.taxonomy.collection.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.taxonomy.collection.system'), this.fromRoute('record.show.edit.taxonomy.collection.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.lineage.lineageobject'), this.fromRoute('record.show.edit.lineage.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.lineage.lineageobject.citation'), this.fromRoute('record.show.edit.lineage.lineageobject.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.lineage.lineageobject.citation.identifier'), this.fromRoute('record.show.edit.lineage.lineageobject.citation.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.lineage.lineageobject.step'), this.fromRoute('record.show.edit.lineage.lineageobject.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.lineage.lineageobject.step.citation'), this.fromRoute('record.show.edit.lineage.lineageobject.step.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.lineage.lineageobject.source'), this.fromRoute('record.show.edit.lineage.lineageobject.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.associated.resource'), this.fromRoute('record.show.edit.associated.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.documents.citation'), this.fromRoute('record.show.edit.documents.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.funding.allocation'), this.fromRoute('record.show.edit.funding.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.distribution.distributor'), this.fromRoute('record.show.edit.distribution.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('record.show.edit.distribution.distributor.transfer'), this.fromRoute('record.show.edit.distribution.distributor.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit'), this.fromRoute('dictionary.show.index'), this.use('toLeft'), this.reverse('toRight')
    //this.debug()
    );

    this.transition(this.toRoute('dictionary.show.edit.citation.identifier'), this.fromRoute('dictionary.show.edit.citation.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.domain.edit'), this.fromRoute('dictionary.show.edit.domain.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.domain.edit.item'), this.fromRoute('dictionary.show.edit.domain.edit.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.domain.edit.citation'), this.fromRoute('dictionary.show.edit.domain.edit.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.domain.edit.citation.identifier'), this.fromRoute('dictionary.show.edit.domain.edit.citation.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.entity.edit'), this.fromRoute('dictionary.show.edit.entity.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.entity.edit'), this.fromRoute('dictionary.show.edit.entity.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.entity.edit.citation'), this.fromRoute('dictionary.show.edit.entity.edit.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.entity.edit.citation.identifier'), this.fromRoute('dictionary.show.edit.entity.edit.citation.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.entity.edit.attribute'), this.fromRoute('dictionary.show.edit.entity.edit.index'), this.use('toLeft'), this.reverse('toRight'));
    this.transition(this.toRoute('dictionary.show.edit.entity.import'), this.fromRoute('dictionary.show.edit.entity.index'), this.use('toLeft'), this.reverse('toRight'));

    //non-route transitions
    this.transition(this.hasClass('md-itis-selected'), this.includingInitialRender(), this.toValue(true), this.use('toRight', {
      duration: 250
    }), this.reverse('toLeft', {
      duration: 250
    }) //,
    //this.debug()
    );

    this.transition(this.hasClass('md-itis-unselected'), this.includingInitialRender(), this.toValue(true), this.use('toLeft', {
      duration: 250
    }), this.reverse('toRight', {
      duration: 250
    }) //,
    //this.debug()
    );
  }
});
;define("mdeditor/transitions/cross-fade", ["exports", "liquid-fire/transitions/cross-fade"], function (_exports, _crossFade) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _crossFade.default;
    }
  });
});
;define("mdeditor/transitions/default", ["exports", "liquid-fire/transitions/default"], function (_exports, _default) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _default.default;
    }
  });
});
;define("mdeditor/transitions/explode", ["exports", "liquid-fire/transitions/explode"], function (_exports, _explode) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _explode.default;
    }
  });
});
;define("mdeditor/transitions/fade", ["exports", "liquid-fire/transitions/fade"], function (_exports, _fade) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _fade.default;
    }
  });
});
;define("mdeditor/transitions/flex-grow", ["exports", "liquid-fire/transitions/flex-grow"], function (_exports, _flexGrow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _flexGrow.default;
    }
  });
});
;define("mdeditor/transitions/fly-to", ["exports", "liquid-fire/transitions/fly-to"], function (_exports, _flyTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _flyTo.default;
    }
  });
});
;define("mdeditor/transitions/move-over", ["exports", "liquid-fire/transitions/move-over"], function (_exports, _moveOver) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _moveOver.default;
    }
  });
});
;define("mdeditor/transitions/scale", ["exports", "liquid-fire/transitions/scale"], function (_exports, _scale) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _scale.default;
    }
  });
});
;define("mdeditor/transitions/scroll-then", ["exports", "liquid-fire/transitions/scroll-then"], function (_exports, _scrollThen) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _scrollThen.default;
    }
  });
});
;define("mdeditor/transitions/to-down", ["exports", "liquid-fire/transitions/to-down"], function (_exports, _toDown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _toDown.default;
    }
  });
});
;define("mdeditor/transitions/to-left", ["exports", "liquid-fire/transitions/to-left"], function (_exports, _toLeft) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _toLeft.default;
    }
  });
});
;define("mdeditor/transitions/to-right", ["exports", "liquid-fire/transitions/to-right"], function (_exports, _toRight) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _toRight.default;
    }
  });
});
;define("mdeditor/transitions/to-up", ["exports", "liquid-fire/transitions/to-up"], function (_exports, _toUp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _toUp.default;
    }
  });
});
;define("mdeditor/transitions/wait", ["exports", "liquid-fire/transitions/wait"], function (_exports, _wait) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _wait.default;
    }
  });
});
;define("mdeditor/utils/calculate-position", ["exports", "ember-basic-dropdown/utils/calculate-position"], function (_exports, _calculatePosition) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _calculatePosition.default;
    }
  });
});
;define("mdeditor/utils/config", ["exports", "mdeditor-sciencebase/utils/config"], function (_exports, _config) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _config.default;
    }
  });
});
;define("mdeditor/utils/fmt", ["exports", "ember-models-table/utils/fmt"], function (_exports, _fmt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _fmt.default;
    }
  });
});
;define("mdeditor/utils/md-interpolate", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.parseArgs = _exports.interpolate = void 0;
  let interpolate = function interpolate(str, obj) {
    let parts = str.split(/\$\{(?!\d)[^0-9][a-zA-Z0-9.]+\}/);
    let args = parseArgs(str);
    let parameters = args.map(argument => obj[argument] || (obj[argument] === undefined ? "" : obj[argument]));
    return String.raw({
      raw: parts
    }, ...parameters);
  };
  _exports.interpolate = interpolate;
  let parseArgs = function parseArgs(str) {
    let args = str.match(/[^{}]+(?=})/g) || [];
    return args;
  };
  _exports.parseArgs = parseArgs;
});
;define("mdeditor/utils/md-object", ["exports", "mdeditor/services/cleaner"], function (_exports, _cleaner) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.isEmpty = void 0;
  const isEmpty = function isEmpty(obj) {
    if (obj !== null) {
      let empty = obj ? Object.keys((0, _cleaner.clean)(obj, {
        preserveArrays: false
      })).length === 0 : true;
      return empty;
    }
  };
  _exports.isEmpty = isEmpty;
});
;define("mdeditor/utils/sb-tree-node", ["exports", "mdeditor-sciencebase/utils/sb-tree-node"], function (_exports, _sbTreeNode) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _sbTreeNode.default;
    }
  });
});
;define("mdeditor/utils/titleize", ["exports", "ember-cli-string-helpers/utils/titleize"], function (_exports, _titleize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _titleize.default;
    }
  });
});
;define("mdeditor/uuid", ["exports", "uuid/v4"], function (_exports, _v) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "uuidV4", {
    enumerable: true,
    get: function get() {
      return _v.default;
    }
  });
});
;define("mdeditor/validators/alias", ["exports", "ember-cp-validations/validators/alias"], function (_exports, _alias) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _alias.default;
    }
  });
});
;define("mdeditor/validators/array-required", ["exports", "ember-cp-validations/validators/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const ArrayRequired = _base.default.extend({
    /**
    * Validation that checks array length
    *
    * @module mdeditor
    * @submodule validator
    * @class array-required
    * @extends BaseValidator
    * @example
    *   validator('array-required', {
          track: ['type']
        })
    */

    /**
     * Validate the array
     *
     * @method validate
     * @param {Array} value The array to test
     * @param {Object} options
     * @return {Mixed} True or error message
     *
     */
    validate(value, options) {
      if (Ember.isArray(value)) {
        if (value.length) {
          return true;
        }
      }
      options.item = this.options.description || this.options.attribute;
      return this.createErrorMessage('arrayRequired', value, options);
    }
  });
  ArrayRequired.reopenClass({
    /**
     * Define attribute specific dependent keys for your validator
     *
     * [
     * 	`model.array.@each.${attribute}` --> Dependent is created on the model's context
     * 	`${attribute}.isValid` --> Dependent is created on the `model.validations.attrs` context
     * ]
     *
     * @property getDependentsFor
     * @param {String}  attribute   The attribute being evaluated
     * @param {Unknown} options     Options passed into your validator
     * @return {Array}
     */
    getDependentsFor(attribute, options) {
      //return[];
      let track = [];
      let opts = Ember.get(options, 'track');
      (true && !(Ember.isArray(opts)) && Ember.assert("[validator:array-valid] [".concat(attribute, "] option 'track' must be an array"), Ember.isArray(opts)));
      if (!Ember.isArray(opts)) return track;
      opts.forEach(itm => {
        track.push("model.".concat(attribute, ".@each.").concat(itm));
      });
      return track;
    }
  });
  var _default = ArrayRequired;
  _exports.default = _default;
});
;define("mdeditor/validators/array-valid", ["exports", "ember-cp-validations/validators/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  const ArrayValid = _base.default.extend({
    /**
    * Validation that checks validity of all array members
    *
    * @module mdeditor
    * @submodule validator
    * @class array-valid
    * @extends BaseValidator
    * @example
    *   validator('array-valid')
    */
    validate(value /*, options, model, attribute*/) {
      let check = value.some(itm => {
        return Ember.get(itm, 'validations.isInvalid');
      });
      return check ? 'At least one item is invalid.' : true;
    }
  });
  ArrayValid.reopenClass({
    /**
     * Define attribute specific dependent keys for your validator
     *
     * [
     * 	`model.array.@each.${attribute}` --> Dependent is created on the model's context
     * 	`${attribute}.isValid` --> Dependent is created on the `model.validations.attrs` context
     * ]
     *
     * @property getDependentsFor
     * @param {String}  attribute   The attribute being evaluated
     * @param {Unknown} options     Options passed into your validator
     * @return {Array}
     */
    getDependentsFor(attribute /*, options */) {
      return ["model.".concat(attribute, ".@each")];
    }
  });
  var _default = ArrayValid;
  _exports.default = _default;
});
;define("mdeditor/validators/belongs-to", ["exports", "ember-cp-validations/validators/belongs-to"], function (_exports, _belongsTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _belongsTo.default;
    }
  });
});
;define("mdeditor/validators/collection", ["exports", "ember-cp-validations/validators/collection"], function (_exports, _collection) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _collection.default;
    }
  });
});
;define("mdeditor/validators/confirmation", ["exports", "ember-cp-validations/validators/confirmation"], function (_exports, _confirmation) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _confirmation.default;
    }
  });
});
;define("mdeditor/validators/date", ["exports", "ember-cp-validations/validators/date"], function (_exports, _date) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _date.default;
    }
  });
});
;define("mdeditor/validators/dependent", ["exports", "ember-cp-validations/validators/dependent"], function (_exports, _dependent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dependent.default;
    }
  });
});
;define("mdeditor/validators/ds-error", ["exports", "ember-cp-validations/validators/ds-error"], function (_exports, _dsError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _dsError.default;
    }
  });
});
;define("mdeditor/validators/exclusion", ["exports", "ember-cp-validations/validators/exclusion"], function (_exports, _exclusion) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _exclusion.default;
    }
  });
});
;define("mdeditor/validators/format", ["exports", "ember-cp-validations/validators/format"], function (_exports, _format) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _format.default;
    }
  });
});
;define("mdeditor/validators/has-many", ["exports", "ember-cp-validations/validators/has-many"], function (_exports, _hasMany) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _hasMany.default;
    }
  });
});
;define("mdeditor/validators/inclusion", ["exports", "ember-cp-validations/validators/inclusion"], function (_exports, _inclusion) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _inclusion.default;
    }
  });
});
;define("mdeditor/validators/inline", ["exports", "ember-cp-validations/validators/inline"], function (_exports, _inline) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _inline.default;
    }
  });
});
;define("mdeditor/validators/length", ["exports", "ember-cp-validations/validators/length"], function (_exports, _length) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _length.default;
    }
  });
});
;define("mdeditor/validators/messages", ["exports", "ember-cp-validations/validators/messages"], function (_exports, _messages) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _messages.default.extend({
    arrayRequired: 'At least one {item} is required.'
  });
  _exports.default = _default;
});
;define("mdeditor/validators/number", ["exports", "ember-cp-validations/validators/number"], function (_exports, _number) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _number.default;
    }
  });
});
;define("mdeditor/validators/presence", ["exports", "ember-cp-validations/validators/presence"], function (_exports, _presence) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function get() {
      return _presence.default;
    }
  });
});
;define("mdeditor/views/application", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = Ember.Component.extend({});
  _exports.default = _default;
});
;

;define('mdeditor/config/environment', [], function() {
  var prefix = 'mdeditor';
try {
  var metaName = prefix + '/config/environment';
  var rawConfig = document.querySelector('meta[name="' + metaName + '"]').getAttribute('content');
  var config = JSON.parse(decodeURIComponent(rawConfig));

  var exports = { 'default': config };

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

});

;
          if (!runningTests) {
            require("mdeditor/app")["default"].create({"repository":"https://github.com/adiwg/mdEditor","defaultProfileId":"org.adiwg.profile.full","name":"mdeditor","version":"0.10.0+d6f2219b"});
          }
        
//# sourceMappingURL=mdeditor.map
